// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`select validation Accept empty where in findMany 1`] = `
query {
  findManyPost(where: {

  }) {
    author {
      id
    }
  }
}
`;

exports[`select validation Allow deep select query 1`] = `
query {
  findManyPost {
    author {
      id
    }
  }
}
`;

exports[`select validation Allow different iso strings 1 1`] = `
mutation {
  createOnePost(data: {
    title: "Some title"
    content: null
    published: false
    createdAt: "2020-05-05T16:28:33.983Z"
  }) {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation Allow different iso strings 2 1`] = `
mutation {
  createOnePost(data: {
    title: "Some title"
    content: null
    published: false
    createdAt: "2020-05-05T16:28:33.983+03:00"
  }) {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation Allow different iso strings 2 2`] = `
mutation {
  createOnePost(data: {
    title: "Some title"
    content: null
    published: false
    createdAt: "2020-05-05T16:28:33.983-02:00"
  }) {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation Allow empty input array 1`] = `
query {
  findManyPost(where: {
    id: {
      in: []
    }
  }) {
    author {
      id
    }
  }
}
`;

exports[`select validation Allow explicit null value 1`] = `
mutation {
  createOnePost(data: {
    title: "Some title"
    content: null
    published: false
  }) {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation Allow select with an include 1`] = `
query {
  findManyPost {
    author {
      id
      email
      name
      json
      countFloat
      countInt1
      countInt2
      countInt3
      countInt4
      countInt5
      countInt6
      lastLoginAt
      coinflips
      posts {
        id
        createdAt
        updatedAt
        published
        title
        content
        authorId
        optionnal
      }
    }
  }
}
`;

exports[`select validation Allow simple create mutation 1`] = `
mutation {
  createOnePost(data: {
    title: "Some title"
    content: "Some Content"
    published: false
  }) {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation Allow uuid array for string array 1`] = `
query {
  findManyPost(where: {
    id: {
      in: ["d4082b42-b161-11e9-8754-6542abf52968"]
    }
  }) {
    author {
      id
    }
  }
}
`;

exports[`select validation Allow uuid for string input 1`] = `
mutation {
  createOnePost(data: {
    title: "Some title"
    content: "123e4567-e89b-12d3-a456-426655440000"
    published: false
  }) {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation allow where with all undefined in findMany 1`] = `
query {
  findManyPost(where: {

  }) {
    author {
      id
    }
  }
}
`;

exports[`select validation missing arg object 1`] = `
mutation {
  createOnePost() {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation missing arg object 2`] = `

Invalid \`prisma.createOnePost()\` invocation:

{
+ data: {
+   id?: String,
+   createdAt?: DateTime,
+   updatedAt?: DateTime,
+   published: Boolean,
+   title: String,
+   content?: String | null,
+   optionnal?: Float | null,
+   author?: UserCreateOneWithoutPostsInput,
+   categories?: CategoryCreateManyWithoutPostsInput
+ }
}

Argument data is missing.

Note: Lines with + are required

`;

exports[`select validation missing arg object 3`] = `
mutation {
  createOnePost() {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation missing arg object 4`] = `

Invalid \`prisma.createOnePost()\` invocation:

{
+ data: {
+   id?: String,
+   createdAt?: DateTime,
+   updatedAt?: DateTime,
+   published: Boolean,
+   title: String,
+   content?: String | null,
+   optionnal?: Float | null,
+   author?: UserCreateOneWithoutPostsInput,
+   categories?: CategoryCreateManyWithoutPostsInput
+ }
}

Argument data is missing.

Note: Lines with + are required

`;

exports[`select validation missing arg object 5`] = `
Argument data is missing.

`;

exports[`select validation missing arg object 6`] = `

Invalid \`prisma.createOnePost()\` invocation:

{
+ data: {
+   id?: String,
+   createdAt?: DateTime,
+   updatedAt?: DateTime,
+   published: Boolean,
+   title: String,
+   content?: String | null,
+   optionnal?: Float | null,
+   author?: UserCreateOneWithoutPostsInput,
+   categories?: CategoryCreateManyWithoutPostsInput
+ }
}

Argument data is missing.

Note: Lines with + are required

`;

exports[`select validation missing arg scalar && object 1`] = `
mutation {
  createOnePost(data: {
    title: "string"
  }) {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation missing arg scalar && object 2`] = `

Invalid \`prisma.createOnePost()\` invocation:

{
  data: {
    title: 'string',
+   published: Boolean,
?   id?: String,
?   createdAt?: DateTime,
?   updatedAt?: DateTime,
?   content?: String | null,
?   optionnal?: Float | null,
?   author?: {
?     create?: UserCreateWithoutPostsInput,
?     connect?: UserWhereUniqueInput,
?     connectOrCreate?: UserCreateOrConnectWithoutpostsInput
?   },
?   categories?: {
?     create?: CategoryCreateWithoutPostsInput | CategoryCreateWithoutPostsInput,
?     connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput,
?     connectOrCreate?: CategoryCreateOrConnectWithoutpostsInput | CategoryCreateOrConnectWithoutpostsInput
?   }
  }
}

Argument published for data.published is missing.

Note: Lines with + are required, lines with ? are optional.

`;

exports[`select validation missing arg scalar 1`] = `
mutation {
  createOnePost(data: {
    title: "string"
    author: {
      connect: {
        id: ""
      }
    }
  }) {
    id
    createdAt
    updatedAt
    published
    title
    content
    authorId
    optionnal
  }
}
`;

exports[`select validation missing arg scalar 2`] = `

Invalid \`prisma.createOnePost()\` invocation:

{
  data: {
    title: 'string',
    author: {
      connect: {
        id: ''
      }
    },
+   published: Boolean,
?   id?: String,
?   createdAt?: DateTime,
?   updatedAt?: DateTime,
?   content?: String | null,
?   optionnal?: Float | null,
?   categories?: {
?     create?: CategoryCreateWithoutPostsInput | CategoryCreateWithoutPostsInput,
?     connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput,
?     connectOrCreate?: CategoryCreateOrConnectWithoutpostsInput | CategoryCreateOrConnectWithoutpostsInput
?   }
  }
}

Argument published for data.published is missing.

Note: Lines with + are required, lines with ? are optional.

`;

exports[`select validation reject all undefined where for findOne 1`] = `
query {
  findOnePost(where: {

  }) {
    author {
      id
    }
  }
}
`;

exports[`select validation reject all undefined where for findOne 2`] = `

Invalid \`prisma.findOnePost()\` invocation:

{
  select: {
    author: {
      select: {
        id: true
      }
    }
  },
  where: {
?   id?: String
  }
}

Argument where of type PostWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

`;

exports[`select validation reject empty where for findOne 1`] = `
query {
  findOnePost(where: {

  }) {
    author {
      id
    }
  }
}
`;

exports[`select validation reject empty where for findOne 2`] = `

Invalid \`prisma.findOnePost()\` invocation:

{
  select: {
    author: {
      select: {
        id: true
      }
    }
  },
  where: {
?   id?: String
  }
}

Argument where of type PostWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

`;

exports[`select validation unknown arg, field, incorrect arg type 1`] = `
query {
  findManyUser(
    skip: 200
    where: {
      name_in: ["hans", "peter", "schmidt"]
      AND: [
        {
          age_gt: 10123123123
          this_is_completely_arbitrary: "veryLongNameGoIntoaNewLineNow@gmail.com"
        },
        {
          age_gt: 10123123123
          id_endsWith: "veryLongNameGoIntoaNewLineNow@gmail.com"
          name_contains: "hans"
          name_gt: 2131203912039123
          name_in: ["hans"]
          AND: [
            {
              age_gt: "10123123123"
              id_endsWith: "veryLongNameGoIntoaNewLineNow@gmail.com"
            }
          ]
        }
      ]
    }
  ) {
    id
    name # INVALID_FIELD
    name2 # INVALID_FIELD
    posts(take: 200) {
      id
    }
  }
}
`;

exports[`select validation unknown arg, field, incorrect arg type 2`] = `
Unknown arg \`name_in\` in where.name_in for type UserWhereInput. Did you mean \`name\`?
Unknown arg \`age_gt\` in where.AND.0.age_gt for type UserWhereInput. Did you mean \`name\`?
Unknown arg \`this_is_completely_arbitrary\` in where.AND.0.this_is_completely_arbitrary for type UserWhereInput.
Unknown arg \`age_gt\` in where.AND.1.age_gt for type UserWhereInput. Did you mean \`name\`?
Unknown arg \`id_endsWith\` in where.AND.1.id_endsWith for type UserWhereInput.
Unknown arg \`name_contains\` in where.AND.1.name_contains for type UserWhereInput.
Unknown arg \`name_gt\` in where.AND.1.name_gt for type UserWhereInput. Did you mean \`name\`?
Unknown arg \`name_in\` in where.AND.1.name_in for type UserWhereInput. Did you mean \`name\`?
Unknown arg \`age_gt\` in where.AND.1.AND.0.age_gt for type UserWhereInput. Did you mean \`name\`?
Unknown arg \`id_endsWith\` in where.AND.1.AND.0.id_endsWith for type UserWhereInput.
Invalid value 'asd' of type String for field name on model User. Expected either true or false.
Unknown field \`name2\` for select statement on model User. Did you mean \`name\`?
`;

exports[`select validation unknown arg, field, incorrect arg type 3`] = `

Invalid \`prisma.findManyUser()\` invocation:

{
  skip: 200,
  where: {
    name_contains: undefined,
    name_in: [
    ~~~~~~~
      'hans',
      'peter',
      'schmidt'
    ],
    AND: [
      {
        age_gt: 10123123123,
        ~~~~~~
        this_is_completely_arbitrary: 'veryLongNameGoIntoaNewLineNow@gmail.com'
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      },
      {
        age_gt: 10123123123,
        ~~~~~~
        id_endsWith: 'veryLongNameGoIntoaNewLineNow@gmail.com',
        ~~~~~~~~~~~
        name_contains: 'hans',
        ~~~~~~~~~~~~~
        name_gt: 2131203912039123,
        ~~~~~~~
        name_in: [
        ~~~~~~~
          'hans'
        ],
        AND: [
          {
            age_gt: '10123123123',
            ~~~~~~
            id_endsWith: 'veryLongNameGoIntoaNewLineNow@gmail.com'
            ~~~~~~~~~~~
          }
        ]
      }
    ]
  },
  select: {
?   id?: true,
?   name?: true,
    name2: true,
    ~~~~~
?   posts?: true,
?   email?: true,
?   profile?: true,
?   json?: true,
?   countFloat?: true,
?   countInt1?: true,
?   countInt2?: true,
?   countInt3?: true,
?   countInt4?: true,
?   countInt5?: true,
?   countInt6?: true,
?   lastLoginAt?: true,
?   coinflips?: true
  }
}

Unknown arg \`name_in\` in where.name_in for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`age_gt\` in where.AND.0.age_gt for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`this_is_completely_arbitrary\` in where.AND.0.this_is_completely_arbitrary for type UserWhereInput. Available args:

type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`age_gt\` in where.AND.1.age_gt for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`id_endsWith\` in where.AND.1.id_endsWith for type UserWhereInput. Available args:

type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`name_contains\` in where.AND.1.name_contains for type UserWhereInput. Available args:

type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`name_gt\` in where.AND.1.name_gt for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`name_in\` in where.AND.1.name_in for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`age_gt\` in where.AND.1.AND.0.age_gt for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`id_endsWith\` in where.AND.1.AND.0.id_endsWith for type UserWhereInput. Available args:

type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Invalid value 'asd' of type String for field name on model User. Expected either true or false.
Unknown field \`name2\` for select statement on model User. Available options are listed in green. Did you mean \`name\`?

`;

exports[`select validation unknown arg, field, incorrect arg type 4`] = `

Invalid \`prisma.findManyUser()\` invocation:

{
  skip: 200,
  where: {
    name_contains: undefined,
    name_in: [
    ~~~~~~~
      'hans',
      'peter',
      'schmidt'
    ],
    AND: [
      {
        age_gt: 10123123123,
        ~~~~~~
        this_is_completely_arbitrary: 'veryLongNameGoIntoaNewLineNow@gmail.com'
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      },
      {
        age_gt: 10123123123,
        ~~~~~~
        id_endsWith: 'veryLongNameGoIntoaNewLineNow@gmail.com',
        ~~~~~~~~~~~
        name_contains: 'hans',
        ~~~~~~~~~~~~~
        name_gt: 2131203912039123,
        ~~~~~~~
        name_in: [
        ~~~~~~~
          'hans'
        ],
        AND: [
          {
            age_gt: '10123123123',
            ~~~~~~
            id_endsWith: 'veryLongNameGoIntoaNewLineNow@gmail.com'
            ~~~~~~~~~~~
          }
        ]
      }
    ]
  },
  select: {
?   id?: true,
?   name?: true,
    name2: true,
    ~~~~~
?   posts?: true,
?   email?: true,
?   profile?: true,
?   json?: true,
?   countFloat?: true,
?   countInt1?: true,
?   countInt2?: true,
?   countInt3?: true,
?   countInt4?: true,
?   countInt5?: true,
?   countInt6?: true,
?   lastLoginAt?: true,
?   coinflips?: true
  }
}

Unknown arg \`name_in\` in where.name_in for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`age_gt\` in where.AND.0.age_gt for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`this_is_completely_arbitrary\` in where.AND.0.this_is_completely_arbitrary for type UserWhereInput. Available args:

type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`age_gt\` in where.AND.1.age_gt for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`id_endsWith\` in where.AND.1.id_endsWith for type UserWhereInput. Available args:

type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`name_contains\` in where.AND.1.name_contains for type UserWhereInput. Available args:

type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`name_gt\` in where.AND.1.name_gt for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`name_in\` in where.AND.1.name_in for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`age_gt\` in where.AND.1.AND.0.age_gt for type UserWhereInput. Did you mean \`name\`? Available args:
type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Unknown arg \`id_endsWith\` in where.AND.1.AND.0.id_endsWith for type UserWhereInput. Available args:

type UserWhereInput {
  AND?: UserWhereInput | List<UserWhereInput>
  OR?: UserWhereInput | List<UserWhereInput>
  NOT?: UserWhereInput | List<UserWhereInput>
  id?: StringFilter | String
  email?: StringFilter | String
  name?: StringNullableFilter | String | Null
  posts?: PostListRelationFilter
  profile?: ProfileRelationFilter | ProfileWhereInput | Null
  json?: JsonNullableFilter
  countFloat?: FloatNullableFilter | Float | Null
  countInt1?: IntNullableFilter | Int | Null
  countInt2?: IntNullableFilter | Int | Null
  countInt3?: IntNullableFilter | Int | Null
  countInt4?: IntNullableFilter | Int | Null
  countInt5?: IntNullableFilter | Int | Null
  countInt6?: IntNullableFilter | Int | Null
  lastLoginAt?: DateTimeFilter | DateTime
  coinflips?: BoolNullableListFilter
}
Invalid value 'asd' of type String for field name on model User. Expected either true or false.
Unknown field \`name2\` for select statement on model User. Available options are listed in green. Did you mean \`name\`?

`;
