// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`no args createOne 1`] = `

Invalid \`prisma.user()\` invocation:

{
+ data: UserCreateInput | UserUncheckedCreateInput
}

Argument data is missing.

Note: Lines with + are required

`;

exports[`no args deleteOne 1`] = `

Invalid \`prisma.user()\` invocation:

{
+ where: {
+   id?: Int,
+   email?: String
+ }
}

Argument where is missing.

Note: Lines with + are required

`;

exports[`no args findMany with filter 1`] = `

Invalid \`prisma.user()\` invocation:

{
  where: {
    likedArticles: null
                   ~~~~
  }
}

Argument likedArticles for where.likedArticles must not be null. Please use undefined instead.


`;

exports[`no args findUnique 1`] = `

Invalid \`prisma.user()\` invocation:

{
+ where: {
+   id?: Int,
+   email?: String
+ }
}

Argument where is missing.

Note: Lines with + are required

`;

exports[`no args nested create 1`] = `

Invalid \`prisma.user()\` invocation:

{
  data: {
    likedArticles: {
?     create?: ArticleCreateWithoutLikedByInput | ArticleCreateWithoutLikedByInput[] | ArticleUncheckedCreateWithoutLikedByInput | ArticleUncheckedCreateWithoutLikedByInput[],
?     connectOrCreate?: ArticleCreateOrConnectWithoutLikedByInput | ArticleCreateOrConnectWithoutLikedByInput[],
?     connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    }
  }
}

Argument data.likedArticles.connect of type ArticleWhereUniqueInput needs at least one argument. Available args are listed in green.

Note: Lines with ? are optional.

`;

exports[`no args updateMany 1`] = `

Invalid \`prisma.user()\` invocation:

{
+ data: UserUpdateManyMutationInput | UserUncheckedUpdateManyInput,
? where?: {
?   AND?: UserWhereInput | UserWhereInput,
?   OR?: UserWhereInput,
?   NOT?: UserWhereInput | UserWhereInput,
?   id?: IntFilter | Int,
?   name?: StringFilter | String,
?   email?: StringFilter | String,
?   likedArticles?: ArticleListRelationFilter,
?   personaId?: IntFilter | Int,
?   persona?: PersonaRelationFilter | PersonaWhereInput
? }
}

Argument data is missing.

Note: Lines with + are required, lines with ? are optional.

`;

exports[`no args upsertOne 1`] = `

Invalid \`prisma.user()\` invocation:

{
+ where: {
+   id?: Int,
+   email?: String
+ },
+ create: UserCreateInput | UserUncheckedCreateInput,
+ update: UserUpdateInput | UserUncheckedUpdateInput
}

Argument where is missing.
Argument create is missing.
Argument update is missing.

Note: Lines with + are required

`;
