// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`runtime aggregations: aggregations example should succeed 1`] = `undefined`;

exports[`runtime async-hooks: async-hooks example should succeed 1`] = `undefined`;

exports[`runtime atomic-number-operations: atomic-number-operations example should succeed 1`] = `undefined`;

exports[`runtime blog: blog example should succeed 1`] = `undefined`;

exports[`runtime blog-dot-env: blog-dot-env example should succeed 1`] = `undefined`;

exports[`runtime blog-env: blog-env example should not succeed 1`] = `
"error: Environment variable not found: SQLITE_URL.
  -->  schema.prisma:3
   | 
 2 |   provider = \\"sqlite\\"
 3 |   url      = env(\\"SQLITE_URL\\")
   | 

Validation Error Count: 1"
`;

exports[`runtime blog-env-postgresql: blog-env-postgresql example should succeed 1`] = `undefined`;

exports[`runtime blog-update: blog-update example should succeed 1`] = `undefined`;

exports[`runtime chaining: chaining example should succeed 1`] = `
Array [
  null,
  null,
  null,
  null,
  null,
  null,
]
`;

exports[`runtime chmod: chmod example should succeed 1`] = `undefined`;

exports[`runtime corruption: corruption example should succeed 1`] = `undefined`;

exports[`runtime disconnect-finally: disconnect-finally example should succeed 1`] = `Array []`;

exports[`runtime disconnect-race: disconnect-race example should succeed 1`] = `Array []`;

exports[`runtime disconnect-while-query: disconnect-while-query example should succeed 1`] = `Array []`;

exports[`runtime distinct: distinct example should succeed 1`] = `undefined`;

exports[`runtime enums: enums example should succeed 1`] = `undefined`;

exports[`runtime error-link: error-link example should succeed 1`] = `undefined`;

exports[`runtime incorrect-column-type: incorrect-column-type example should not succeed 1`] = `
"
Invalid \`prisma.user.findMany()\` invocation in



  Attempted to serialize scalar '123' with incompatible type 'String'"
`;

exports[`runtime insensitiveFilters-postgresql: insensitiveFilters-postgresql example should succeed 1`] = `undefined`;

exports[`runtime middlewares: middlewares example should succeed 1`] = `undefined`;

exports[`runtime middlewares-manipulation: middlewares-manipulation example should succeed 1`] = `undefined`;

exports[`runtime missing-binary: missing-binary example should not succeed 1`] = `
"
Invalid \`prisma.user.findMany()\` invocation in



  Query engine binary for current platform could not be found.
This probably happens, because you built Prisma Client on a different platform.
(Prisma Client looked in \\"

Files in 

  Dataloader.d.ts
  browser-chalk.d.ts
  browser-terminal-link.d.ts
  browser.d.ts
  dmmf-types.d.ts
  dmmf.d.ts
  error-types.d.ts
  externalToInternalDmmf.d.ts
  getLogLevel.d.ts
  getPrismaClient.d.ts
  highlight
  index.d.ts
  index.js
  index.js.map
  mergeBy.d.ts
  query.d.ts
  transformDmmf.d.ts
  utils
  visit.d.ts


To solve this problem, add the platform X to the \\"generator\\" block in the \\"schema.prisma\\" file:
generator client {
  provider      = \\"prisma-client-js\\"
  binaryTargets = [\\"native\\"]
}

Then run \\"prisma generate\\" for your changes to take effect.
Read more about deploying Prisma Client: https:"
`;

exports[`runtime missing-binary-native: missing-binary-native example should not succeed 1`] = `
"
Invalid \`prisma.user.findMany()\` invocation in



  Query engine binary for current platform could not be found.
This probably happens, because you built Prisma Client on a different platform.
(Prisma Client looked in \\"

Files in 

  Dataloader.d.ts
  browser-chalk.d.ts
  browser-terminal-link.d.ts
  browser.d.ts
  dmmf-types.d.ts
  dmmf.d.ts
  error-types.d.ts
  externalToInternalDmmf.d.ts
  getLogLevel.d.ts
  getPrismaClient.d.ts
  highlight
  index.d.ts
  index.js
  index.js.map
  mergeBy.d.ts
  query.d.ts
  transformDmmf.d.ts
  utils
  visit.d.ts

You already added the platform X to the \\"generator\\" block
in the \\"schema.prisma\\" file as described in https:
but something went wrong. That's suboptimal.

Please create an issue at https:"
`;

exports[`runtime missing-column: missing-column example should not succeed 1`] = `
"
Invalid \`prisma.user.findMany()\` invocation in



  The column \`dev.User.name\` does not exist in the current database."
`;

exports[`runtime missing-relation: missing-relation example should succeed 1`] = `undefined`;

exports[`runtime missing-table: missing-table example should not succeed 1`] = `
"
Invalid \`prisma.user.findMany()\` invocation in



  The table \`dev.User\` does not exist in the current database."
`;

exports[`runtime multi-connect: multi-connect example should succeed 1`] = `Array []`;

exports[`runtime new-line: new-line example should succeed 1`] = `undefined`;

exports[`runtime relations: relations example should succeed 1`] = `undefined`;

exports[`runtime removed-experimental-flags: removed-experimental-flags example should succeed 1`] = `undefined`;

exports[`runtime removed-preview-flags: removed-preview-flags example should succeed 1`] = `undefined`;

exports[`runtime restart: restart example should succeed 1`] = `undefined`;

exports[`runtime sqlite-variable-limit: sqlite-variable-limit example should succeed 1`] = `undefined`;

exports[`runtime transaction: transaction example should succeed 1`] = `undefined`;

exports[`runtime uds: uds example should succeed 1`] = `
Array [
  Object {
    "email": "a@a.de",
    "id": "576eddf9-2434-421f-9a86-58bede16fd95",
    "name": "Alice",
  },
]
`;
