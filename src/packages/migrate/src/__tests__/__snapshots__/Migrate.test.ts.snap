// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`migrate.create custom folder and schema filename name ok 1`] = `
Array [
  Object {
    source: my_db,
    tag: CreateSource,
  },
  Object {
    argument: provider,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "sqlite",
  },
  Object {
    argument: url,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "***",
  },
  Object {
    argument: default,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: true,
  },
  Object {
    model: User,
    tag: CreateModel,
  },
  Object {
    arity: Required,
    field: id,
    model: User,
    tag: CreateField,
    type: Int,
  },
  Object {
    location: Object {
      directive: id,
      path: Object {
        field: id,
        model: User,
        tag: Field,
      },
    },
    tag: CreateDirective,
  },
]
`;

exports[`migrate.create custom folder and schema filename name ok 2`] = `Array []`;

exports[`migrate.create custom folder and schema filename name ok 3`] = `Array []`;

exports[`migrate.create custom schema filename ok 1`] = `
Array [
  Object {
    source: my_db,
    tag: CreateSource,
  },
  Object {
    argument: provider,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "sqlite",
  },
  Object {
    argument: url,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "***",
  },
  Object {
    argument: default,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: true,
  },
  Object {
    model: User,
    tag: CreateModel,
  },
  Object {
    arity: Required,
    field: id,
    model: User,
    tag: CreateField,
    type: Int,
  },
  Object {
    location: Object {
      directive: id,
      path: Object {
        field: id,
        model: User,
        tag: Field,
      },
    },
    tag: CreateDirective,
  },
]
`;

exports[`migrate.create custom schema filename ok 2`] = `Array []`;

exports[`migrate.create custom schema filename ok 3`] = `Array []`;

exports[`migrate.create dashes ok 1`] = `
Array [
  Object {
    source: my_db,
    tag: CreateSource,
  },
  Object {
    argument: provider,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "sqlite",
  },
  Object {
    argument: url,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "***",
  },
  Object {
    argument: default,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: true,
  },
  Object {
    model: User,
    tag: CreateModel,
  },
  Object {
    arity: Required,
    field: id,
    model: User,
    tag: CreateField,
    type: Int,
  },
  Object {
    location: Object {
      directive: id,
      path: Object {
        field: id,
        model: User,
        tag: Field,
      },
    },
    tag: CreateDirective,
  },
]
`;

exports[`migrate.create dashes ok 2`] = `Array []`;

exports[`migrate.create dashes ok 3`] = `Array []`;

exports[`migrate.create invalid ok 1`] = `
Array [
  Object {
    source: my_db,
    tag: CreateSource,
  },
  Object {
    argument: provider,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "sqlite",
  },
  Object {
    argument: url,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "***",
  },
  Object {
    argument: default,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: true,
  },
  Object {
    model: User,
    tag: CreateModel,
  },
  Object {
    arity: Required,
    field: id,
    model: User,
    tag: CreateField,
    type: Int,
  },
  Object {
    location: Object {
      directive: id,
      path: Object {
        field: id,
        model: User,
        tag: Field,
      },
    },
    tag: CreateDirective,
  },
  Object {
    arity: Optional,
    field: canBeNull,
    model: User,
    tag: CreateField,
    type: String,
  },
]
`;

exports[`migrate.create invalid ok 2`] = `Array []`;

exports[`migrate.create invalid ok 3`] = `Array []`;

exports[`migrate.create invalid ok 4`] = `

Prisma Migrate just created your migration XXXXXXXXXXXXXX-init in

migrations/
  ‚îî‚îÄ XXXXXXXXXXXXXX-init/
    ‚îî‚îÄ steps.json
    ‚îî‚îÄ schema.prisma
    ‚îî‚îÄ README.md

Run prisma migrate up --experimental to apply the migration

`;

exports[`migrate.create invalid ok 5`] = `
Array [
  Object {
    arity: Required,
    field: requiredSomething,
    model: User,
    tag: CreateField,
    type: String,
  },
  Object {
    arity: Required,
    field: canBeNull,
    model: User,
    tag: UpdateField,
  },
]
`;

exports[`migrate.create invalid ok 6`] = `Array []`;

exports[`migrate.create invalid ok 7`] = `


‚ö†Ô∏è We found migration(s) that cannot be executed:

  ‚Ä¢ Added the required column \`requiredSomething\` to the \`User\` table without a default value. There are 1 rows in this table, it is not possible to execute this migration.

`;

exports[`migrate.create invalid ok 8`] = `
Prisma schema loaded from schema-not-null.prisma
üìº  migrate save --name init-2

Local datamodel Changes:

model User {
  id Int @id
  canBeNull String?
  canBeNull String
  requiredSomething String
}
`;

exports[`migrate.create simple debug panic 1`] = `
Error in migration engine.
Reason: [/rustc/hash/macros.rs:0:0] This is the debugPanic artificial panic

Please create an issue in the migrate repo with
your \`schema.prisma\` and the prisma command you tried to use üôè:
https://github.com/prisma/migrate/issues/new

`;

exports[`migrate.create simple ok 1`] = `
Array [
  Object {
    source: my_db,
    tag: CreateSource,
  },
  Object {
    argument: provider,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "sqlite",
  },
  Object {
    argument: url,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "***",
  },
  Object {
    argument: default,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: true,
  },
  Object {
    model: User,
    tag: CreateModel,
  },
  Object {
    arity: Required,
    field: id,
    model: User,
    tag: CreateField,
    type: Int,
  },
  Object {
    location: Object {
      directive: id,
      path: Object {
        field: id,
        model: User,
        tag: Field,
      },
    },
    tag: CreateDirective,
  },
]
`;

exports[`migrate.create simple ok 2`] = `Array []`;

exports[`migrate.create simple ok 3`] = `Array []`;

exports[`migrate.create spaces ok 1`] = `
Array [
  Object {
    source: my_db,
    tag: CreateSource,
  },
  Object {
    argument: provider,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "sqlite",
  },
  Object {
    argument: url,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: "***",
  },
  Object {
    argument: default,
    location: Object {
      source: my_db,
      tag: Source,
    },
    tag: CreateArgument,
    value: true,
  },
  Object {
    model: User,
    tag: CreateModel,
  },
  Object {
    arity: Required,
    field: id,
    model: User,
    tag: CreateField,
    type: Int,
  },
  Object {
    location: Object {
      directive: id,
      path: Object {
        field: id,
        model: User,
        tag: Field,
      },
    },
    tag: CreateDirective,
  },
]
`;

exports[`migrate.create spaces ok 2`] = `Array []`;

exports[`migrate.create spaces ok 3`] = `Array []`;
