// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`introspection: create bigint data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model migrate {
  version Int @id
}

`;

exports[`introspection: create bigint data: warnings 1`] = `Array []`;

exports[`introspection: create with data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id   Int    @id @default(autoincrement())
  name String @unique
}

`;

exports[`introspection: create with data: warnings 1`] = `Array []`;

exports[`introspection: create with empty data and SQL default: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id   Int    @id @default(autoincrement())
  name String @default("alice")
}

`;

exports[`introspection: create with empty data and SQL default: warnings 1`] = `Array []`;

exports[`introspection: delete where composite PK: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model variables {
  name  String
  key   String
  value String
  email String

  @@id([name, key])
}

`;

exports[`introspection: delete where composite PK: warnings 1`] = `Array []`;

exports[`introspection: delete where composite unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model users {
  id    Int    @id @default(autoincrement())
  email String
  name  String

  @@unique([email, name], name: "users_email_name_key")
}

`;

exports[`introspection: delete where composite unique: warnings 1`] = `Array []`;

exports[`introspection: deleteMany where enum - check count: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int             @id @default(autoincrement())
  title     String
  published posts_published @default(DRAFT)
}

enum posts_published {
  DRAFT
  PUBLISHED
}

`;

exports[`introspection: deleteMany where enum - check count: warnings 1`] = `Array []`;

exports[`introspection: deleteMany where enum - check findMany: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int             @id @default(autoincrement())
  title     String
  published posts_published @default(DRAFT)
}

enum posts_published {
  DRAFT
  PUBLISHED
}

`;

exports[`introspection: deleteMany where enum - check findMany: warnings 1`] = `Array []`;

exports[`introspection: findMany - default enum: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int             @id @default(autoincrement())
  title     String
  published posts_published @default(DRAFT)
}

enum posts_published {
  DRAFT
  PUBLISHED
}

`;

exports[`introspection: findMany - default enum: warnings 1`] = `Array []`;

exports[`introspection: findMany - email text: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model users {
  id    Int     @id @default(autoincrement())
  email String?
}

`;

exports[`introspection: findMany - email text: warnings 1`] = `Array []`;

exports[`introspection: findMany - email varchar(50) not null unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model users {
  id    Int    @id @default(autoincrement())
  email String @unique
}

`;

exports[`introspection: findMany - email varchar(50) not null unique: warnings 1`] = `Array []`;

exports[`introspection: findMany orderBy asc: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int     @id @default(autoincrement())
  title     String
  published Boolean @default(false)
}

`;

exports[`introspection: findMany orderBy asc: warnings 1`] = `Array []`;

exports[`introspection: findMany orderBy desc: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int     @id @default(autoincrement())
  title     String
  published Boolean @default(false)
}

`;

exports[`introspection: findMany orderBy desc: warnings 1`] = `Array []`;

exports[`introspection: findMany where - case insensitive field: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model users {
  id    Int    @id @default(autoincrement())
  email String @unique
}

`;

exports[`introspection: findMany where - case insensitive field: warnings 1`] = `Array []`;

exports[`introspection: findMany where OR[contains, contains] : datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int     @id @default(autoincrement())
  title     String
  published Boolean @default(false)
}

`;

exports[`introspection: findMany where OR[contains, contains] : warnings 1`] = `Array []`;

exports[`introspection: findMany where contains and boolean: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int     @id @default(autoincrement())
  title     String
  published Boolean @default(false)
}

`;

exports[`introspection: findMany where contains and boolean: warnings 1`] = `Array []`;

exports[`introspection: findMany where contains: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model crons {
  id        Int     @id @default(autoincrement())
  job       String  @unique
  frequency String?
}

`;

exports[`introspection: findMany where contains: warnings 1`] = `Array []`;

exports[`introspection: findMany where datetime exact: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model events {
  id   Int       @id @default(autoincrement())
  time DateTime?
}

`;

exports[`introspection: findMany where datetime exact: warnings 1`] = `Array []`;

exports[`introspection: findMany where datetime gt: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model events {
  id   Int       @id @default(autoincrement())
  time DateTime?
}

`;

exports[`introspection: findMany where datetime gt: warnings 1`] = `Array []`;

exports[`introspection: findMany where datetime gte: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model events {
  id   Int       @id @default(autoincrement())
  time DateTime?
}

`;

exports[`introspection: findMany where datetime gte: warnings 1`] = `Array []`;

exports[`introspection: findMany where datetime lt: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model events {
  id   Int       @id @default(autoincrement())
  time DateTime?
}

`;

exports[`introspection: findMany where datetime lt: warnings 1`] = `Array []`;

exports[`introspection: findMany where datetime lte - check instanceof Date: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id         Int      @id @default(autoincrement())
  title      String
  created_at DateTime @default(now())
}

`;

exports[`introspection: findMany where datetime lte - check instanceof Date: warnings 1`] = `Array []`;

exports[`introspection: findMany where datetime lte: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model events {
  id   Int       @id @default(autoincrement())
  time DateTime?
}

`;

exports[`introspection: findMany where datetime lte: warnings 1`] = `Array []`;

exports[`introspection: findMany where datetime not: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model events {
  id   Int       @id @default(autoincrement())
  time DateTime?
}

`;

exports[`introspection: findMany where datetime not: warnings 1`] = `Array []`;

exports[`introspection: findMany where decimal: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model exercises {
  id       Int   @id @default(autoincrement())
  distance Float
}

`;

exports[`introspection: findMany where decimal: warnings 1`] = `Array []`;

exports[`introspection: findMany where empty in[]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id    Int    @id @default(autoincrement())
  token Int    @unique
  name  String
}

`;

exports[`introspection: findMany where empty in[]: warnings 1`] = `Array []`;

exports[`introspection: findMany where empty notIn[]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id    Int    @id @default(autoincrement())
  token Int    @unique
  name  String
}

`;

exports[`introspection: findMany where empty notIn[]: warnings 1`] = `Array []`;

exports[`introspection: findMany where endsWith: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model crons {
  id        Int     @id @default(autoincrement())
  job       String  @unique
  frequency String?
}

`;

exports[`introspection: findMany where endsWith: warnings 1`] = `Array []`;

exports[`introspection: findMany where id empty in[] and token in[]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id    Int    @id @default(autoincrement())
  token Int    @unique
  name  String
}

`;

exports[`introspection: findMany where id empty in[] and token in[]: warnings 1`] = `Array []`;

exports[`introspection: findMany where in[integer]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id    Int    @id @default(autoincrement())
  token Int    @unique
  name  String
}

`;

exports[`introspection: findMany where in[integer]: warnings 1`] = `Array []`;

exports[`introspection: findMany where in[string]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model crons {
  id        Int     @id @default(autoincrement())
  job       String  @unique
  frequency String?
}

`;

exports[`introspection: findMany where in[string]: warnings 1`] = `Array []`;

exports[`introspection: findMany where notIn[]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id    Int    @id @default(autoincrement())
  token Int    @unique
  name  String
}

`;

exports[`introspection: findMany where notIn[]: warnings 1`] = `Array []`;

exports[`introspection: findMany where null: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model events {
  id   Int       @id @default(autoincrement())
  time DateTime?
}

`;

exports[`introspection: findMany where null: warnings 1`] = `Array []`;

exports[`introspection: findMany where startsWith: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model crons {
  id        Int     @id @default(autoincrement())
  job       String  @unique
  frequency String?
}

`;

exports[`introspection: findMany where startsWith: warnings 1`] = `Array []`;

exports[`introspection: findMany where timestamp gt than now: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id         Int      @id @default(autoincrement())
  title      String
  created_at DateTime @default(now())
}

`;

exports[`introspection: findMany where timestamp gt than now: warnings 1`] = `Array []`;

exports[`introspection: findMany where timestamp gte than now: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id         Int      @id @default(autoincrement())
  title      String
  created_at DateTime @default(now())
}

`;

exports[`introspection: findMany where timestamp gte than now: warnings 1`] = `Array []`;

exports[`introspection: findMany where timestamp lt than now: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id         Int      @id @default(autoincrement())
  title      String
  created_at DateTime @default(now())
}

`;

exports[`introspection: findMany where timestamp lt than now: warnings 1`] = `Array []`;

exports[`introspection: findMany where unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model users {
  id    Int    @id @default(autoincrement())
  email String @unique
}

`;

exports[`introspection: findMany where unique: warnings 1`] = `Array []`;

exports[`introspection: findOne where PK with include: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id      Int    @id @default(autoincrement())
  user_id Int
  title   String
  users   users  @relation(fields: [user_id], references: [id])

  @@index([user_id], name: "user_id")
}

model users {
  id    Int     @id @default(autoincrement())
  email String  @unique
  posts posts[]
}

`;

exports[`introspection: findOne where PK with include: warnings 1`] = `Array []`;

exports[`introspection: findOne where PK with select: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id    Int    @id
  name  String @unique
  email String @unique
}

`;

exports[`introspection: findOne where PK with select: warnings 1`] = `Array []`;

exports[`introspection: findOne where PK: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id   Int    @id
  name String @unique
}

`;

exports[`introspection: findOne where PK: warnings 1`] = `Array []`;

exports[`introspection: findOne where composite PK with foreign key: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model a {
  one Int
  two Int
  b   b[]

  @@id([one, two])
}

model b {
  id  Int @id @default(autoincrement())
  one Int
  two Int
  a   a   @relation(fields: [one, two], references: [one, two])

  @@index([one, two], name: "one")
}

`;

exports[`introspection: findOne where composite PK with foreign key: warnings 1`] = `Array []`;

exports[`introspection: findOne where composite PK: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model variables {
  name  String
  key   String
  value String
  email String

  @@id([name, key])
}

`;

exports[`introspection: findOne where composite PK: warnings 1`] = `Array []`;

exports[`introspection: findOne where composite unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model users {
  id    Int    @id @default(autoincrement())
  email String
  name  String

  @@unique([email, name], name: "users_email_name_key")
}

`;

exports[`introspection: findOne where composite unique: warnings 1`] = `Array []`;

exports[`introspection: findOne where decimal: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model exercises {
  id       Int   @id @default(autoincrement())
  distance Float @unique
}

`;

exports[`introspection: findOne where decimal: warnings 1`] = `Array []`;

exports[`introspection: findOne where unique composite (PK is a composite): datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model variables {
  name  String
  key   String
  value String
  email String

  @@id([name, key])
  @@unique([value, email], name: "variables_value_email_key")
}

`;

exports[`introspection: findOne where unique composite (PK is a composite): warnings 1`] = `Array []`;

exports[`introspection: findOne where unique composite: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model variables {
  id    Int    @id @default(autoincrement())
  name  String
  key   String
  value String
  email String

  @@unique([name, key], name: "variables_name_key_key")
}

`;

exports[`introspection: findOne where unique composite: warnings 1`] = `Array []`;

exports[`introspection: findOne where unique with foreign key and unpack: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id      Int    @id @default(autoincrement())
  user_id Int
  title   String
  users   users  @relation(fields: [user_id], references: [id])

  @@index([user_id], name: "user_id")
}

model users {
  id    Int     @id @default(autoincrement())
  email String  @unique
  posts posts[]
}

`;

exports[`introspection: findOne where unique with foreign key and unpack: warnings 1`] = `Array []`;

exports[`introspection: findOne where unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model users {
  id    Int    @id @default(autoincrement())
  email String @unique
}

`;

exports[`introspection: findOne where unique: warnings 1`] = `Array []`;

exports[`introspection: update where composite PK: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model variables {
  name  String
  key   String
  value String
  email String

  @@id([name, key])
}

`;

exports[`introspection: update where composite PK: warnings 1`] = `Array []`;

exports[`introspection: update where composite unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model users {
  id    Int    @id @default(autoincrement())
  email String
  name  String

  @@unique([email, name], name: "users_email_name_key")
}

`;

exports[`introspection: update where composite unique: warnings 1`] = `Array []`;

exports[`introspection: update where integer data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id    Int @id @default(autoincrement())
  token Int @unique
}

`;

exports[`introspection: update where integer data: warnings 1`] = `Array []`;

exports[`introspection: update where with boolean data and select: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  active Boolean @default(true)
}

`;

exports[`introspection: update where with boolean data and select: warnings 1`] = `Array []`;

exports[`introspection: update where with boolean data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  active Boolean @default(true)
}

`;

exports[`introspection: update where with boolean data: warnings 1`] = `Array []`;

exports[`introspection: update where with numeric data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id   Int    @id @default(autoincrement())
  name String @unique
}

`;

exports[`introspection: update where with numeric data: warnings 1`] = `Array []`;

exports[`introspection: update where with string data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id   Int    @id @default(autoincrement())
  name String @unique
}

`;

exports[`introspection: update where with string data: warnings 1`] = `Array []`;

exports[`introspection: update with data - not null enum - check findMany: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int             @id @default(autoincrement())
  title     String
  published posts_published @default(DRAFT)
}

enum posts_published {
  DRAFT
  PUBLISHED
}

`;

exports[`introspection: update with data - not null enum - check findMany: warnings 1`] = `Array []`;

exports[`introspection: update with data - not null enum: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int             @id @default(autoincrement())
  title     String
  published posts_published @default(DRAFT)
}

enum posts_published {
  DRAFT
  PUBLISHED
}

`;

exports[`introspection: update with data - not null enum: warnings 1`] = `Array []`;

exports[`introspection: updateMany where null - check findMany: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id   Int     @id @default(autoincrement())
  name String?
}

`;

exports[`introspection: updateMany where null - check findMany: warnings 1`] = `Array []`;

exports[`introspection: updateMany where with string data - check findMany: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id   Int    @id @default(autoincrement())
  name String
}

`;

exports[`introspection: updateMany where with string data - check findMany: warnings 1`] = `Array []`;

exports[`introspection: updateMany where with string data - check returned count: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model teams {
  id   Int    @id @default(autoincrement())
  name String
}

`;

exports[`introspection: updateMany where with string data - check returned count: warnings 1`] = `Array []`;

exports[`introspection: updateMany with data - not null enum - check count: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int             @id @default(autoincrement())
  title     String
  published posts_published @default(DRAFT)
}

enum posts_published {
  DRAFT
  PUBLISHED
}

`;

exports[`introspection: updateMany with data - not null enum - check count: warnings 1`] = `Array []`;

exports[`introspection: upsert (create): datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int     @id @default(autoincrement())
  title     String
  published Boolean @default(false)
}

`;

exports[`introspection: upsert (create): warnings 1`] = `Array []`;

exports[`introspection: upsert (update): datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model posts {
  id        Int     @id @default(autoincrement())
  title     String
  published Boolean @default(false)
}

`;

exports[`introspection: upsert (update): warnings 1`] = `Array []`;

exports[`introspection: upsert where composite PK - create: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model variables {
  name  String
  key   String
  value String
  email String

  @@id([name, key])
}

`;

exports[`introspection: upsert where composite PK - create: warnings 1`] = `Array []`;

exports[`introspection: upsert where composite PK - update: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource mysql {
  provider = "mysql"
  url = "***"
}

model variables {
  name  String
  key   String
  value String
  email String

  @@id([name, key])
}

`;

exports[`introspection: upsert where composite PK - update: warnings 1`] = `Array []`;
