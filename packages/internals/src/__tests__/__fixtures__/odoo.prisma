datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model base_import_import {
  id                                                 Int        @id @default(autoincrement())
  res_model                                          String?    @db.VarChar
  file                                               Bytes?
  file_name                                          String?    @db.VarChar
  file_type                                          String?    @db.VarChar
  create_uid                                         Int?
  create_date                                        DateTime?  @db.Timestamp(6)
  write_uid                                          Int?
  write_date                                         DateTime?  @db.Timestamp(6)
  res_users_base_import_import_create_uidTores_users res_users? @relation("base_import_import_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_import_write_uidTores_users  res_users? @relation("base_import_import_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_mapping {
  id                                                  Int        @id @default(autoincrement())
  res_model                                           String?    @db.VarChar
  column_name                                         String?    @db.VarChar
  field_name                                          String?    @db.VarChar
  create_uid                                          Int?
  create_date                                         DateTime?  @db.Timestamp(6)
  write_uid                                           Int?
  write_date                                          DateTime?  @db.Timestamp(6)
  res_users_base_import_mapping_create_uidTores_users res_users? @relation("base_import_mapping_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_mapping_write_uidTores_users  res_users? @relation("base_import_mapping_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([res_model], map: "base_import_mapping_res_model_index")
}

model base_import_tests_models_char {
  id                                                            Int        @id @default(autoincrement())
  value                                                         String?    @db.VarChar
  create_uid                                                    Int?
  create_date                                                   DateTime?  @db.Timestamp(6)
  write_uid                                                     Int?
  write_date                                                    DateTime?  @db.Timestamp(6)
  res_users_base_import_tests_models_char_create_uidTores_users res_users? @relation("base_import_tests_models_char_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_char_write_uidTores_users  res_users? @relation("base_import_tests_models_char_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_char_noreadonly {
  id                                                                       Int        @id @default(autoincrement())
  value                                                                    String?    @db.VarChar
  create_uid                                                               Int?
  create_date                                                              DateTime?  @db.Timestamp(6)
  write_uid                                                                Int?
  write_date                                                               DateTime?  @db.Timestamp(6)
  res_users_base_import_tests_models_char_noreadonly_create_uidTores_users res_users? @relation("base_import_tests_models_char_noreadonly_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_char_noreadonly_write_uidTores_users  res_users? @relation("base_import_tests_models_char_noreadonly_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_char_readonly {
  id                                                                     Int        @id @default(autoincrement())
  value                                                                  String?    @db.VarChar
  create_uid                                                             Int?
  create_date                                                            DateTime?  @db.Timestamp(6)
  write_uid                                                              Int?
  write_date                                                             DateTime?  @db.Timestamp(6)
  res_users_base_import_tests_models_char_readonly_create_uidTores_users res_users? @relation("base_import_tests_models_char_readonly_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_char_readonly_write_uidTores_users  res_users? @relation("base_import_tests_models_char_readonly_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_char_required {
  id                                                                     Int        @id @default(autoincrement())
  value                                                                  String     @db.VarChar
  create_uid                                                             Int?
  create_date                                                            DateTime?  @db.Timestamp(6)
  write_uid                                                              Int?
  write_date                                                             DateTime?  @db.Timestamp(6)
  res_users_base_import_tests_models_char_required_create_uidTores_users res_users? @relation("base_import_tests_models_char_required_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_char_required_write_uidTores_users  res_users? @relation("base_import_tests_models_char_required_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_char_states {
  id                                                                   Int        @id @default(autoincrement())
  value                                                                String?    @db.VarChar
  create_uid                                                           Int?
  create_date                                                          DateTime?  @db.Timestamp(6)
  write_uid                                                            Int?
  write_date                                                           DateTime?  @db.Timestamp(6)
  res_users_base_import_tests_models_char_states_create_uidTores_users res_users? @relation("base_import_tests_models_char_states_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_char_states_write_uidTores_users  res_users? @relation("base_import_tests_models_char_states_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_char_stillreadonly {
  id                                                                          Int        @id @default(autoincrement())
  value                                                                       String?    @db.VarChar
  create_uid                                                                  Int?
  create_date                                                                 DateTime?  @db.Timestamp(6)
  write_uid                                                                   Int?
  write_date                                                                  DateTime?  @db.Timestamp(6)
  res_users_base_import_tests_models_char_stillreadonly_create_uidTores_users res_users? @relation("base_import_tests_models_char_stillreadonly_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_char_stillreadonly_write_uidTores_users  res_users? @relation("base_import_tests_models_char_stillreadonly_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_complex {
  id                                                               Int           @id @default(autoincrement())
  f                                                                Float?
  m                                                                Decimal?      @db.Decimal
  c                                                                String?       @db.VarChar
  currency_id                                                      Int?
  d                                                                DateTime?     @db.Date
  dt                                                               DateTime?     @db.Timestamp(6)
  create_uid                                                       Int?
  create_date                                                      DateTime?     @db.Timestamp(6)
  write_uid                                                        Int?
  write_date                                                       DateTime?     @db.Timestamp(6)
  res_users_base_import_tests_models_complex_create_uidTores_users res_users?    @relation("base_import_tests_models_complex_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                                     res_currency? @relation(fields: [currency_id], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_complex_write_uidTores_users  res_users?    @relation("base_import_tests_models_complex_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_float {
  id                                                             Int           @id @default(autoincrement())
  value                                                          Float?
  value2                                                         Decimal?      @db.Decimal
  currency_id                                                    Int?
  create_uid                                                     Int?
  create_date                                                    DateTime?     @db.Timestamp(6)
  write_uid                                                      Int?
  write_date                                                     DateTime?     @db.Timestamp(6)
  res_users_base_import_tests_models_float_create_uidTores_users res_users?    @relation("base_import_tests_models_float_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                                   res_currency? @relation(fields: [currency_id], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_float_write_uidTores_users  res_users?    @relation("base_import_tests_models_float_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_m2o {
  id                                                           Int                                   @id @default(autoincrement())
  value                                                        Int?
  create_uid                                                   Int?
  create_date                                                  DateTime?                             @db.Timestamp(6)
  write_uid                                                    Int?
  write_date                                                   DateTime?                             @db.Timestamp(6)
  res_users_base_import_tests_models_m2o_create_uidTores_users res_users?                            @relation("base_import_tests_models_m2o_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  base_import_tests_models_m2o_related                         base_import_tests_models_m2o_related? @relation(fields: [value], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_m2o_write_uidTores_users  res_users?                            @relation("base_import_tests_models_m2o_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_m2o_related {
  id                                                                   Int                            @id @default(autoincrement())
  value                                                                Int?
  create_uid                                                           Int?
  create_date                                                          DateTime?                      @db.Timestamp(6)
  write_uid                                                            Int?
  write_date                                                           DateTime?                      @db.Timestamp(6)
  base_import_tests_models_m2o                                         base_import_tests_models_m2o[]
  res_users_base_import_tests_models_m2o_related_create_uidTores_users res_users?                     @relation("base_import_tests_models_m2o_related_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_m2o_related_write_uidTores_users  res_users?                     @relation("base_import_tests_models_m2o_related_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_m2o_required {
  id                                                                    Int                                           @id @default(autoincrement())
  value                                                                 Int
  create_uid                                                            Int?
  create_date                                                           DateTime?                                     @db.Timestamp(6)
  write_uid                                                             Int?
  write_date                                                            DateTime?                                     @db.Timestamp(6)
  res_users_base_import_tests_models_m2o_required_create_uidTores_users res_users?                                    @relation("base_import_tests_models_m2o_required_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  base_import_tests_models_m2o_required_related                         base_import_tests_models_m2o_required_related @relation(fields: [value], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_base_import_tests_models_m2o_required_write_uidTores_users  res_users?                                    @relation("base_import_tests_models_m2o_required_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_m2o_required_related {
  id                                                                            Int                                     @id @default(autoincrement())
  value                                                                         Int?
  create_uid                                                                    Int?
  create_date                                                                   DateTime?                               @db.Timestamp(6)
  write_uid                                                                     Int?
  write_date                                                                    DateTime?                               @db.Timestamp(6)
  base_import_tests_models_m2o_required                                         base_import_tests_models_m2o_required[]
  res_users_base_import_tests_models_m2o_required_related_create_uidTores_users res_users?                              @relation("base_import_tests_models_m2o_required_related_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_m2o_required_related_write_uidTores_users  res_users?                              @relation("base_import_tests_models_m2o_required_related_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_o2m {
  id                                                           Int                                  @id @default(autoincrement())
  create_uid                                                   Int?
  create_date                                                  DateTime?                            @db.Timestamp(6)
  write_uid                                                    Int?
  write_date                                                   DateTime?                            @db.Timestamp(6)
  res_users_base_import_tests_models_o2m_create_uidTores_users res_users?                           @relation("base_import_tests_models_o2m_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_o2m_write_uidTores_users  res_users?                           @relation("base_import_tests_models_o2m_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  base_import_tests_models_o2m_child                           base_import_tests_models_o2m_child[]
}

model base_import_tests_models_o2m_child {
  id                                                                 Int                           @id @default(autoincrement())
  parent_id                                                          Int?
  value                                                              Int?
  create_uid                                                         Int?
  create_date                                                        DateTime?                     @db.Timestamp(6)
  write_uid                                                          Int?
  write_date                                                         DateTime?                     @db.Timestamp(6)
  res_users_base_import_tests_models_o2m_child_create_uidTores_users res_users?                    @relation("base_import_tests_models_o2m_child_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  base_import_tests_models_o2m                                       base_import_tests_models_o2m? @relation(fields: [parent_id], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_o2m_child_write_uidTores_users  res_users?                    @relation("base_import_tests_models_o2m_child_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_import_tests_models_preview {
  id                                                               Int        @id @default(autoincrement())
  name                                                             String?    @db.VarChar
  somevalue                                                        Int
  othervalue                                                       Int?
  create_uid                                                       Int?
  create_date                                                      DateTime?  @db.Timestamp(6)
  write_uid                                                        Int?
  write_date                                                       DateTime?  @db.Timestamp(6)
  res_users_base_import_tests_models_preview_create_uidTores_users res_users? @relation("base_import_tests_models_preview_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_import_tests_models_preview_write_uidTores_users  res_users? @relation("base_import_tests_models_preview_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_language_export {
  id                                                   Int                      @id @default(autoincrement())
  name                                                 String?                  @db.VarChar
  lang                                                 String                   @db.VarChar
  format                                               String                   @db.VarChar
  data                                                 Bytes?
  state                                                String?                  @db.VarChar
  create_uid                                           Int?
  create_date                                          DateTime?                @db.Timestamp(6)
  write_uid                                            Int?
  write_date                                           DateTime?                @db.Timestamp(6)
  res_users_base_language_export_create_uidTores_users res_users?               @relation("base_language_export_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_language_export_write_uidTores_users  res_users?               @relation("base_language_export_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  rel_modules_langexport                               rel_modules_langexport[]
}

model base_language_import {
  id                                                   Int        @id @default(autoincrement())
  name                                                 String     @db.VarChar
  code                                                 String     @db.VarChar(6)
  data                                                 Bytes
  filename                                             String     @db.VarChar
  overwrite                                            Boolean?
  create_uid                                           Int?
  create_date                                          DateTime?  @db.Timestamp(6)
  write_uid                                            Int?
  write_date                                           DateTime?  @db.Timestamp(6)
  res_users_base_language_import_create_uidTores_users res_users? @relation("base_language_import_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_language_import_write_uidTores_users  res_users? @relation("base_language_import_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_language_install {
  id                                                    Int                                 @id @default(autoincrement())
  lang                                                  String                              @db.VarChar
  overwrite                                             Boolean?
  state                                                 String?                             @db.VarChar
  create_uid                                            Int?
  create_date                                           DateTime?                           @db.Timestamp(6)
  write_uid                                             Int?
  write_date                                            DateTime?                           @db.Timestamp(6)
  res_users_base_language_install_create_uidTores_users res_users?                          @relation("base_language_install_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_language_install_write_uidTores_users  res_users?                          @relation("base_language_install_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  base_language_install_website_rel                     base_language_install_website_rel[]
}

model base_language_install_website_rel {
  base_language_install_id Int
  website_id               Int
  base_language_install    base_language_install @relation(fields: [base_language_install_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  website                  website               @relation(fields: [website_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([base_language_install_id, website_id], map: "base_language_install_website_base_language_install_id_webs_key")
  @@index([base_language_install_id])
  @@index([website_id])
}

model base_module_uninstall {
  id                                                    Int              @id @default(autoincrement())
  show_all                                              Boolean?
  module_id                                             Int
  create_uid                                            Int?
  create_date                                           DateTime?        @db.Timestamp(6)
  write_uid                                             Int?
  write_date                                            DateTime?        @db.Timestamp(6)
  res_users_base_module_uninstall_create_uidTores_users res_users?       @relation("base_module_uninstall_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_module_module                                      ir_module_module @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_base_module_uninstall_write_uidTores_users  res_users?       @relation("base_module_uninstall_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_module_update {
  id                                                 Int        @id @default(autoincrement())
  updated                                            Int?
  added                                              Int?
  state                                              String?    @db.VarChar
  create_uid                                         Int?
  create_date                                        DateTime?  @db.Timestamp(6)
  write_uid                                          Int?
  write_date                                         DateTime?  @db.Timestamp(6)
  res_users_base_module_update_create_uidTores_users res_users? @relation("base_module_update_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_module_update_write_uidTores_users  res_users? @relation("base_module_update_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_module_upgrade {
  id                                                  Int        @id @default(autoincrement())
  module_info                                         String?
  create_uid                                          Int?
  create_date                                         DateTime?  @db.Timestamp(6)
  write_uid                                           Int?
  write_date                                          DateTime?  @db.Timestamp(6)
  res_users_base_module_upgrade_create_uidTores_users res_users? @relation("base_module_upgrade_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_module_upgrade_write_uidTores_users  res_users? @relation("base_module_upgrade_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_partner_merge_automatic_wizard {
  id                                                                                                   Int                                                   @id @default(autoincrement())
  group_by_email                                                                                       Boolean?
  group_by_name                                                                                        Boolean?
  group_by_is_company                                                                                  Boolean?
  group_by_vat                                                                                         Boolean?
  group_by_parent_id                                                                                   Boolean?
  state                                                                                                String                                                @db.VarChar
  number_group                                                                                         Int?
  current_line_id                                                                                      Int?
  dst_partner_id                                                                                       Int?
  exclude_contact                                                                                      Boolean?
  exclude_journal_item                                                                                 Boolean?
  maximum_group                                                                                        Int?
  create_uid                                                                                           Int?
  create_date                                                                                          DateTime?                                             @db.Timestamp(6)
  write_uid                                                                                            Int?
  write_date                                                                                           DateTime?                                             @db.Timestamp(6)
  res_users_base_partner_merge_automatic_wizard_create_uidTores_users                                  res_users?                                            @relation("base_partner_merge_automatic_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  base_partner_merge_line_base_partner_merge_automatic_wizard_current_line_idTobase_partner_merge_line base_partner_merge_line?                              @relation("base_partner_merge_automatic_wizard_current_line_idTobase_partner_merge_line", fields: [current_line_id], references: [id], onUpdate: NoAction)
  res_partner                                                                                          res_partner?                                          @relation(fields: [dst_partner_id], references: [id], onUpdate: NoAction)
  res_users_base_partner_merge_automatic_wizard_write_uidTores_users                                   res_users?                                            @relation("base_partner_merge_automatic_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  base_partner_merge_automatic_wizard_res_partner_rel                                                  base_partner_merge_automatic_wizard_res_partner_rel[]
  base_partner_merge_line_base_partner_merge_line_wizard_idTobase_partner_merge_automatic_wizard       base_partner_merge_line[]                             @relation("base_partner_merge_line_wizard_idTobase_partner_merge_automatic_wizard")
}

model base_partner_merge_automatic_wizard_res_partner_rel {
  base_partner_merge_automatic_wizard_id Int
  res_partner_id                         Int
  base_partner_merge_automatic_wizard    base_partner_merge_automatic_wizard @relation(fields: [base_partner_merge_automatic_wizard_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "base_partner_merge_automatic__base_partner_merge_automatic_fkey")
  res_partner                            res_partner                         @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "base_partner_merge_automatic_wizard_res_par_res_partner_id_fkey")

  @@unique([base_partner_merge_automatic_wizard_id, res_partner_id], map: "base_partner_merge_automatic__base_partner_merge_automatic__key")
  @@index([base_partner_merge_automatic_wizard_id], map: "base_partner_merge_automatic__base_partner_merge_automatic__idx")
  @@index([res_partner_id], map: "base_partner_merge_automatic_wizard_res_part_res_partner_id_idx")
}

model base_partner_merge_line {
  id                                                                                                               Int                                   @id @default(autoincrement())
  wizard_id                                                                                                        Int?
  min_id                                                                                                           Int?
  aggr_ids                                                                                                         String                                @db.VarChar
  create_uid                                                                                                       Int?
  create_date                                                                                                      DateTime?                             @db.Timestamp(6)
  write_uid                                                                                                        Int?
  write_date                                                                                                       DateTime?                             @db.Timestamp(6)
  base_partner_merge_automatic_wizard_base_partner_merge_automatic_wizard_current_line_idTobase_partner_merge_line base_partner_merge_automatic_wizard[] @relation("base_partner_merge_automatic_wizard_current_line_idTobase_partner_merge_line")
  res_users_base_partner_merge_line_create_uidTores_users                                                          res_users?                            @relation("base_partner_merge_line_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  base_partner_merge_automatic_wizard_base_partner_merge_line_wizard_idTobase_partner_merge_automatic_wizard       base_partner_merge_automatic_wizard?  @relation("base_partner_merge_line_wizard_idTobase_partner_merge_automatic_wizard", fields: [wizard_id], references: [id], onUpdate: NoAction)
  res_users_base_partner_merge_line_write_uidTores_users                                                           res_users?                            @relation("base_partner_merge_line_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model base_update_translations {
  id                                                       Int        @id @default(autoincrement())
  lang                                                     String     @db.VarChar
  create_uid                                               Int?
  create_date                                              DateTime?  @db.Timestamp(6)
  write_uid                                                Int?
  write_date                                               DateTime?  @db.Timestamp(6)
  res_users_base_update_translations_create_uidTores_users res_users? @relation("base_update_translations_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_base_update_translations_write_uidTores_users  res_users? @relation("base_update_translations_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model bus_bus {
  id                                      Int        @id @default(autoincrement())
  channel                                 String?    @db.VarChar
  message                                 String?    @db.VarChar
  create_uid                              Int?
  create_date                             DateTime?  @db.Timestamp(6)
  write_uid                               Int?
  write_date                              DateTime?  @db.Timestamp(6)
  res_users_bus_bus_create_uidTores_users res_users? @relation("bus_bus_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_bus_bus_write_uidTores_users  res_users? @relation("bus_bus_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model bus_presence {
  id            Int       @id @default(autoincrement())
  user_id       Int       @unique(map: "bus_presence_bus_user_presence_unique")
  last_poll     DateTime? @db.Timestamp(6)
  last_presence DateTime? @db.Timestamp(6)
  status        String?   @db.VarChar
  res_users     res_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "bus_presence_user_id_index")
}

model change_password_user {
  id                                                   Int                    @id @default(autoincrement())
  wizard_id                                            Int
  user_id                                              Int
  user_login                                           String?                @db.VarChar
  new_passwd                                           String?                @db.VarChar
  create_uid                                           Int?
  create_date                                          DateTime?              @db.Timestamp(6)
  write_uid                                            Int?
  write_date                                           DateTime?              @db.Timestamp(6)
  res_users_change_password_user_create_uidTores_users res_users?             @relation("change_password_user_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_change_password_user_user_idTores_users    res_users              @relation("change_password_user_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  change_password_wizard                               change_password_wizard @relation(fields: [wizard_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_change_password_user_write_uidTores_users  res_users?             @relation("change_password_user_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model change_password_wizard {
  id                                                     Int                    @id @default(autoincrement())
  create_uid                                             Int?
  create_date                                            DateTime?              @db.Timestamp(6)
  write_uid                                              Int?
  write_date                                             DateTime?              @db.Timestamp(6)
  change_password_user                                   change_password_user[]
  res_users_change_password_wizard_create_uidTores_users res_users?             @relation("change_password_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_change_password_wizard_write_uidTores_users  res_users?             @relation("change_password_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model email_template_attachment_rel {
  email_template_id Int
  attachment_id     Int
  ir_attachment     ir_attachment @relation(fields: [attachment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_template     mail_template @relation(fields: [email_template_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([email_template_id, attachment_id])
  @@index([attachment_id])
  @@index([email_template_id])
}

model email_template_preview {
  id                                                                             Int                                      @id @default(autoincrement())
  res_id                                                                         String?                                  @db.VarChar
  name                                                                           String?                                  @db.VarChar
  model_id                                                                       Int?
  model                                                                          String?                                  @db.VarChar
  lang                                                                           String?                                  @db.VarChar
  user_signature                                                                 Boolean?
  subject                                                                        String?                                  @db.VarChar
  email_from                                                                     String?                                  @db.VarChar
  use_default_to                                                                 Boolean?
  email_to                                                                       String?                                  @db.VarChar
  partner_to                                                                     String?                                  @db.VarChar
  email_cc                                                                       String?                                  @db.VarChar
  reply_to                                                                       String?                                  @db.VarChar
  mail_server_id                                                                 Int?
  body_html                                                                      String?
  report_name                                                                    String?                                  @db.VarChar
  report_template                                                                Int?
  ref_ir_act_window                                                              Int?
  auto_delete                                                                    Boolean?
  model_object_field                                                             Int?
  sub_object                                                                     Int?
  sub_model_object_field                                                         Int?
  null_value                                                                     String?                                  @db.VarChar
  copyvalue                                                                      String?                                  @db.VarChar
  scheduled_date                                                                 String?                                  @db.VarChar
  create_uid                                                                     Int?
  create_date                                                                    DateTime?                                @db.Timestamp(6)
  write_uid                                                                      Int?
  write_date                                                                     DateTime?                                @db.Timestamp(6)
  res_users_email_template_preview_create_uidTores_users                         res_users?                               @relation("email_template_preview_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_mail_server                                                                 ir_mail_server?                          @relation(fields: [mail_server_id], references: [id], onUpdate: NoAction)
  ir_model_email_template_preview_model_idToir_model                             ir_model?                                @relation("email_template_preview_model_idToir_model", fields: [model_id], references: [id], onUpdate: NoAction)
  ir_model_fields_email_template_preview_model_object_fieldToir_model_fields     ir_model_fields?                         @relation("email_template_preview_model_object_fieldToir_model_fields", fields: [model_object_field], references: [id], onUpdate: NoAction)
  ir_act_window                                                                  ir_act_window?                           @relation(fields: [ref_ir_act_window], references: [id], onUpdate: NoAction)
  ir_act_report_xml                                                              ir_act_report_xml?                       @relation(fields: [report_template], references: [id], onUpdate: NoAction)
  ir_model_fields_email_template_preview_sub_model_object_fieldToir_model_fields ir_model_fields?                         @relation("email_template_preview_sub_model_object_fieldToir_model_fields", fields: [sub_model_object_field], references: [id], onUpdate: NoAction)
  ir_model_email_template_preview_sub_objectToir_model                           ir_model?                                @relation("email_template_preview_sub_objectToir_model", fields: [sub_object], references: [id], onUpdate: NoAction)
  res_users_email_template_preview_write_uidTores_users                          res_users?                               @relation("email_template_preview_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  email_template_preview_res_partner_rel                                         email_template_preview_res_partner_rel[]

  @@index([model], map: "email_template_preview_model_index")
}

model email_template_preview_res_partner_rel {
  email_template_preview_id Int
  res_partner_id            Int
  email_template_preview    email_template_preview @relation(fields: [email_template_preview_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "email_template_preview_res_partn_email_template_preview_id_fkey")
  res_partner               res_partner            @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([email_template_preview_id, res_partner_id], map: "email_template_preview_res_pa_email_template_preview_id_res_key")
  @@index([email_template_preview_id], map: "email_template_preview_res_partne_email_template_preview_id_idx")
  @@index([res_partner_id])
}

model fetchmail_server {
  id                                               Int         @id @default(autoincrement())
  name                                             String      @db.VarChar
  active                                           Boolean?
  state                                            String?     @db.VarChar
  server                                           String?     @db.VarChar
  port                                             Int?
  type                                             String      @db.VarChar
  is_ssl                                           Boolean?
  attach                                           Boolean?
  original                                         Boolean?
  date                                             DateTime?   @db.Timestamp(6)
  user                                             String?     @db.VarChar
  password                                         String?     @db.VarChar
  object_id                                        Int?
  priority                                         Int?
  configuration                                    String?
  script                                           String?     @db.VarChar
  create_uid                                       Int?
  create_date                                      DateTime?   @db.Timestamp(6)
  write_uid                                        Int?
  write_date                                       DateTime?   @db.Timestamp(6)
  res_users_fetchmail_server_create_uidTores_users res_users?  @relation("fetchmail_server_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                         ir_model?   @relation(fields: [object_id], references: [id], onUpdate: NoAction)
  res_users_fetchmail_server_write_uidTores_users  res_users?  @relation("fetchmail_server_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_mail                                        mail_mail[]

  @@index([state], map: "fetchmail_server_state_index")
  @@index([type], map: "fetchmail_server_type_index")
}

model iap_account {
  id                                          Int          @id @default(autoincrement())
  service_name                                String?      @db.VarChar
  account_token                               String?      @db.VarChar
  company_id                                  Int?
  create_uid                                  Int?
  create_date                                 DateTime?    @db.Timestamp(6)
  write_uid                                   Int?
  write_date                                  DateTime?    @db.Timestamp(6)
  res_company                                 res_company? @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_iap_account_create_uidTores_users res_users?   @relation("iap_account_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_iap_account_write_uidTores_users  res_users?   @relation("iap_account_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_act_client {
  id                                            Int        @id @default(autoincrement())
  name                                          String     @db.VarChar
  type                                          String     @db.VarChar
  help                                          String?
  binding_model_id                              Int?
  binding_type                                  String     @db.VarChar
  create_uid                                    Int?
  create_date                                   DateTime?  @db.Timestamp(6)
  write_uid                                     Int?
  write_date                                    DateTime?  @db.Timestamp(6)
  tag                                           String     @db.VarChar
  target                                        String?    @db.VarChar
  res_model                                     String?    @db.VarChar
  context                                       String     @db.VarChar
  params_store                                  Bytes?
  ir_model                                      ir_model?  @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_client_create_uidTores_users res_users? @relation("ir_act_client_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_act_client_write_uidTores_users  res_users? @relation("ir_act_client_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_act_report_xml {
  id                                                Int                      @id @default(autoincrement())
  name                                              String                   @db.VarChar
  type                                              String                   @db.VarChar
  help                                              String?
  binding_model_id                                  Int?
  binding_type                                      String                   @db.VarChar
  create_uid                                        Int?
  create_date                                       DateTime?                @db.Timestamp(6)
  write_uid                                         Int?
  write_date                                        DateTime?                @db.Timestamp(6)
  model                                             String                   @db.VarChar
  report_type                                       String                   @db.VarChar
  report_name                                       String                   @db.VarChar
  report_file                                       String?                  @db.VarChar
  multi                                             Boolean?
  paperformat_id                                    Int?
  print_report_name                                 String?                  @db.VarChar
  attachment_use                                    Boolean?
  attachment                                        String?                  @db.VarChar
  email_template_preview                            email_template_preview[]
  ir_model                                          ir_model?                @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_report_xml_create_uidTores_users res_users?               @relation("ir_act_report_xml_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  report_paperformat                                report_paperformat?      @relation(fields: [paperformat_id], references: [id], onUpdate: NoAction)
  res_users_ir_act_report_xml_write_uidTores_users  res_users?               @relation("ir_act_report_xml_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_template                                     mail_template[]
  res_groups_report_rel                             res_groups_report_rel[]
  snailmail_letter                                  snailmail_letter[]
}

model ir_act_server {
  id                                                             Int                              @id @default(autoincrement())
  name                                                           String                           @db.VarChar
  type                                                           String                           @db.VarChar
  help                                                           String?
  binding_model_id                                               Int?
  binding_type                                                   String                           @db.VarChar
  create_uid                                                     Int?
  create_date                                                    DateTime?                        @db.Timestamp(6)
  write_uid                                                      Int?
  write_date                                                     DateTime?                        @db.Timestamp(6)
  usage                                                          String                           @db.VarChar
  state                                                          String                           @db.VarChar
  sequence                                                       Int?
  model_id                                                       Int
  model_name                                                     String?                          @db.VarChar
  code                                                           String?
  crud_model_id                                                  Int?
  link_field_id                                                  Int?
  template_id                                                    Int?
  activity_type_id                                               Int?
  activity_summary                                               String?                          @db.VarChar
  activity_note                                                  String?
  activity_date_deadline_range                                   Int?
  activity_date_deadline_range_type                              String?                          @db.VarChar
  activity_user_type                                             String                           @db.VarChar
  activity_user_id                                               Int?
  activity_user_field_name                                       String?                          @db.VarChar
  website_path                                                   String?                          @db.VarChar
  website_published                                              Boolean?
  mail_activity_type                                             mail_activity_type?              @relation(fields: [activity_type_id], references: [id], onUpdate: NoAction)
  res_users_ir_act_server_activity_user_idTores_users            res_users?                       @relation("ir_act_server_activity_user_idTores_users", fields: [activity_user_id], references: [id], onUpdate: NoAction)
  ir_model_ir_act_server_binding_model_idToir_model              ir_model?                        @relation("ir_act_server_binding_model_idToir_model", fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_server_create_uidTores_users                  res_users?                       @relation("ir_act_server_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model_ir_act_server_crud_model_idToir_model                 ir_model?                        @relation("ir_act_server_crud_model_idToir_model", fields: [crud_model_id], references: [id], onUpdate: NoAction)
  ir_model_fields                                                ir_model_fields?                 @relation(fields: [link_field_id], references: [id], onUpdate: NoAction)
  ir_model_ir_act_server_model_idToir_model                      ir_model                         @relation("ir_act_server_model_idToir_model", fields: [model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_template                                                  mail_template?                   @relation(fields: [template_id], references: [id], onUpdate: NoAction)
  res_users_ir_act_server_write_uidTores_users                   res_users?                       @relation("ir_act_server_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_act_server_mail_channel_rel                                 ir_act_server_mail_channel_rel[]
  ir_act_server_res_partner_rel                                  ir_act_server_res_partner_rel[]
  ir_cron                                                        ir_cron[]
  ir_server_object_lines                                         ir_server_object_lines[]
  rel_server_actions_rel_server_actions_action_idToir_act_server rel_server_actions[]             @relation("rel_server_actions_action_idToir_act_server")
  rel_server_actions_rel_server_actions_server_idToir_act_server rel_server_actions[]             @relation("rel_server_actions_server_idToir_act_server")
}

model ir_act_server_mail_channel_rel {
  ir_act_server_id Int
  mail_channel_id  Int
  ir_act_server    ir_act_server @relation(fields: [ir_act_server_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_channel     mail_channel  @relation(fields: [mail_channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([ir_act_server_id, mail_channel_id], map: "ir_act_server_mail_channel_re_ir_act_server_id_mail_channel_key")
  @@index([ir_act_server_id])
  @@index([mail_channel_id])
}

model ir_act_server_res_partner_rel {
  ir_act_server_id Int
  res_partner_id   Int
  ir_act_server    ir_act_server @relation(fields: [ir_act_server_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner      res_partner   @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([ir_act_server_id, res_partner_id])
  @@index([ir_act_server_id])
  @@index([res_partner_id])
}

model ir_act_url {
  id                                         Int        @id @default(autoincrement())
  name                                       String     @db.VarChar
  type                                       String     @db.VarChar
  help                                       String?
  binding_model_id                           Int?
  binding_type                               String     @db.VarChar
  create_uid                                 Int?
  create_date                                DateTime?  @db.Timestamp(6)
  write_uid                                  Int?
  write_date                                 DateTime?  @db.Timestamp(6)
  url                                        String
  target                                     String     @db.VarChar
  ir_model                                   ir_model?  @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_url_create_uidTores_users res_users? @relation("ir_act_url_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_act_url_write_uidTores_users  res_users? @relation("ir_act_url_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_act_window {
  id                                                  Int                       @id @default(autoincrement())
  name                                                String                    @db.VarChar
  type                                                String                    @db.VarChar
  help                                                String?
  binding_model_id                                    Int?
  binding_type                                        String                    @db.VarChar
  create_uid                                          Int?
  create_date                                         DateTime?                 @db.Timestamp(6)
  write_uid                                           Int?
  write_date                                          DateTime?                 @db.Timestamp(6)
  view_id                                             Int?
  domain                                              String?                   @db.VarChar
  context                                             String                    @db.VarChar
  res_id                                              Int?
  res_model                                           String                    @db.VarChar
  src_model                                           String?                   @db.VarChar
  target                                              String?                   @db.VarChar
  view_mode                                           String                    @db.VarChar
  view_type                                           String                    @db.VarChar
  usage                                               String?                   @db.VarChar
  limit                                               Int?
  search_view_id                                      Int?
  filter                                              Boolean?
  auto_search                                         Boolean?
  multi                                               Boolean?
  email_template_preview                              email_template_preview[]
  ir_model                                            ir_model?                 @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_window_create_uidTores_users       res_users?                @relation("ir_act_window_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view_ir_act_window_search_view_idToir_ui_view ir_ui_view?               @relation("ir_act_window_search_view_idToir_ui_view", fields: [search_view_id], references: [id], onUpdate: NoAction)
  ir_ui_view_ir_act_window_view_idToir_ui_view        ir_ui_view?               @relation("ir_act_window_view_idToir_ui_view", fields: [view_id], references: [id], onUpdate: NoAction)
  res_users_ir_act_window_write_uidTores_users        res_users?                @relation("ir_act_window_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_act_window_group_rel                             ir_act_window_group_rel[]
  ir_act_window_view                                  ir_act_window_view[]
  mail_template                                       mail_template[]
}

model ir_act_window_group_rel {
  act_id        Int
  gid           Int
  ir_act_window ir_act_window @relation(fields: [act_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_groups    res_groups    @relation(fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([act_id, gid])
  @@index([act_id])
  @@index([gid])
}

model ir_act_window_view {
  id                                                 Int            @id @default(autoincrement())
  sequence                                           Int?
  view_id                                            Int?
  view_mode                                          String         @db.VarChar
  act_window_id                                      Int?
  multi                                              Boolean?
  create_uid                                         Int?
  create_date                                        DateTime?      @db.Timestamp(6)
  write_uid                                          Int?
  write_date                                         DateTime?      @db.Timestamp(6)
  ir_act_window                                      ir_act_window? @relation(fields: [act_window_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_act_window_view_create_uidTores_users res_users?     @relation("ir_act_window_view_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view                                         ir_ui_view?    @relation(fields: [view_id], references: [id], onUpdate: NoAction)
  res_users_ir_act_window_view_write_uidTores_users  res_users?     @relation("ir_act_window_view_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([act_window_id, view_mode], map: "act_window_view_unique_mode_per_action")
}

model ir_actions {
  id                                         Int        @id @default(autoincrement())
  name                                       String     @db.VarChar
  type                                       String     @db.VarChar
  help                                       String?
  binding_model_id                           Int?
  binding_type                               String     @db.VarChar
  create_uid                                 Int?
  create_date                                DateTime?  @db.Timestamp(6)
  write_uid                                  Int?
  write_date                                 DateTime?  @db.Timestamp(6)
  ir_model                                   ir_model?  @relation(fields: [binding_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_actions_create_uidTores_users res_users? @relation("ir_actions_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_actions_write_uidTores_users  res_users? @relation("ir_actions_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_actions_todo {
  id                                              Int        @id @default(autoincrement())
  action_id                                       Int
  sequence                                        Int?
  state                                           String     @db.VarChar
  name                                            String?    @db.VarChar
  create_uid                                      Int?
  create_date                                     DateTime?  @db.Timestamp(6)
  write_uid                                       Int?
  write_date                                      DateTime?  @db.Timestamp(6)
  res_users_ir_actions_todo_create_uidTores_users res_users? @relation("ir_actions_todo_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_actions_todo_write_uidTores_users  res_users? @relation("ir_actions_todo_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([action_id], map: "ir_actions_todo_action_id_index")
}

model ir_attachment {
  id                                            Int                                       @id @default(autoincrement())
  name                                          String                                    @db.VarChar
  datas_fname                                   String?                                   @db.VarChar
  description                                   String?
  res_name                                      String?                                   @db.VarChar
  res_model                                     String?                                   @db.VarChar
  res_model_name                                String?                                   @db.VarChar
  res_field                                     String?                                   @db.VarChar
  res_id                                        Int?
  company_id                                    Int?
  type                                          String                                    @db.VarChar
  url                                           String?                                   @db.VarChar(1024)
  public                                        Boolean?
  access_token                                  String?                                   @db.VarChar
  db_datas                                      Bytes?
  store_fname                                   String?                                   @db.VarChar
  file_size                                     Int?
  checksum                                      String?                                   @db.VarChar(40)
  mimetype                                      String?                                   @db.VarChar
  index_content                                 String?
  active                                        Boolean?
  create_uid                                    Int?
  create_date                                   DateTime?                                 @db.Timestamp(6)
  write_uid                                     Int?
  write_date                                    DateTime?                                 @db.Timestamp(6)
  key                                           String?                                   @db.VarChar
  website_id                                    Int?
  theme_template_id                             Int?
  email_template_attachment_rel                 email_template_attachment_rel[]
  res_company                                   res_company?                              @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_ir_attachment_create_uidTores_users res_users?                                @relation("ir_attachment_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  theme_ir_attachment                           theme_ir_attachment?                      @relation(fields: [theme_template_id], references: [id], onUpdate: NoAction)
  website                                       website?                                  @relation(fields: [website_id], references: [id], onUpdate: NoAction)
  res_users_ir_attachment_write_uidTores_users  res_users?                                @relation("ir_attachment_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_blacklist                                mail_blacklist[]
  mail_channel                                  mail_channel[]
  mail_compose_message_ir_attachments_rel       mail_compose_message_ir_attachments_rel[]
  message_attachment_rel                        message_attachment_rel[]
  res_partner                                   res_partner[]
  snailmail_letter                              snailmail_letter[]

  @@index([checksum], map: "ir_attachment_checksum_index")
  @@index([res_model, res_id], map: "ir_attachment_res_idx")
  @@index([res_model_name], map: "ir_attachment_res_model_name_index")
  @@index([url], map: "ir_attachment_url_index")
}

model ir_config_parameter {
  id                                                  Int        @id @default(autoincrement())
  key                                                 String     @unique(map: "ir_config_parameter_key_uniq") @db.VarChar
  value                                               String
  create_uid                                          Int?
  create_date                                         DateTime?  @db.Timestamp(6)
  write_uid                                           Int?
  write_date                                          DateTime?  @db.Timestamp(6)
  res_users_ir_config_parameter_create_uidTores_users res_users? @relation("ir_config_parameter_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_config_parameter_write_uidTores_users  res_users? @relation("ir_config_parameter_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([key], map: "ir_config_parameter_key_index")
}

model ir_cron {
  id                                      Int           @id @default(autoincrement())
  ir_actions_server_id                    Int
  cron_name                               String?       @db.VarChar
  user_id                                 Int
  active                                  Boolean?
  interval_number                         Int?
  interval_type                           String?       @db.VarChar
  numbercall                              Int?
  doall                                   Boolean?
  nextcall                                DateTime      @db.Timestamp(6)
  priority                                Int?
  create_uid                              Int?
  create_date                             DateTime?     @db.Timestamp(6)
  write_uid                               Int?
  write_date                              DateTime?     @db.Timestamp(6)
  res_users_ir_cron_create_uidTores_users res_users?    @relation("ir_cron_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_act_server                           ir_act_server @relation(fields: [ir_actions_server_id], references: [id], onUpdate: NoAction)
  res_users_ir_cron_user_idTores_users    res_users     @relation("ir_cron_user_idTores_users", fields: [user_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_ir_cron_write_uidTores_users  res_users?    @relation("ir_cron_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_default {
  id                                         Int             @id @default(autoincrement())
  field_id                                   Int
  user_id                                    Int?
  company_id                                 Int?
  condition                                  String?         @db.VarChar
  json_value                                 String          @db.VarChar
  create_uid                                 Int?
  create_date                                DateTime?       @db.Timestamp(6)
  write_uid                                  Int?
  write_date                                 DateTime?       @db.Timestamp(6)
  res_company                                res_company?    @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_default_create_uidTores_users res_users?      @relation("ir_default_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model_fields                            ir_model_fields @relation(fields: [field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_default_user_idTores_users    res_users?      @relation("ir_default_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_default_write_uidTores_users  res_users?      @relation("ir_default_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([company_id], map: "ir_default_company_id_index")
  @@index([field_id], map: "ir_default_field_id_index")
  @@index([user_id], map: "ir_default_user_id_index")
}

model ir_demo {
  id                                      Int        @id @default(autoincrement())
  create_uid                              Int?
  create_date                             DateTime?  @db.Timestamp(6)
  write_uid                               Int?
  write_date                              DateTime?  @db.Timestamp(6)
  res_users_ir_demo_create_uidTores_users res_users? @relation("ir_demo_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_demo_write_uidTores_users  res_users? @relation("ir_demo_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_demo_failure {
  id                                              Int                     @id @default(autoincrement())
  module_id                                       Int
  error                                           String?                 @db.VarChar
  wizard_id                                       Int?
  create_uid                                      Int?
  create_date                                     DateTime?               @db.Timestamp(6)
  write_uid                                       Int?
  write_date                                      DateTime?               @db.Timestamp(6)
  res_users_ir_demo_failure_create_uidTores_users res_users?              @relation("ir_demo_failure_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_module_module                                ir_module_module        @relation(fields: [module_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  ir_demo_failure_wizard                          ir_demo_failure_wizard? @relation(fields: [wizard_id], references: [id], onUpdate: NoAction)
  res_users_ir_demo_failure_write_uidTores_users  res_users?              @relation("ir_demo_failure_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_demo_failure_wizard {
  id                                                     Int               @id @default(autoincrement())
  create_uid                                             Int?
  create_date                                            DateTime?         @db.Timestamp(6)
  write_uid                                              Int?
  write_date                                             DateTime?         @db.Timestamp(6)
  ir_demo_failure                                        ir_demo_failure[]
  res_users_ir_demo_failure_wizard_create_uidTores_users res_users?        @relation("ir_demo_failure_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_demo_failure_wizard_write_uidTores_users  res_users?        @relation("ir_demo_failure_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_exports {
  id                                         Int               @id @default(autoincrement())
  name                                       String?           @db.VarChar
  resource                                   String?           @db.VarChar
  create_uid                                 Int?
  create_date                                DateTime?         @db.Timestamp(6)
  write_uid                                  Int?
  write_date                                 DateTime?         @db.Timestamp(6)
  res_users_ir_exports_create_uidTores_users res_users?        @relation("ir_exports_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_exports_write_uidTores_users  res_users?        @relation("ir_exports_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_exports_line                            ir_exports_line[]

  @@index([resource], map: "ir_exports_resource_index")
}

model ir_exports_line {
  id                                              Int         @id @default(autoincrement())
  name                                            String?     @db.VarChar
  export_id                                       Int?
  create_uid                                      Int?
  create_date                                     DateTime?   @db.Timestamp(6)
  write_uid                                       Int?
  write_date                                      DateTime?   @db.Timestamp(6)
  res_users_ir_exports_line_create_uidTores_users res_users?  @relation("ir_exports_line_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_exports                                      ir_exports? @relation(fields: [export_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_exports_line_write_uidTores_users  res_users?  @relation("ir_exports_line_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([export_id], map: "ir_exports_line_export_id_index")
}

model ir_filters {
  id                                         Int        @id @default(autoincrement())
  name                                       String     @db.VarChar
  user_id                                    Int?
  domain                                     String
  context                                    String
  sort                                       String
  model_id                                   String     @db.VarChar
  is_default                                 Boolean?
  action_id                                  Int?
  active                                     Boolean?
  create_uid                                 Int?
  create_date                                DateTime?  @db.Timestamp(6)
  write_uid                                  Int?
  write_date                                 DateTime?  @db.Timestamp(6)
  res_users_ir_filters_create_uidTores_users res_users? @relation("ir_filters_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_filters_user_idTores_users    res_users? @relation("ir_filters_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_filters_write_uidTores_users  res_users? @relation("ir_filters_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([name, model_id, user_id, action_id], map: "ir_filters_name_model_uid_unique")
}

model ir_logging {
  id          Int       @id @default(autoincrement())
  create_uid  Int?
  create_date DateTime? @db.Timestamp(6)
  write_uid   Int?
  write_date  DateTime? @db.Timestamp(6)
  name        String    @db.VarChar
  type        String    @db.VarChar
  dbname      String?   @db.VarChar
  level       String?   @db.VarChar
  message     String
  path        String    @db.VarChar
  func        String    @db.VarChar
  line        String    @db.VarChar

  @@index([dbname], map: "ir_logging_dbname_index")
  @@index([level], map: "ir_logging_level_index")
  @@index([type], map: "ir_logging_type_index")
}

model ir_mail_server {
  id                                             Int                      @id @default(autoincrement())
  name                                           String                   @db.VarChar
  smtp_host                                      String                   @db.VarChar
  smtp_port                                      Int
  smtp_user                                      String?                  @db.VarChar
  smtp_pass                                      String?                  @db.VarChar
  smtp_encryption                                String                   @db.VarChar
  smtp_debug                                     Boolean?
  sequence                                       Int?
  active                                         Boolean?
  create_uid                                     Int?
  create_date                                    DateTime?                @db.Timestamp(6)
  write_uid                                      Int?
  write_date                                     DateTime?                @db.Timestamp(6)
  email_template_preview                         email_template_preview[]
  res_users_ir_mail_server_create_uidTores_users res_users?               @relation("ir_mail_server_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_mail_server_write_uidTores_users  res_users?               @relation("ir_mail_server_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_compose_message                           mail_compose_message[]
  mail_message                                   mail_message[]
  mail_template                                  mail_template[]

  @@index([name], map: "ir_mail_server_name_index")
}

model ir_model {
  id                                                                 Int                      @id @default(autoincrement())
  name                                                               String                   @db.VarChar
  model                                                              String                   @unique(map: "ir_model_obj_name_uniq") @db.VarChar
  info                                                               String?
  state                                                              String?                  @db.VarChar
  transient                                                          Boolean?
  create_uid                                                         Int?
  create_date                                                        DateTime?                @db.Timestamp(6)
  write_uid                                                          Int?
  write_date                                                         DateTime?                @db.Timestamp(6)
  is_mail_thread                                                     Boolean?
  email_template_preview_email_template_preview_model_idToir_model   email_template_preview[] @relation("email_template_preview_model_idToir_model")
  email_template_preview_email_template_preview_sub_objectToir_model email_template_preview[] @relation("email_template_preview_sub_objectToir_model")
  fetchmail_server                                                   fetchmail_server[]
  ir_act_client                                                      ir_act_client[]
  ir_act_report_xml                                                  ir_act_report_xml[]
  ir_act_server_ir_act_server_binding_model_idToir_model             ir_act_server[]          @relation("ir_act_server_binding_model_idToir_model")
  ir_act_server_ir_act_server_crud_model_idToir_model                ir_act_server[]          @relation("ir_act_server_crud_model_idToir_model")
  ir_act_server_ir_act_server_model_idToir_model                     ir_act_server[]          @relation("ir_act_server_model_idToir_model")
  ir_act_url                                                         ir_act_url[]
  ir_act_window                                                      ir_act_window[]
  ir_actions                                                         ir_actions[]
  res_users_ir_model_create_uidTores_users                           res_users?               @relation("ir_model_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_model_write_uidTores_users                            res_users?               @relation("ir_model_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_model_access                                                    ir_model_access[]
  ir_model_constraint                                                ir_model_constraint[]
  ir_model_fields                                                    ir_model_fields[]
  ir_model_relation                                                  ir_model_relation[]
  ir_rule                                                            ir_rule[]
  mail_activity                                                      mail_activity[]
  mail_activity_type                                                 mail_activity_type[]
  mail_alias_mail_alias_alias_model_idToir_model                     mail_alias[]             @relation("mail_alias_alias_model_idToir_model")
  mail_alias_mail_alias_alias_parent_model_idToir_model              mail_alias[]             @relation("mail_alias_alias_parent_model_idToir_model")
  mail_template_mail_template_model_idToir_model                     mail_template[]          @relation("mail_template_model_idToir_model")
  mail_template_mail_template_sub_objectToir_model                   mail_template[]          @relation("mail_template_sub_objectToir_model")

  @@index([model], map: "ir_model_model_index")
}

model ir_model_access {
  id                                              Int         @id @default(autoincrement())
  name                                            String      @db.VarChar
  active                                          Boolean?
  model_id                                        Int
  group_id                                        Int?
  perm_read                                       Boolean?
  perm_write                                      Boolean?
  perm_create                                     Boolean?
  perm_unlink                                     Boolean?
  create_uid                                      Int?
  create_date                                     DateTime?   @db.Timestamp(6)
  write_uid                                       Int?
  write_date                                      DateTime?   @db.Timestamp(6)
  res_users_ir_model_access_create_uidTores_users res_users?  @relation("ir_model_access_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_groups                                      res_groups? @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_model                                        ir_model    @relation(fields: [model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_model_access_write_uidTores_users  res_users?  @relation("ir_model_access_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([group_id], map: "ir_model_access_group_id_index")
  @@index([model_id], map: "ir_model_access_model_id_index")
  @@index([name], map: "ir_model_access_name_index")
}

model ir_model_constraint {
  id                                                  Int              @id @default(autoincrement())
  name                                                String           @db.VarChar
  definition                                          String?          @db.VarChar
  model                                               Int
  module                                              Int
  type                                                String           @db.VarChar(1)
  date_update                                         DateTime?        @db.Timestamp(6)
  date_init                                           DateTime?        @db.Timestamp(6)
  create_uid                                          Int?
  create_date                                         DateTime?        @db.Timestamp(6)
  write_uid                                           Int?
  write_date                                          DateTime?        @db.Timestamp(6)
  res_users_ir_model_constraint_create_uidTores_users res_users?       @relation("ir_model_constraint_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                            ir_model         @relation(fields: [model], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_module_module                                    ir_module_module @relation(fields: [module], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_ir_model_constraint_write_uidTores_users  res_users?       @relation("ir_model_constraint_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([name, module], map: "ir_model_constraint_module_name_uniq")
  @@index([model], map: "ir_model_constraint_model_index")
  @@index([module], map: "ir_model_constraint_module_index")
  @@index([name], map: "ir_model_constraint_name_index")
  @@index([type], map: "ir_model_constraint_type_index")
}

model ir_model_data {
  id                                            Int        @id @default(autoincrement())
  create_uid                                    Int?
  create_date                                   DateTime?  @db.Timestamp(6)
  write_date                                    DateTime?  @db.Timestamp(6)
  write_uid                                     Int?
  noupdate                                      Boolean?
  name                                          String     @db.VarChar
  date_init                                     DateTime?  @db.Timestamp(6)
  date_update                                   DateTime?  @db.Timestamp(6)
  module                                        String     @db.VarChar
  model                                         String     @db.VarChar
  res_id                                        Int?
  res_users_ir_model_data_create_uidTores_users res_users? @relation("ir_model_data_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_model_data_write_uidTores_users  res_users? @relation("ir_model_data_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([module, name], map: "ir_model_data_module_name_uniq_index")
  @@index([model, res_id], map: "ir_model_data_model_res_id_index")
}

model ir_model_fields {
  id                                                                                    Int                         @id @default(autoincrement())
  name                                                                                  String                      @db.VarChar
  complete_name                                                                         String?                     @db.VarChar
  model                                                                                 String                      @db.VarChar
  relation                                                                              String?                     @db.VarChar
  relation_field                                                                        String?                     @db.VarChar
  relation_field_id                                                                     Int?
  model_id                                                                              Int
  field_description                                                                     String                      @db.VarChar
  help                                                                                  String?
  ttype                                                                                 String                      @db.VarChar
  selection                                                                             String?                     @db.VarChar
  copied                                                                                Boolean?
  related                                                                               String?                     @db.VarChar
  related_field_id                                                                      Int?
  required                                                                              Boolean?
  readonly                                                                              Boolean?
  index                                                                                 Boolean?
  translate                                                                             Boolean?
  size                                                                                  Int?
  state                                                                                 String                      @db.VarChar
  on_delete                                                                             String?                     @db.VarChar
  domain                                                                                String?                     @db.VarChar
  selectable                                                                            Boolean?
  relation_table                                                                        String?                     @db.VarChar
  column1                                                                               String?                     @db.VarChar
  column2                                                                               String?                     @db.VarChar
  compute                                                                               String?
  depends                                                                               String?                     @db.VarChar
  store                                                                                 Boolean?
  create_uid                                                                            Int?
  create_date                                                                           DateTime?                   @db.Timestamp(6)
  write_uid                                                                             Int?
  write_date                                                                            DateTime?                   @db.Timestamp(6)
  track_visibility                                                                      String?                     @db.VarChar
  email_template_preview_email_template_preview_model_object_fieldToir_model_fields     email_template_preview[]    @relation("email_template_preview_model_object_fieldToir_model_fields")
  email_template_preview_email_template_preview_sub_model_object_fieldToir_model_fields email_template_preview[]    @relation("email_template_preview_sub_model_object_fieldToir_model_fields")
  ir_act_server                                                                         ir_act_server[]
  ir_default                                                                            ir_default[]
  res_users_ir_model_fields_create_uidTores_users                                       res_users?                  @relation("ir_model_fields_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                                                              ir_model                    @relation(fields: [model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_model_fields_ir_model_fields_related_field_idToir_model_fields                     ir_model_fields?            @relation("ir_model_fields_related_field_idToir_model_fields", fields: [related_field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_ir_model_fields_ir_model_fields_related_field_idToir_model_fields               ir_model_fields[]           @relation("ir_model_fields_related_field_idToir_model_fields")
  ir_model_fields_ir_model_fields_relation_field_idToir_model_fields                    ir_model_fields?            @relation("ir_model_fields_relation_field_idToir_model_fields", fields: [relation_field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_ir_model_fields_ir_model_fields_relation_field_idToir_model_fields              ir_model_fields[]           @relation("ir_model_fields_relation_field_idToir_model_fields")
  res_users_ir_model_fields_write_uidTores_users                                        res_users?                  @relation("ir_model_fields_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_model_fields_group_rel                                                             ir_model_fields_group_rel[]
  ir_property                                                                           ir_property[]
  ir_server_object_lines                                                                ir_server_object_lines[]
  mail_template_mail_template_model_object_fieldToir_model_fields                       mail_template[]             @relation("mail_template_model_object_fieldToir_model_fields")
  mail_template_mail_template_sub_model_object_fieldToir_model_fields                   mail_template[]             @relation("mail_template_sub_model_object_fieldToir_model_fields")

  @@unique([model, name], map: "ir_model_fields_name_unique")
  @@index([complete_name], map: "ir_model_fields_complete_name_index")
  @@index([model_id], map: "ir_model_fields_model_id_index")
  @@index([model], map: "ir_model_fields_model_index")
  @@index([name], map: "ir_model_fields_name_index")
  @@index([state], map: "ir_model_fields_state_index")
}

model ir_model_fields_group_rel {
  field_id        Int
  group_id        Int
  ir_model_fields ir_model_fields @relation(fields: [field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_groups      res_groups      @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([field_id, group_id])
  @@index([field_id])
  @@index([group_id])
}

model ir_model_relation {
  id                                                Int              @id @default(autoincrement())
  name                                              String           @db.VarChar
  model                                             Int
  module                                            Int
  date_update                                       DateTime?        @db.Timestamp(6)
  date_init                                         DateTime?        @db.Timestamp(6)
  create_uid                                        Int?
  create_date                                       DateTime?        @db.Timestamp(6)
  write_uid                                         Int?
  write_date                                        DateTime?        @db.Timestamp(6)
  res_users_ir_model_relation_create_uidTores_users res_users?       @relation("ir_model_relation_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                          ir_model         @relation(fields: [model], references: [id], onDelete: SetNull, onUpdate: NoAction)
  ir_module_module                                  ir_module_module @relation(fields: [module], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_ir_model_relation_write_uidTores_users  res_users?       @relation("ir_model_relation_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([model], map: "ir_model_relation_model_index")
  @@index([module], map: "ir_model_relation_module_index")
  @@index([name], map: "ir_model_relation_name_index")
}

model ir_module_category {
  id                                                 Int                  @id @default(autoincrement())
  create_uid                                         Int?
  create_date                                        DateTime?            @db.Timestamp(6)
  write_date                                         DateTime?            @db.Timestamp(6)
  write_uid                                          Int?
  parent_id                                          Int?
  name                                               String               @db.VarChar
  description                                        String?
  sequence                                           Int?
  visible                                            Boolean?
  exclusive                                          Boolean?
  res_users_ir_module_category_create_uidTores_users res_users?           @relation("ir_module_category_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_module_category                                 ir_module_category?  @relation("ir_module_categoryToir_module_category", fields: [parent_id], references: [id], onUpdate: NoAction)
  other_ir_module_category                           ir_module_category[] @relation("ir_module_categoryToir_module_category")
  res_users_ir_module_category_write_uidTores_users  res_users?           @relation("ir_module_category_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_module_module                                   ir_module_module[]
  res_groups                                         res_groups[]

  @@index([name], map: "ir_module_category_name_index")
  @@index([parent_id], map: "ir_module_category_parent_id_index")
}

model ir_module_module {
  id                                               Int                           @id @default(autoincrement())
  create_uid                                       Int?
  create_date                                      DateTime?                     @db.Timestamp(6)
  write_date                                       DateTime?                     @db.Timestamp(6)
  write_uid                                        Int?
  website                                          String?                       @db.VarChar
  summary                                          String?                       @db.VarChar
  name                                             String                        @unique(map: "ir_module_module_name_uniq") @db.VarChar
  author                                           String?                       @db.VarChar
  icon                                             String?                       @db.VarChar
  state                                            String?                       @db.VarChar(16)
  latest_version                                   String?                       @db.VarChar
  shortdesc                                        String?                       @db.VarChar
  category_id                                      Int?
  description                                      String?
  application                                      Boolean?                      @default(false)
  demo                                             Boolean?                      @default(false)
  web                                              Boolean?                      @default(false)
  license                                          String?                       @db.VarChar(32)
  sequence                                         Int?                          @default(100)
  auto_install                                     Boolean?                      @default(false)
  to_buy                                           Boolean?                      @default(false)
  maintainer                                       String?                       @db.VarChar
  contributors                                     String?
  published_version                                String?                       @db.VarChar
  url                                              String?                       @db.VarChar
  menus_by_module                                  String?
  reports_by_module                                String?
  views_by_module                                  String?
  base_module_uninstall                            base_module_uninstall[]
  ir_demo_failure                                  ir_demo_failure[]
  ir_model_constraint                              ir_model_constraint[]
  ir_model_relation                                ir_model_relation[]
  ir_module_category                               ir_module_category?           @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  res_users_ir_module_module_create_uidTores_users res_users?                    @relation("ir_module_module_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_module_module_write_uidTores_users  res_users?                    @relation("ir_module_module_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_module_module_dependency                      ir_module_module_dependency[]
  ir_module_module_exclusion                       ir_module_module_exclusion[]
  rel_modules_langexport                           rel_modules_langexport[]
  website_rel                                          website[]

  @@index([category_id], map: "ir_module_module_category_id_index")
  @@index([name], map: "ir_module_module_name_index")
  @@index([state], map: "ir_module_module_state_index")
}

model ir_module_module_dependency {
  id                                                          Int               @id @default(autoincrement())
  create_uid                                                  Int?
  create_date                                                 DateTime?         @db.Timestamp(6)
  write_date                                                  DateTime?         @db.Timestamp(6)
  write_uid                                                   Int?
  name                                                        String?           @db.VarChar
  module_id                                                   Int?
  res_users_ir_module_module_dependency_create_uidTores_users res_users?        @relation("ir_module_module_dependency_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_module_module                                            ir_module_module? @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_module_module_dependency_write_uidTores_users  res_users?        @relation("ir_module_module_dependency_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([name], map: "ir_module_module_dependency_name_index")
}

model ir_module_module_exclusion {
  id                                                         Int               @id @default(autoincrement())
  name                                                       String?           @db.VarChar
  module_id                                                  Int?
  create_uid                                                 Int?
  create_date                                                DateTime?         @db.Timestamp(6)
  write_uid                                                  Int?
  write_date                                                 DateTime?         @db.Timestamp(6)
  res_users_ir_module_module_exclusion_create_uidTores_users res_users?        @relation("ir_module_module_exclusion_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_module_module                                           ir_module_module? @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_module_module_exclusion_write_uidTores_users  res_users?        @relation("ir_module_module_exclusion_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([name], map: "ir_module_module_exclusion_name_index")
}

model ir_property {
  id                                          Int             @id @default(autoincrement())
  name                                        String?         @db.VarChar
  res_id                                      String?         @db.VarChar
  company_id                                  Int?
  fields_id                                   Int
  value_float                                 Float?
  value_integer                               Int?
  value_text                                  String?
  value_binary                                Bytes?
  value_reference                             String?         @db.VarChar
  value_datetime                              DateTime?       @db.Timestamp(6)
  type                                        String          @db.VarChar
  create_uid                                  Int?
  create_date                                 DateTime?       @db.Timestamp(6)
  write_uid                                   Int?
  write_date                                  DateTime?       @db.Timestamp(6)
  res_company                                 res_company?    @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_ir_property_create_uidTores_users res_users?      @relation("ir_property_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model_fields                             ir_model_fields @relation(fields: [fields_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_property_write_uidTores_users  res_users?      @relation("ir_property_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([company_id], map: "ir_property_company_id_index")
  @@index([fields_id], map: "ir_property_fields_id_index")
  @@index([name], map: "ir_property_name_index")
  @@index([res_id], map: "ir_property_res_id_index")
  @@index([type], map: "ir_property_type_index")
}

model ir_rule {
  id                                      Int              @id @default(autoincrement())
  name                                    String?          @db.VarChar
  active                                  Boolean?
  model_id                                Int
  domain_force                            String?
  perm_read                               Boolean?
  perm_write                              Boolean?
  perm_create                             Boolean?
  perm_unlink                             Boolean?
  global                                  Boolean?
  create_uid                              Int?
  create_date                             DateTime?        @db.Timestamp(6)
  write_uid                               Int?
  write_date                              DateTime?        @db.Timestamp(6)
  res_users_ir_rule_create_uidTores_users res_users?       @relation("ir_rule_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_model                                ir_model         @relation(fields: [model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_rule_write_uidTores_users  res_users?       @relation("ir_rule_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  rule_group_rel                          rule_group_rel[]

  @@index([model_id], map: "ir_rule_model_id_index")
  @@index([name], map: "ir_rule_name_index")
}

model ir_sequence {
  id                                          Int                      @id @default(autoincrement())
  name                                        String                   @db.VarChar
  code                                        String?                  @db.VarChar
  implementation                              String                   @db.VarChar
  active                                      Boolean?
  prefix                                      String?                  @db.VarChar
  suffix                                      String?                  @db.VarChar
  number_next                                 Int
  number_increment                            Int
  padding                                     Int
  company_id                                  Int?
  use_date_range                              Boolean?
  create_uid                                  Int?
  create_date                                 DateTime?                @db.Timestamp(6)
  write_uid                                   Int?
  write_date                                  DateTime?                @db.Timestamp(6)
  res_company                                 res_company?             @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_ir_sequence_create_uidTores_users res_users?               @relation("ir_sequence_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_ir_sequence_write_uidTores_users  res_users?               @relation("ir_sequence_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_sequence_date_range                      ir_sequence_date_range[]
}

model ir_sequence_date_range {
  id                                                     Int         @id @default(autoincrement())
  date_from                                              DateTime    @db.Date
  date_to                                                DateTime    @db.Date
  sequence_id                                            Int
  number_next                                            Int
  create_uid                                             Int?
  create_date                                            DateTime?   @db.Timestamp(6)
  write_uid                                              Int?
  write_date                                             DateTime?   @db.Timestamp(6)
  res_users_ir_sequence_date_range_create_uidTores_users res_users?  @relation("ir_sequence_date_range_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_sequence                                            ir_sequence @relation(fields: [sequence_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_sequence_date_range_write_uidTores_users  res_users?  @relation("ir_sequence_date_range_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_server_object_lines {
  id                                                     Int             @id @default(autoincrement())
  server_id                                              Int?
  col1                                                   Int
  value                                                  String
  type                                                   String          @db.VarChar
  create_uid                                             Int?
  create_date                                            DateTime?       @db.Timestamp(6)
  write_uid                                              Int?
  write_date                                             DateTime?       @db.Timestamp(6)
  ir_model_fields                                        ir_model_fields @relation(fields: [col1], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_ir_server_object_lines_create_uidTores_users res_users?      @relation("ir_server_object_lines_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_act_server                                          ir_act_server?  @relation(fields: [server_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_server_object_lines_write_uidTores_users  res_users?      @relation("ir_server_object_lines_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model ir_translation {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar
  res_id   Int?
  lang     String?   @db.VarChar
  type     String?   @db.VarChar
  src      String?
  value    String?
  module   String?   @db.VarChar
  state    String?   @db.VarChar
  comments String?
  res_lang res_lang? @relation(fields: [lang], references: [code], onDelete: NoAction, onUpdate: NoAction, map: "ir_translation_lang_fkey_res_lang")

  @@index([comments], map: "ir_translation_comments_index")
  @@index([module], map: "ir_translation_module_index")
  @@index([res_id], map: "ir_translation_res_id_index")
  @@index([type], map: "ir_translation_type_index")
}

model ir_ui_menu {
  id                                         Int                           @id @default(autoincrement())
  parent_path                                String?                       @db.VarChar
  name                                       String                        @db.VarChar
  active                                     Boolean?
  sequence                                   Int?
  parent_id                                  Int?
  web_icon                                   String?                       @db.VarChar
  action                                     String?                       @db.VarChar
  create_uid                                 Int?
  create_date                                DateTime?                     @db.Timestamp(6)
  write_uid                                  Int?
  write_date                                 DateTime?                     @db.Timestamp(6)
  res_users_ir_ui_menu_create_uidTores_users res_users?                    @relation("ir_ui_menu_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_menu                                 ir_ui_menu?                   @relation("ir_ui_menuToir_ui_menu", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  other_ir_ui_menu                           ir_ui_menu[]                  @relation("ir_ui_menuToir_ui_menu")
  res_users_ir_ui_menu_write_uidTores_users  res_users?                    @relation("ir_ui_menu_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_ui_menu_group_rel                       ir_ui_menu_group_rel[]
  wizard_ir_model_menu_create                wizard_ir_model_menu_create[]

  @@index([parent_id], map: "ir_ui_menu_parent_id_index")
  @@index([parent_path], map: "ir_ui_menu_parent_path_index")
}

model ir_ui_menu_group_rel {
  menu_id    Int
  gid        Int
  res_groups res_groups @relation(fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_ui_menu ir_ui_menu @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([menu_id, gid])
  @@index([gid])
  @@index([menu_id])
}

model ir_ui_view {
  id                                                     Int                    @id @default(autoincrement())
  name                                                   String                 @db.VarChar
  model                                                  String?                @db.VarChar
  key                                                    String?                @db.VarChar
  priority                                               Int
  type                                                   String?                @db.VarChar
  arch_db                                                String?
  arch_fs                                                String?                @db.VarChar
  inherit_id                                             Int?
  field_parent                                           String?                @db.VarChar
  mode                                                   String                 @db.VarChar
  active                                                 Boolean?
  create_uid                                             Int?
  create_date                                            DateTime?              @db.Timestamp(6)
  write_uid                                              Int?
  write_date                                             DateTime?              @db.Timestamp(6)
  website_meta_title                                     String?                @db.VarChar
  website_meta_description                               String?
  website_meta_keywords                                  String?                @db.VarChar
  website_meta_og_img                                    String?                @db.VarChar
  customize_show                                         Boolean?
  website_id                                             Int?
  theme_template_id                                      Int?
  ir_act_window_ir_act_window_search_view_idToir_ui_view ir_act_window[]        @relation("ir_act_window_search_view_idToir_ui_view")
  ir_act_window_ir_act_window_view_idToir_ui_view        ir_act_window[]        @relation("ir_act_window_view_idToir_ui_view")
  ir_act_window_view                                     ir_act_window_view[]
  res_users_ir_ui_view_create_uidTores_users             res_users?             @relation("ir_ui_view_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view                                             ir_ui_view?            @relation("ir_ui_viewToir_ui_view", fields: [inherit_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  other_ir_ui_view                                       ir_ui_view[]           @relation("ir_ui_viewToir_ui_view")
  theme_ir_ui_view                                       theme_ir_ui_view?      @relation(fields: [theme_template_id], references: [id], onUpdate: NoAction)
  website                                                website?               @relation(fields: [website_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_ui_view_write_uidTores_users              res_users?             @relation("ir_ui_view_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  ir_ui_view_custom                                      ir_ui_view_custom[]
  ir_ui_view_group_rel                                   ir_ui_view_group_rel[]
  report_layout                                          report_layout[]
  res_company                                            res_company[]
  res_country                                            res_country[]
  website_page                                           website_page[]

  @@index([inherit_id], map: "ir_ui_view_inherit_id_index")
  @@index([model], map: "ir_ui_view_model_index")
  @@index([model, inherit_id], map: "ir_ui_view_model_type_inherit_id")
}

model ir_ui_view_custom {
  id                                                Int        @id @default(autoincrement())
  ref_id                                            Int
  user_id                                           Int
  arch                                              String
  create_uid                                        Int?
  create_date                                       DateTime?  @db.Timestamp(6)
  write_uid                                         Int?
  write_date                                        DateTime?  @db.Timestamp(6)
  res_users_ir_ui_view_custom_create_uidTores_users res_users? @relation("ir_ui_view_custom_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view                                        ir_ui_view @relation(fields: [ref_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_ui_view_custom_user_idTores_users    res_users  @relation("ir_ui_view_custom_user_idTores_users", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_ir_ui_view_custom_write_uidTores_users  res_users? @relation("ir_ui_view_custom_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([ref_id], map: "ir_ui_view_custom_ref_id_index")
  @@index([user_id], map: "ir_ui_view_custom_user_id_index")
  @@index([user_id, ref_id], map: "ir_ui_view_custom_user_id_ref_id")
}

model ir_ui_view_group_rel {
  view_id    Int
  group_id   Int
  res_groups res_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_ui_view ir_ui_view @relation(fields: [view_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([view_id, group_id])
  @@index([group_id])
  @@index([view_id])
}

model mail_activity {
  id                                                                                Int                 @id @default(autoincrement())
  res_id                                                                            Int
  res_model_id                                                                      Int
  res_model                                                                         String?             @db.VarChar
  res_name                                                                          String?             @db.VarChar
  activity_type_id                                                                  Int?
  summary                                                                           String?             @db.VarChar
  note                                                                              String?
  feedback                                                                          String?
  date_deadline                                                                     DateTime            @db.Date
  automated                                                                         Boolean?
  user_id                                                                           Int
  create_user_id                                                                    Int?
  recommended_activity_type_id                                                      Int?
  previous_activity_type_id                                                         Int?
  create_uid                                                                        Int?
  create_date                                                                       DateTime?           @db.Timestamp(6)
  write_uid                                                                         Int?
  write_date                                                                        DateTime?           @db.Timestamp(6)
  mail_activity_type_mail_activity_activity_type_idTomail_activity_type             mail_activity_type? @relation("mail_activity_activity_type_idTomail_activity_type", fields: [activity_type_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  res_users_mail_activity_create_uidTores_users                                     res_users?          @relation("mail_activity_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_mail_activity_create_user_idTores_users                                 res_users?          @relation("mail_activity_create_user_idTores_users", fields: [create_user_id], references: [id], onUpdate: NoAction)
  mail_activity_type_mail_activity_previous_activity_type_idTomail_activity_type    mail_activity_type? @relation("mail_activity_previous_activity_type_idTomail_activity_type", fields: [previous_activity_type_id], references: [id], onUpdate: NoAction)
  mail_activity_type_mail_activity_recommended_activity_type_idTomail_activity_type mail_activity_type? @relation("mail_activity_recommended_activity_type_idTomail_activity_type", fields: [recommended_activity_type_id], references: [id], onUpdate: NoAction)
  ir_model                                                                          ir_model            @relation(fields: [res_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_mail_activity_user_idTores_users                                        res_users           @relation("mail_activity_user_idTores_users", fields: [user_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_mail_activity_write_uidTores_users                                      res_users?          @relation("mail_activity_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([create_user_id], map: "mail_activity_create_user_id_index")
  @@index([date_deadline], map: "mail_activity_date_deadline_index")
  @@index([res_id], map: "mail_activity_res_id_index")
  @@index([res_model_id], map: "mail_activity_res_model_id_index")
  @@index([res_model], map: "mail_activity_res_model_index")
  @@index([user_id], map: "mail_activity_user_id_index")
}

model mail_activity_rel {
  activity_id                                                             Int
  recommended_id                                                          Int
  mail_activity_type_mail_activity_rel_activity_idTomail_activity_type    mail_activity_type @relation("mail_activity_rel_activity_idTomail_activity_type", fields: [activity_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_activity_type_mail_activity_rel_recommended_idTomail_activity_type mail_activity_type @relation("mail_activity_rel_recommended_idTomail_activity_type", fields: [recommended_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([activity_id, recommended_id])
  @@index([activity_id])
  @@index([recommended_id])
}

model mail_activity_type {
  id                                                                           Int                                    @id @default(autoincrement())
  name                                                                         String                                 @db.VarChar
  summary                                                                      String?                                @db.VarChar
  sequence                                                                     Int?
  active                                                                       Boolean?
  delay_count                                                                  Int?
  delay_unit                                                                   String                                 @db.VarChar
  delay_from                                                                   String                                 @db.VarChar
  icon                                                                         String?                                @db.VarChar
  decoration_type                                                              String?                                @db.VarChar
  res_model_id                                                                 Int?
  default_next_type_id                                                         Int?
  force_next                                                                   Boolean?
  category                                                                     String?                                @db.VarChar
  create_uid                                                                   Int?
  create_date                                                                  DateTime?                              @db.Timestamp(6)
  write_uid                                                                    Int?
  write_date                                                                   DateTime?                              @db.Timestamp(6)
  ir_act_server                                                                ir_act_server[]
  mail_activity_mail_activity_activity_type_idTomail_activity_type             mail_activity[]                        @relation("mail_activity_activity_type_idTomail_activity_type")
  mail_activity_mail_activity_previous_activity_type_idTomail_activity_type    mail_activity[]                        @relation("mail_activity_previous_activity_type_idTomail_activity_type")
  mail_activity_mail_activity_recommended_activity_type_idTomail_activity_type mail_activity[]                        @relation("mail_activity_recommended_activity_type_idTomail_activity_type")
  mail_activity_rel_mail_activity_rel_activity_idTomail_activity_type          mail_activity_rel[]                    @relation("mail_activity_rel_activity_idTomail_activity_type")
  mail_activity_rel_mail_activity_rel_recommended_idTomail_activity_type       mail_activity_rel[]                    @relation("mail_activity_rel_recommended_idTomail_activity_type")
  res_users_mail_activity_type_create_uidTores_users                           res_users?                             @relation("mail_activity_type_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  mail_activity_type                                                           mail_activity_type?                    @relation("mail_activity_typeTomail_activity_type", fields: [default_next_type_id], references: [id], onUpdate: NoAction)
  other_mail_activity_type                                                     mail_activity_type[]                   @relation("mail_activity_typeTomail_activity_type")
  ir_model                                                                     ir_model?                              @relation(fields: [res_model_id], references: [id], onUpdate: NoAction)
  res_users_mail_activity_type_write_uidTores_users                            res_users?                             @relation("mail_activity_type_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_activity_type_mail_template_rel                                         mail_activity_type_mail_template_rel[]
  mail_compose_message                                                         mail_compose_message[]
  mail_message                                                                 mail_message[]

  @@index([res_model_id], map: "mail_activity_type_res_model_id_index")
}

model mail_activity_type_mail_template_rel {
  mail_activity_type_id Int
  mail_template_id      Int
  mail_activity_type    mail_activity_type @relation(fields: [mail_activity_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_template         mail_template      @relation(fields: [mail_template_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_activity_type_id, mail_template_id], map: "mail_activity_type_mail_templ_mail_activity_type_id_mail_te_key")
  @@index([mail_activity_type_id])
  @@index([mail_template_id])
}

model mail_alias {
  id                                                  Int            @id @default(autoincrement())
  alias_name                                          String?        @unique(map: "mail_alias_alias_unique") @db.VarChar
  alias_model_id                                      Int
  alias_user_id                                       Int?
  alias_defaults                                      String
  alias_force_thread_id                               Int?
  alias_parent_model_id                               Int?
  alias_parent_thread_id                              Int?
  alias_contact                                       String         @db.VarChar
  create_uid                                          Int?
  create_date                                         DateTime?      @db.Timestamp(6)
  write_uid                                           Int?
  write_date                                          DateTime?      @db.Timestamp(6)
  ir_model_mail_alias_alias_model_idToir_model        ir_model       @relation("mail_alias_alias_model_idToir_model", fields: [alias_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_model_mail_alias_alias_parent_model_idToir_model ir_model?      @relation("mail_alias_alias_parent_model_idToir_model", fields: [alias_parent_model_id], references: [id], onUpdate: NoAction)
  res_users_mail_alias_alias_user_idTores_users       res_users?     @relation("mail_alias_alias_user_idTores_users", fields: [alias_user_id], references: [id], onUpdate: NoAction)
  res_users_mail_alias_create_uidTores_users          res_users?     @relation("mail_alias_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_mail_alias_write_uidTores_users           res_users?     @relation("mail_alias_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_channel                                        mail_channel[]
  res_users_res_users_alias_idTomail_alias            res_users[]    @relation("res_users_alias_idTomail_alias")
}

model mail_blacklist {
  id                                             Int            @id @default(autoincrement())
  message_main_attachment_id                     Int?
  email                                          String         @unique(map: "mail_blacklist_unique_email") @db.VarChar
  active                                         Boolean?
  create_uid                                     Int?
  create_date                                    DateTime?      @db.Timestamp(6)
  write_uid                                      Int?
  write_date                                     DateTime?      @db.Timestamp(6)
  res_users_mail_blacklist_create_uidTores_users res_users?     @relation("mail_blacklist_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_attachment                                  ir_attachment? @relation(fields: [message_main_attachment_id], references: [id], onUpdate: NoAction)
  res_users_mail_blacklist_write_uidTores_users  res_users?     @relation("mail_blacklist_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([email], map: "mail_blacklist_email_index")
  @@index([message_main_attachment_id], map: "mail_blacklist_message_main_attachment_id_index")
}

model mail_channel {
  id                                           Int                                   @id @default(autoincrement())
  alias_id                                     Int
  message_main_attachment_id                   Int?
  name                                         String                                @db.VarChar
  channel_type                                 String?                               @db.VarChar
  description                                  String?
  uuid                                         String?                               @db.VarChar(50)
  email_send                                   Boolean?
  public                                       String                                @db.VarChar
  group_public_id                              Int?
  moderation                                   Boolean?
  moderation_notify                            Boolean?
  moderation_notify_msg                        String?
  moderation_guidelines                        Boolean?
  moderation_guidelines_msg                    String?
  create_uid                                   Int?
  create_date                                  DateTime?                             @db.Timestamp(6)
  write_uid                                    Int?
  write_date                                   DateTime?                             @db.Timestamp(6)
  ir_act_server_mail_channel_rel               ir_act_server_mail_channel_rel[]
  mail_alias                                   mail_alias                            @relation(fields: [alias_id], references: [id], onUpdate: NoAction)
  res_users_mail_channel_create_uidTores_users res_users?                            @relation("mail_channel_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_groups                                   res_groups?                           @relation(fields: [group_public_id], references: [id], onUpdate: NoAction)
  ir_attachment                                ir_attachment?                        @relation(fields: [message_main_attachment_id], references: [id], onUpdate: NoAction)
  res_users_mail_channel_write_uidTores_users  res_users?                            @relation("mail_channel_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_channel_mail_wizard_invite_rel          mail_channel_mail_wizard_invite_rel[]
  mail_channel_moderator_rel                   mail_channel_moderator_rel[]
  mail_channel_partner                         mail_channel_partner[]
  mail_channel_res_groups_rel                  mail_channel_res_groups_rel[]
  mail_followers                               mail_followers[]
  mail_message_mail_channel_rel                mail_message_mail_channel_rel[]
  mail_moderation                              mail_moderation[]

  @@index([message_main_attachment_id], map: "mail_channel_message_main_attachment_id_index")
  @@index([uuid], map: "mail_channel_uuid_index")
}

model mail_channel_mail_wizard_invite_rel {
  mail_wizard_invite_id Int
  mail_channel_id       Int
  mail_channel          mail_channel       @relation(fields: [mail_channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_wizard_invite    mail_wizard_invite @relation(fields: [mail_wizard_invite_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_wizard_invite_id, mail_channel_id], map: "mail_channel_mail_wizard_invi_mail_wizard_invite_id_mail_ch_key")
  @@index([mail_channel_id])
  @@index([mail_wizard_invite_id])
}

model mail_channel_moderator_rel {
  mail_channel_id Int
  res_users_id    Int
  mail_channel    mail_channel @relation(fields: [mail_channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users       res_users    @relation(fields: [res_users_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_channel_id, res_users_id])
  @@index([mail_channel_id])
  @@index([res_users_id])
}

model mail_channel_partner {
  id                                                   Int           @id @default(autoincrement())
  partner_id                                           Int?
  channel_id                                           Int?
  seen_message_id                                      Int?
  fold_state                                           String?       @db.VarChar
  is_minimized                                         Boolean?
  is_pinned                                            Boolean?
  create_uid                                           Int?
  create_date                                          DateTime?     @db.Timestamp(6)
  write_uid                                            Int?
  write_date                                           DateTime?     @db.Timestamp(6)
  mail_channel                                         mail_channel? @relation(fields: [channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_mail_channel_partner_create_uidTores_users res_users?    @relation("mail_channel_partner_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_partner                                          res_partner?  @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_message                                         mail_message? @relation(fields: [seen_message_id], references: [id], onUpdate: NoAction)
  res_users_mail_channel_partner_write_uidTores_users  res_users?    @relation("mail_channel_partner_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([channel_id, partner_id, seen_message_id], map: "mail_channel_partner_seen_message_id_idx")
}

model mail_channel_res_groups_rel {
  mail_channel_id Int
  res_groups_id   Int
  mail_channel    mail_channel @relation(fields: [mail_channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_groups      res_groups   @relation(fields: [res_groups_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_channel_id, res_groups_id])
  @@index([mail_channel_id])
  @@index([res_groups_id])
}

model mail_compose_message {
  id                                                     Int                                       @id @default(autoincrement())
  composition_mode                                       String?                                   @db.VarChar
  use_active_domain                                      Boolean?
  active_domain                                          String?
  is_log                                                 Boolean?
  subject                                                String?                                   @db.VarChar
  notify                                                 Boolean?
  auto_delete                                            Boolean?
  auto_delete_message                                    Boolean?
  template_id                                            Int?
  message_type                                           String                                    @db.VarChar
  subtype_id                                             Int?
  date                                                   DateTime?                                 @db.Timestamp(6)
  body                                                   String?
  parent_id                                              Int?
  model                                                  String?                                   @db.VarChar
  res_id                                                 Int?
  record_name                                            String?                                   @db.VarChar
  mail_activity_type_id                                  Int?
  email_from                                             String?                                   @db.VarChar
  author_id                                              Int?
  no_auto_thread                                         Boolean?
  message_id                                             String?                                   @db.VarChar
  reply_to                                               String?                                   @db.VarChar
  mail_server_id                                         Int?
  moderation_status                                      String?                                   @db.VarChar
  moderator_id                                           Int?
  layout                                                 String?                                   @db.VarChar
  add_sign                                               Boolean?
  create_uid                                             Int?
  create_date                                            DateTime?                                 @db.Timestamp(6)
  write_uid                                              Int?
  write_date                                             DateTime?                                 @db.Timestamp(6)
  website_published                                      Boolean?
  res_partner                                            res_partner?                              @relation(fields: [author_id], references: [id], onUpdate: NoAction)
  res_users_mail_compose_message_create_uidTores_users   res_users?                                @relation("mail_compose_message_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  mail_activity_type                                     mail_activity_type?                       @relation(fields: [mail_activity_type_id], references: [id], onUpdate: NoAction)
  ir_mail_server                                         ir_mail_server?                           @relation(fields: [mail_server_id], references: [id], onUpdate: NoAction)
  res_users_mail_compose_message_moderator_idTores_users res_users?                                @relation("mail_compose_message_moderator_idTores_users", fields: [moderator_id], references: [id], onUpdate: NoAction)
  mail_message                                           mail_message?                             @relation(fields: [parent_id], references: [id], onUpdate: NoAction)
  mail_message_subtype                                   mail_message_subtype?                     @relation(fields: [subtype_id], references: [id], onUpdate: NoAction)
  mail_template                                          mail_template?                            @relation(fields: [template_id], references: [id], onUpdate: NoAction)
  res_users_mail_compose_message_write_uidTores_users    res_users?                                @relation("mail_compose_message_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_compose_message_ir_attachments_rel                mail_compose_message_ir_attachments_rel[]
  mail_compose_message_res_partner_rel                   mail_compose_message_res_partner_rel[]

  @@index([author_id], map: "mail_compose_message_author_id_index")
  @@index([mail_activity_type_id], map: "mail_compose_message_mail_activity_type_id_index")
  @@index([message_id], map: "mail_compose_message_message_id_index")
  @@index([model], map: "mail_compose_message_model_index")
  @@index([moderation_status], map: "mail_compose_message_moderation_status_index")
  @@index([moderator_id], map: "mail_compose_message_moderator_id_index")
  @@index([parent_id], map: "mail_compose_message_parent_id_index")
  @@index([res_id], map: "mail_compose_message_res_id_index")
  @@index([subtype_id], map: "mail_compose_message_subtype_id_index")
  @@index([template_id], map: "mail_compose_message_template_id_index")
}

model mail_compose_message_ir_attachments_rel {
  wizard_id            Int
  attachment_id        Int
  ir_attachment        ir_attachment        @relation(fields: [attachment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_compose_message mail_compose_message @relation(fields: [wizard_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wizard_id, attachment_id], map: "mail_compose_message_ir_attachments_wizard_id_attachment_id_key")
  @@index([attachment_id])
  @@index([wizard_id])
}

model mail_compose_message_res_partner_rel {
  wizard_id            Int
  partner_id           Int
  res_partner          res_partner          @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_compose_message mail_compose_message @relation(fields: [wizard_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wizard_id, partner_id])
  @@index([partner_id])
  @@index([wizard_id])
}

model mail_followers {
  id                                      Int                                       @id @default(autoincrement())
  res_model                               String                                    @db.VarChar
  res_id                                  Int?
  partner_id                              Int?
  channel_id                              Int?
  mail_channel                            mail_channel?                             @relation(fields: [channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner                             res_partner?                              @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_followers_mail_message_subtype_rel mail_followers_mail_message_subtype_rel[]

  @@unique([res_model, res_id, channel_id], map: "mail_followers_mail_followers_res_channel_res_model_id_uniq")
  @@unique([res_model, res_id, partner_id], map: "mail_followers_mail_followers_res_partner_res_model_id_uniq")
  @@index([channel_id], map: "mail_followers_channel_id_index")
  @@index([partner_id], map: "mail_followers_partner_id_index")
  @@index([res_id], map: "mail_followers_res_id_index")
  @@index([res_model], map: "mail_followers_res_model_index")
}

model mail_followers_mail_message_subtype_rel {
  mail_followers_id       Int
  mail_message_subtype_id Int
  mail_message_subtype    mail_message_subtype @relation(fields: [mail_message_subtype_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mail_followers_mail_message_subtyp_mail_message_subtype_id_fkey")
  mail_followers          mail_followers       @relation(fields: [mail_followers_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_followers_id, mail_message_subtype_id], map: "mail_followers_mail_message_s_mail_followers_id_mail_messag_key")
  @@index([mail_message_subtype_id], map: "mail_followers_mail_message_subtype_mail_message_subtype_id_idx")
  @@index([mail_followers_id])
}

model mail_mail {
  id                                        Int                                       @id @default(autoincrement())
  mail_message_id                           Int
  body_html                                 String?
  references                                String?
  headers                                   String?
  notification                              Boolean?
  email_to                                  String?
  email_cc                                  String?                                   @db.VarChar
  state                                     String?                                   @db.VarChar
  auto_delete                               Boolean?
  failure_reason                            String?
  scheduled_date                            String?                                   @db.VarChar
  create_uid                                Int?
  create_date                               DateTime?                                 @db.Timestamp(6)
  write_uid                                 Int?
  write_date                                DateTime?                                 @db.Timestamp(6)
  fetchmail_server_id                       Int?
  res_users_mail_mail_create_uidTores_users res_users?                                @relation("mail_mail_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  fetchmail_server                          fetchmail_server?                         @relation(fields: [fetchmail_server_id], references: [id], onUpdate: NoAction)
  mail_message                              mail_message                              @relation(fields: [mail_message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_mail_mail_write_uidTores_users  res_users?                                @relation("mail_mail_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_mail_res_partner_rel                 mail_mail_res_partner_rel[]
  mail_message_res_partner_needaction_rel   mail_message_res_partner_needaction_rel[]

  @@index([fetchmail_server_id], map: "mail_mail_fetchmail_server_id_index")
  @@index([mail_message_id], map: "mail_mail_mail_message_id_index")
}

model mail_mail_res_partner_rel {
  mail_mail_id   Int
  res_partner_id Int
  mail_mail      mail_mail   @relation(fields: [mail_mail_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner    res_partner @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_mail_id, res_partner_id])
  @@index([mail_mail_id])
  @@index([res_partner_id])
}

model mail_message {
  id                                             Int                                       @id @default(autoincrement())
  subject                                        String?                                   @db.VarChar
  date                                           DateTime?                                 @db.Timestamp(6)
  body                                           String?
  parent_id                                      Int?
  model                                          String?                                   @db.VarChar
  res_id                                         Int?
  record_name                                    String?                                   @db.VarChar
  message_type                                   String                                    @db.VarChar
  subtype_id                                     Int?
  mail_activity_type_id                          Int?
  email_from                                     String?                                   @db.VarChar
  author_id                                      Int?
  no_auto_thread                                 Boolean?
  message_id                                     String?                                   @db.VarChar
  reply_to                                       String?                                   @db.VarChar
  mail_server_id                                 Int?
  moderation_status                              String?                                   @db.VarChar
  moderator_id                                   Int?
  layout                                         String?                                   @db.VarChar
  add_sign                                       Boolean?
  create_uid                                     Int?
  create_date                                    DateTime?                                 @db.Timestamp(6)
  write_uid                                      Int?
  write_date                                     DateTime?                                 @db.Timestamp(6)
  website_published                              Boolean?
  mail_channel_partner                           mail_channel_partner[]
  mail_compose_message                           mail_compose_message[]
  mail_mail                                      mail_mail[]
  res_partner                                    res_partner?                              @relation(fields: [author_id], references: [id], onUpdate: NoAction)
  res_users_mail_message_create_uidTores_users   res_users?                                @relation("mail_message_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  mail_activity_type                             mail_activity_type?                       @relation(fields: [mail_activity_type_id], references: [id], onUpdate: NoAction)
  ir_mail_server                                 ir_mail_server?                           @relation(fields: [mail_server_id], references: [id], onUpdate: NoAction)
  res_users_mail_message_moderator_idTores_users res_users?                                @relation("mail_message_moderator_idTores_users", fields: [moderator_id], references: [id], onUpdate: NoAction)
  mail_message                                   mail_message?                             @relation("mail_messageTomail_message", fields: [parent_id], references: [id], onUpdate: NoAction)
  other_mail_message                             mail_message[]                            @relation("mail_messageTomail_message")
  mail_message_subtype                           mail_message_subtype?                     @relation(fields: [subtype_id], references: [id], onUpdate: NoAction)
  res_users_mail_message_write_uidTores_users    res_users?                                @relation("mail_message_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_message_mail_channel_rel                  mail_message_mail_channel_rel[]
  mail_message_res_partner_needaction_rel        mail_message_res_partner_needaction_rel[]
  mail_message_res_partner_rel                   mail_message_res_partner_rel[]
  mail_message_res_partner_starred_rel           mail_message_res_partner_starred_rel[]
  mail_resend_message                            mail_resend_message[]
  mail_tracking_value                            mail_tracking_value[]
  message_attachment_rel                         message_attachment_rel[]

  @@index([author_id], map: "mail_message_author_id_index")
  @@index([mail_activity_type_id], map: "mail_message_mail_activity_type_id_index")
  @@index([message_id], map: "mail_message_message_id_index")
  @@index([model], map: "mail_message_model_index")
  @@index([model, res_id])
  @@index([moderation_status], map: "mail_message_moderation_status_index")
  @@index([moderator_id], map: "mail_message_moderator_id_index")
  @@index([parent_id], map: "mail_message_parent_id_index")
  @@index([res_id], map: "mail_message_res_id_index")
  @@index([subtype_id], map: "mail_message_subtype_id_index")
}

model mail_message_mail_channel_rel {
  mail_message_id Int
  mail_channel_id Int
  mail_channel    mail_channel @relation(fields: [mail_channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_message    mail_message @relation(fields: [mail_message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_message_id, mail_channel_id])
  @@index([mail_channel_id])
  @@index([mail_message_id])
}

model mail_message_res_partner_needaction_rel {
  id                                                              Int                                                               @id @default(autoincrement())
  mail_message_id                                                 Int
  res_partner_id                                                  Int
  is_read                                                         Boolean?
  is_email                                                        Boolean?
  email_status                                                    String?                                                           @db.VarChar
  mail_id                                                         Int?
  failure_type                                                    String?                                                           @db.VarChar
  failure_reason                                                  String?
  mail_mail                                                       mail_mail?                                                        @relation(fields: [mail_id], references: [id], onUpdate: NoAction)
  mail_message                                                    mail_message                                                      @relation(fields: [mail_message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner                                                     res_partner                                                       @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_message_res_partner_needaction_rel_mail_resend_message_rel mail_message_res_partner_needaction_rel_mail_resend_message_rel[]

  @@index([email_status], map: "mail_message_res_partner_needaction_rel_email_status_index")
  @@index([is_email], map: "mail_message_res_partner_needaction_rel_is_email_index")
  @@index([is_read], map: "mail_message_res_partner_needaction_rel_is_read_index")
  @@index([mail_id], map: "mail_message_res_partner_needaction_rel_mail_id_index")
  @@index([mail_message_id], map: "mail_message_res_partner_needaction_rel_mail_message_id_index")
  @@index([res_partner_id], map: "mail_message_res_partner_needaction_rel_res_partner_id_index")
  @@index([res_partner_id, is_read, email_status, mail_message_id], map: "mail_notification_res_partner_id_is_read_email_status_mail_mess")
}

model mail_message_res_partner_needaction_rel_mail_resend_message_rel {
  mail_resend_message_id                     Int
  mail_message_res_partner_needaction_rel_id Int
  mail_message_res_partner_needaction_rel    mail_message_res_partner_needaction_rel @relation(fields: [mail_message_res_partner_needaction_rel_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mail_message_res_partner_need_mail_message_res_partner_nee_fkey")
  mail_resend_message                        mail_resend_message                     @relation(fields: [mail_resend_message_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mail_message_res_partner_needaction_mail_resend_message_id_fkey")

  @@unique([mail_resend_message_id, mail_message_res_partner_needaction_rel_id], map: "mail_message_res_partner_need_mail_resend_message_id_mail_m_key")
  @@index([mail_message_res_partner_needaction_rel_id], map: "mail_message_res_partner_need_mail_message_res_partner_need_idx")
  @@index([mail_resend_message_id], map: "mail_message_res_partner_needaction__mail_resend_message_id_idx")
}

model mail_message_res_partner_rel {
  mail_message_id Int
  res_partner_id  Int
  mail_message    mail_message @relation(fields: [mail_message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner     res_partner  @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_message_id, res_partner_id])
  @@index([mail_message_id])
  @@index([res_partner_id])
}

model mail_message_res_partner_starred_rel {
  mail_message_id Int
  res_partner_id  Int
  mail_message    mail_message @relation(fields: [mail_message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner     res_partner  @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_message_id, res_partner_id], map: "mail_message_res_partner_star_mail_message_id_res_partner_i_key")
  @@index([mail_message_id])
  @@index([res_partner_id])
}

model mail_message_subtype {
  id                                                   Int                                       @id @default(autoincrement())
  name                                                 String                                    @db.VarChar
  description                                          String?
  internal                                             Boolean?
  parent_id                                            Int?
  relation_field                                       String?                                   @db.VarChar
  res_model                                            String?                                   @db.VarChar
  default                                              Boolean?
  sequence                                             Int?
  hidden                                               Boolean?
  create_uid                                           Int?
  create_date                                          DateTime?                                 @db.Timestamp(6)
  write_uid                                            Int?
  write_date                                           DateTime?                                 @db.Timestamp(6)
  mail_compose_message                                 mail_compose_message[]
  mail_followers_mail_message_subtype_rel              mail_followers_mail_message_subtype_rel[]
  mail_message                                         mail_message[]
  res_users_mail_message_subtype_create_uidTores_users res_users?                                @relation("mail_message_subtype_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  mail_message_subtype                                 mail_message_subtype?                     @relation("mail_message_subtypeTomail_message_subtype", fields: [parent_id], references: [id], onUpdate: NoAction)
  other_mail_message_subtype                           mail_message_subtype[]                    @relation("mail_message_subtypeTomail_message_subtype")
  res_users_mail_message_subtype_write_uidTores_users  res_users?                                @relation("mail_message_subtype_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model mail_moderation {
  id                                              Int          @id @default(autoincrement())
  email                                           String       @db.VarChar
  status                                          String       @db.VarChar
  channel_id                                      Int
  create_uid                                      Int?
  create_date                                     DateTime?    @db.Timestamp(6)
  write_uid                                       Int?
  write_date                                      DateTime?    @db.Timestamp(6)
  mail_channel                                    mail_channel @relation(fields: [channel_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_mail_moderation_create_uidTores_users res_users?   @relation("mail_moderation_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_mail_moderation_write_uidTores_users  res_users?   @relation("mail_moderation_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([email, channel_id], map: "mail_moderation_channel_email_uniq")
  @@index([channel_id], map: "mail_moderation_channel_id_index")
  @@index([email], map: "mail_moderation_email_index")
}

model mail_resend_cancel {
  id                                                 Int        @id @default(autoincrement())
  model                                              String?    @db.VarChar
  create_uid                                         Int?
  create_date                                        DateTime?  @db.Timestamp(6)
  write_uid                                          Int?
  write_date                                         DateTime?  @db.Timestamp(6)
  res_users_mail_resend_cancel_create_uidTores_users res_users? @relation("mail_resend_cancel_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_mail_resend_cancel_write_uidTores_users  res_users? @relation("mail_resend_cancel_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model mail_resend_message {
  id                                                              Int                                                               @id @default(autoincrement())
  mail_message_id                                                 Int?
  create_uid                                                      Int?
  create_date                                                     DateTime?                                                         @db.Timestamp(6)
  write_uid                                                       Int?
  write_date                                                      DateTime?                                                         @db.Timestamp(6)
  mail_message_res_partner_needaction_rel_mail_resend_message_rel mail_message_res_partner_needaction_rel_mail_resend_message_rel[]
  res_users_mail_resend_message_create_uidTores_users             res_users?                                                        @relation("mail_resend_message_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  mail_message                                                    mail_message?                                                     @relation(fields: [mail_message_id], references: [id], onUpdate: NoAction)
  res_users_mail_resend_message_write_uidTores_users              res_users?                                                        @relation("mail_resend_message_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_resend_partner                                             mail_resend_partner[]
}

model mail_resend_partner {
  id                                                  Int                  @id @default(autoincrement())
  partner_id                                          Int
  resend                                              Boolean?
  resend_wizard_id                                    Int?
  message                                             String?              @db.VarChar
  create_uid                                          Int?
  create_date                                         DateTime?            @db.Timestamp(6)
  write_uid                                           Int?
  write_date                                          DateTime?            @db.Timestamp(6)
  res_users_mail_resend_partner_create_uidTores_users res_users?           @relation("mail_resend_partner_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_partner                                         res_partner          @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_resend_message                                 mail_resend_message? @relation(fields: [resend_wizard_id], references: [id], onUpdate: NoAction)
  res_users_mail_resend_partner_write_uidTores_users  res_users?           @relation("mail_resend_partner_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model mail_shortcode {
  id                                             Int        @id @default(autoincrement())
  source                                         String     @db.VarChar
  substitution                                   String
  description                                    String?    @db.VarChar
  create_uid                                     Int?
  create_date                                    DateTime?  @db.Timestamp(6)
  write_uid                                      Int?
  write_date                                     DateTime?  @db.Timestamp(6)
  res_users_mail_shortcode_create_uidTores_users res_users? @relation("mail_shortcode_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_mail_shortcode_write_uidTores_users  res_users? @relation("mail_shortcode_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([source], map: "mail_shortcode_source_index")
  @@index([substitution], map: "mail_shortcode_substitution_index")
}

model mail_template {
  id                                                                    Int                                    @id @default(autoincrement())
  name                                                                  String?                                @db.VarChar
  model_id                                                              Int?
  model                                                                 String?                                @db.VarChar
  lang                                                                  String?                                @db.VarChar
  user_signature                                                        Boolean?
  subject                                                               String?                                @db.VarChar
  email_from                                                            String?                                @db.VarChar
  use_default_to                                                        Boolean?
  email_to                                                              String?                                @db.VarChar
  partner_to                                                            String?                                @db.VarChar
  email_cc                                                              String?                                @db.VarChar
  reply_to                                                              String?                                @db.VarChar
  mail_server_id                                                        Int?
  body_html                                                             String?
  report_name                                                           String?                                @db.VarChar
  report_template                                                       Int?
  ref_ir_act_window                                                     Int?
  auto_delete                                                           Boolean?
  model_object_field                                                    Int?
  sub_object                                                            Int?
  sub_model_object_field                                                Int?
  null_value                                                            String?                                @db.VarChar
  copyvalue                                                             String?                                @db.VarChar
  scheduled_date                                                        String?                                @db.VarChar
  create_uid                                                            Int?
  create_date                                                           DateTime?                              @db.Timestamp(6)
  write_uid                                                             Int?
  write_date                                                            DateTime?                              @db.Timestamp(6)
  email_template_attachment_rel                                         email_template_attachment_rel[]
  ir_act_server                                                         ir_act_server[]
  mail_activity_type_mail_template_rel                                  mail_activity_type_mail_template_rel[]
  mail_compose_message                                                  mail_compose_message[]
  res_users_mail_template_create_uidTores_users                         res_users?                             @relation("mail_template_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_mail_server                                                        ir_mail_server?                        @relation(fields: [mail_server_id], references: [id], onUpdate: NoAction)
  ir_model_mail_template_model_idToir_model                             ir_model?                              @relation("mail_template_model_idToir_model", fields: [model_id], references: [id], onUpdate: NoAction)
  ir_model_fields_mail_template_model_object_fieldToir_model_fields     ir_model_fields?                       @relation("mail_template_model_object_fieldToir_model_fields", fields: [model_object_field], references: [id], onUpdate: NoAction)
  ir_act_window                                                         ir_act_window?                         @relation(fields: [ref_ir_act_window], references: [id], onUpdate: NoAction)
  ir_act_report_xml                                                     ir_act_report_xml?                     @relation(fields: [report_template], references: [id], onUpdate: NoAction)
  ir_model_fields_mail_template_sub_model_object_fieldToir_model_fields ir_model_fields?                       @relation("mail_template_sub_model_object_fieldToir_model_fields", fields: [sub_model_object_field], references: [id], onUpdate: NoAction)
  ir_model_mail_template_sub_objectToir_model                           ir_model?                              @relation("mail_template_sub_objectToir_model", fields: [sub_object], references: [id], onUpdate: NoAction)
  res_users_mail_template_write_uidTores_users                          res_users?                             @relation("mail_template_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([model], map: "mail_template_model_index")
}

model mail_tracking_value {
  id                                                  Int          @id @default(autoincrement())
  field                                               String       @db.VarChar
  field_desc                                          String       @db.VarChar
  field_type                                          String?      @db.VarChar
  old_value_integer                                   Int?
  old_value_float                                     Float?
  old_value_monetary                                  Float?
  old_value_char                                      String?      @db.VarChar
  old_value_text                                      String?
  old_value_datetime                                  DateTime?    @db.Timestamp(6)
  new_value_integer                                   Int?
  new_value_float                                     Float?
  new_value_monetary                                  Float?
  new_value_char                                      String?      @db.VarChar
  new_value_text                                      String?
  new_value_datetime                                  DateTime?    @db.Timestamp(6)
  mail_message_id                                     Int
  track_sequence                                      Int?
  create_uid                                          Int?
  create_date                                         DateTime?    @db.Timestamp(6)
  write_uid                                           Int?
  write_date                                          DateTime?    @db.Timestamp(6)
  res_users_mail_tracking_value_create_uidTores_users res_users?   @relation("mail_tracking_value_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  mail_message                                        mail_message @relation(fields: [mail_message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_mail_tracking_value_write_uidTores_users  res_users?   @relation("mail_tracking_value_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([mail_message_id], map: "mail_tracking_value_mail_message_id_index")
}

model mail_wizard_invite {
  id                                                 Int                                   @id @default(autoincrement())
  res_model                                          String                                @db.VarChar
  res_id                                             Int?
  message                                            String?
  send_mail                                          Boolean?
  create_uid                                         Int?
  create_date                                        DateTime?                             @db.Timestamp(6)
  write_uid                                          Int?
  write_date                                         DateTime?                             @db.Timestamp(6)
  mail_channel_mail_wizard_invite_rel                mail_channel_mail_wizard_invite_rel[]
  res_users_mail_wizard_invite_create_uidTores_users res_users?                            @relation("mail_wizard_invite_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_mail_wizard_invite_write_uidTores_users  res_users?                            @relation("mail_wizard_invite_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  mail_wizard_invite_res_partner_rel                 mail_wizard_invite_res_partner_rel[]

  @@index([res_id], map: "mail_wizard_invite_res_id_index")
  @@index([res_model], map: "mail_wizard_invite_res_model_index")
}

model mail_wizard_invite_res_partner_rel {
  mail_wizard_invite_id Int
  res_partner_id        Int
  mail_wizard_invite    mail_wizard_invite @relation(fields: [mail_wizard_invite_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner           res_partner        @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mail_wizard_invite_id, res_partner_id], map: "mail_wizard_invite_res_partne_mail_wizard_invite_id_res_par_key")
  @@index([mail_wizard_invite_id])
  @@index([res_partner_id])
}

model message_attachment_rel {
  message_id    Int
  attachment_id Int
  ir_attachment ir_attachment @relation(fields: [attachment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  mail_message  mail_message  @relation(fields: [message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([message_id, attachment_id])
  @@index([attachment_id])
  @@index([message_id])
}

model portal_share {
  id                                           Int                            @id @default(autoincrement())
  res_model                                    String                         @db.VarChar
  res_id                                       Int
  note                                         String?
  create_uid                                   Int?
  create_date                                  DateTime?                      @db.Timestamp(6)
  write_uid                                    Int?
  write_date                                   DateTime?                      @db.Timestamp(6)
  res_users_portal_share_create_uidTores_users res_users?                     @relation("portal_share_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_portal_share_write_uidTores_users  res_users?                     @relation("portal_share_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  portal_share_res_partner_rel                 portal_share_res_partner_rel[]
}

model portal_share_res_partner_rel {
  portal_share_id Int
  res_partner_id  Int
  portal_share    portal_share @relation(fields: [portal_share_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner     res_partner  @relation(fields: [res_partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([portal_share_id, res_partner_id])
  @@index([portal_share_id])
  @@index([res_partner_id])
}

model portal_wizard {
  id                                            Int                  @id @default(autoincrement())
  welcome_message                               String?
  create_uid                                    Int?
  create_date                                   DateTime?            @db.Timestamp(6)
  write_uid                                     Int?
  write_date                                    DateTime?            @db.Timestamp(6)
  res_users_portal_wizard_create_uidTores_users res_users?           @relation("portal_wizard_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_portal_wizard_write_uidTores_users  res_users?           @relation("portal_wizard_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  portal_wizard_user                            portal_wizard_user[]
}

model portal_wizard_user {
  id                                                 Int           @id @default(autoincrement())
  wizard_id                                          Int
  partner_id                                         Int
  email                                              String?       @db.VarChar
  in_portal                                          Boolean?
  user_id                                            Int?
  create_uid                                         Int?
  create_date                                        DateTime?     @db.Timestamp(6)
  write_uid                                          Int?
  write_date                                         DateTime?     @db.Timestamp(6)
  res_users_portal_wizard_user_create_uidTores_users res_users?    @relation("portal_wizard_user_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_partner                                        res_partner   @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_portal_wizard_user_user_idTores_users    res_users?    @relation("portal_wizard_user_user_idTores_users", fields: [user_id], references: [id], onUpdate: NoAction)
  portal_wizard                                      portal_wizard @relation(fields: [wizard_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_portal_wizard_user_write_uidTores_users  res_users?    @relation("portal_wizard_user_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model rel_modules_langexport {
  wiz_id               Int
  module_id            Int
  ir_module_module     ir_module_module     @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  base_language_export base_language_export @relation(fields: [wiz_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([wiz_id, module_id])
  @@index([module_id])
  @@index([wiz_id])
}

model rel_server_actions {
  server_id                                                 Int
  action_id                                                 Int
  ir_act_server_rel_server_actions_action_idToir_act_server ir_act_server @relation("rel_server_actions_action_idToir_act_server", fields: [action_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_act_server_rel_server_actions_server_idToir_act_server ir_act_server @relation("rel_server_actions_server_idToir_act_server", fields: [server_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([server_id, action_id])
  @@index([action_id])
  @@index([server_id])
}

model report_layout {
  id                                            Int        @id @default(autoincrement())
  view_id                                       Int
  image                                         String?    @db.VarChar
  pdf                                           String?    @db.VarChar
  create_uid                                    Int?
  create_date                                   DateTime?  @db.Timestamp(6)
  write_uid                                     Int?
  write_date                                    DateTime?  @db.Timestamp(6)
  res_users_report_layout_create_uidTores_users res_users? @relation("report_layout_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_view                                    ir_ui_view @relation(fields: [view_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_report_layout_write_uidTores_users  res_users? @relation("report_layout_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model report_paperformat {
  id                                                 Int                 @id @default(autoincrement())
  name                                               String              @db.VarChar
  default                                            Boolean?
  format                                             String?             @db.VarChar
  margin_top                                         Float?
  margin_bottom                                      Float?
  margin_left                                        Float?
  margin_right                                       Float?
  page_height                                        Int?
  page_width                                         Int?
  orientation                                        String?             @db.VarChar
  header_line                                        Boolean?
  header_spacing                                     Int?
  dpi                                                Int
  create_uid                                         Int?
  create_date                                        DateTime?           @db.Timestamp(6)
  write_uid                                          Int?
  write_date                                         DateTime?           @db.Timestamp(6)
  ir_act_report_xml                                  ir_act_report_xml[]
  res_users_report_paperformat_create_uidTores_users res_users?          @relation("report_paperformat_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_report_paperformat_write_uidTores_users  res_users?          @relation("report_paperformat_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_company                                        res_company[]
}

model res_bank {
  id                                       Int                @id @default(autoincrement())
  name                                     String             @db.VarChar
  street                                   String?            @db.VarChar
  street2                                  String?            @db.VarChar
  zip                                      String?            @db.VarChar
  city                                     String?            @db.VarChar
  state                                    Int?
  country                                  Int?
  email                                    String?            @db.VarChar
  phone                                    String?            @db.VarChar
  active                                   Boolean?
  bic                                      String?            @db.VarChar
  create_uid                               Int?
  create_date                              DateTime?          @db.Timestamp(6)
  write_uid                                Int?
  write_date                               DateTime?          @db.Timestamp(6)
  res_country                              res_country?       @relation(fields: [country], references: [id], onUpdate: NoAction)
  res_users_res_bank_create_uidTores_users res_users?         @relation("res_bank_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_country_state                        res_country_state? @relation(fields: [state], references: [id], onUpdate: NoAction)
  res_users_res_bank_write_uidTores_users  res_users?         @relation("res_bank_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_partner_bank                         res_partner_bank[]

  @@index([bic], map: "res_bank_bic_index")
}

model res_company {
  id                                              Int                     @id @default(autoincrement())
  name                                            String                  @unique(map: "res_company_name_uniq") @db.VarChar
  partner_id                                      Int
  currency_id                                     Int
  sequence                                        Int?
  create_date                                     DateTime?               @db.Timestamp(6)
  parent_id                                       Int?
  report_header                                   String?
  report_footer                                   String?
  logo_web                                        Bytes?
  account_no                                      String?                 @db.VarChar
  email                                           String?                 @db.VarChar
  phone                                           String?                 @db.VarChar
  company_registry                                String?                 @db.VarChar
  paperformat_id                                  Int?
  external_report_layout_id                       Int?
  base_onboarding_company_state                   String?                 @db.VarChar
  create_uid                                      Int?
  write_uid                                       Int?
  write_date                                      DateTime?               @db.Timestamp(6)
  social_twitter                                  String?                 @db.VarChar
  social_facebook                                 String?                 @db.VarChar
  social_github                                   String?                 @db.VarChar
  social_linkedin                                 String?                 @db.VarChar
  social_youtube                                  String?                 @db.VarChar
  social_googleplus                               String?                 @db.VarChar
  social_instagram                                String?                 @db.VarChar
  partner_gid                                     Int?
  snailmail_color                                 Boolean?
  snailmail_duplex                                Boolean?
  iap_account                                     iap_account[]
  ir_attachment                                   ir_attachment[]
  ir_default                                      ir_default[]
  ir_property                                     ir_property[]
  ir_sequence                                     ir_sequence[]
  res_users_res_company_create_uidTores_users     res_users?              @relation("res_company_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                    res_currency            @relation(fields: [currency_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  ir_ui_view                                      ir_ui_view?             @relation(fields: [external_report_layout_id], references: [id], onUpdate: NoAction)
  report_paperformat                              report_paperformat?     @relation(fields: [paperformat_id], references: [id], onUpdate: NoAction)
  res_company                                     res_company?            @relation("res_companyTores_company", fields: [parent_id], references: [id], onUpdate: NoAction)
  other_res_company                               res_company[]           @relation("res_companyTores_company")
  res_partner_res_company_partner_idTores_partner res_partner             @relation("res_company_partner_idTores_partner", fields: [partner_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_res_company_write_uidTores_users      res_users?              @relation("res_company_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_company_users_rel                           res_company_users_rel[]
  res_config_settings                             res_config_settings[]
  res_currency_rate                               res_currency_rate[]
  res_partner_res_partner_company_idTores_company res_partner[]           @relation("res_partner_company_idTores_company")
  res_partner_bank                                res_partner_bank[]
  res_users_res_users_company_idTores_company     res_users[]             @relation("res_users_company_idTores_company")
  snailmail_letter                                snailmail_letter[]
  website                                         website[]

  @@index([parent_id], map: "res_company_parent_id_index")
}

model res_company_users_rel {
  cid         Int
  user_id     Int
  res_company res_company @relation(fields: [cid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users   res_users   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([cid, user_id])
  @@index([cid])
  @@index([user_id])
}

model res_config {
  id                                         Int        @id @default(autoincrement())
  create_uid                                 Int?
  create_date                                DateTime?  @db.Timestamp(6)
  write_uid                                  Int?
  write_date                                 DateTime?  @db.Timestamp(6)
  res_users_res_config_create_uidTores_users res_users? @relation("res_config_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_config_write_uidTores_users  res_users? @relation("res_config_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model res_config_installer {
  id                                                   Int        @id @default(autoincrement())
  create_uid                                           Int?
  create_date                                          DateTime?  @db.Timestamp(6)
  write_uid                                            Int?
  write_date                                           DateTime?  @db.Timestamp(6)
  res_users_res_config_installer_create_uidTores_users res_users? @relation("res_config_installer_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_config_installer_write_uidTores_users  res_users? @relation("res_config_installer_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model res_config_settings {
  id                                                                    Int         @id @default(autoincrement())
  create_uid                                                            Int?
  create_date                                                           DateTime?   @db.Timestamp(6)
  write_uid                                                             Int?
  write_date                                                            DateTime?   @db.Timestamp(6)
  group_multi_company                                                   Boolean?
  company_id                                                            Int
  user_default_rights                                                   Boolean?
  external_email_server_default                                         Boolean?
  module_base_import                                                    Boolean?
  module_google_calendar                                                Boolean?
  module_google_drive                                                   Boolean?
  module_google_spreadsheet                                             Boolean?
  module_auth_oauth                                                     Boolean?
  module_auth_ldap                                                      Boolean?
  module_base_gengo                                                     Boolean?
  module_inter_company_rules                                            Boolean?
  module_pad                                                            Boolean?
  module_voip                                                           Boolean?
  module_web_unsplash                                                   Boolean?
  module_partner_autocomplete                                           Boolean?
  company_share_partner                                                 Boolean?
  group_multi_currency                                                  Boolean?
  show_effect                                                           Boolean?
  fail_counter                                                          Int?
  alias_domain                                                          String?     @db.VarChar
  unsplash_access_key                                                   String?     @db.VarChar
  auth_signup_reset_password                                            Boolean?
  auth_signup_uninvited                                                 String?     @db.VarChar
  auth_signup_template_user_id                                          Int?
  website_id                                                            Int?
  module_website_version                                                Boolean?
  module_website_links                                                  Boolean?
  group_multi_website                                                   Boolean?
  res_users_res_config_settings_auth_signup_template_user_idTores_users res_users?  @relation("res_config_settings_auth_signup_template_user_idTores_users", fields: [auth_signup_template_user_id], references: [id], onUpdate: NoAction)
  res_company                                                           res_company @relation(fields: [company_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_res_config_settings_create_uidTores_users                   res_users?  @relation("res_config_settings_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  website                                                               website?    @relation(fields: [website_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_res_config_settings_write_uidTores_users                    res_users?  @relation("res_config_settings_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model res_country {
  id                                          Int                                 @id @default(autoincrement())
  name                                        String                              @unique(map: "res_country_name_uniq") @db.VarChar
  code                                        String?                             @unique(map: "res_country_code_uniq") @db.VarChar(2)
  address_format                              String?
  address_view_id                             Int?
  currency_id                                 Int?
  phone_code                                  Int?
  name_position                               String?                             @db.VarChar
  vat_label                                   String?                             @db.VarChar
  create_uid                                  Int?
  create_date                                 DateTime?                           @db.Timestamp(6)
  write_uid                                   Int?
  write_date                                  DateTime?                           @db.Timestamp(6)
  res_bank                                    res_bank[]
  ir_ui_view                                  ir_ui_view?                         @relation(fields: [address_view_id], references: [id], onUpdate: NoAction)
  res_users_res_country_create_uidTores_users res_users?                          @relation("res_country_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                res_currency?                       @relation(fields: [currency_id], references: [id], onUpdate: NoAction)
  res_users_res_country_write_uidTores_users  res_users?                          @relation("res_country_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_country_res_country_group_rel           res_country_res_country_group_rel[]
  res_country_state                           res_country_state[]
  res_partner                                 res_partner[]
}

model res_country_group {
  id                                                Int                                 @id @default(autoincrement())
  name                                              String                              @db.VarChar
  create_uid                                        Int?
  create_date                                       DateTime?                           @db.Timestamp(6)
  write_uid                                         Int?
  write_date                                        DateTime?                           @db.Timestamp(6)
  res_users_res_country_group_create_uidTores_users res_users?                          @relation("res_country_group_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_country_group_write_uidTores_users  res_users?                          @relation("res_country_group_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_country_res_country_group_rel                 res_country_res_country_group_rel[]
  website_country_group_rel                         website_country_group_rel[]
}

model res_country_res_country_group_rel {
  res_country_id       Int
  res_country_group_id Int
  res_country_group    res_country_group @relation(fields: [res_country_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_country          res_country       @relation(fields: [res_country_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([res_country_id, res_country_group_id], map: "res_country_res_country_group_res_country_id_res_country_gr_key")
  @@index([res_country_group_id])
  @@index([res_country_id])
}

model res_country_state {
  id                                                Int           @id @default(autoincrement())
  country_id                                        Int
  name                                              String        @db.VarChar
  code                                              String        @db.VarChar
  create_uid                                        Int?
  create_date                                       DateTime?     @db.Timestamp(6)
  write_uid                                         Int?
  write_date                                        DateTime?     @db.Timestamp(6)
  res_bank                                          res_bank[]
  res_country                                       res_country   @relation(fields: [country_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_res_country_state_create_uidTores_users res_users?    @relation("res_country_state_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_country_state_write_uidTores_users  res_users?    @relation("res_country_state_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_partner                                       res_partner[]

  @@unique([country_id, code], map: "res_country_state_name_code_uniq")
}

model res_currency {
  id                                           Int                                @id @default(autoincrement())
  name                                         String                             @unique(map: "res_currency_unique_name") @db.VarChar
  symbol                                       String                             @db.VarChar
  rounding                                     Decimal?                           @db.Decimal
  decimal_places                               Int?
  active                                       Boolean?
  position                                     String?                            @db.VarChar
  currency_unit_label                          String?                            @db.VarChar
  currency_subunit_label                       String?                            @db.VarChar
  create_uid                                   Int?
  create_date                                  DateTime?                          @db.Timestamp(6)
  write_uid                                    Int?
  write_date                                   DateTime?                          @db.Timestamp(6)
  base_import_tests_models_complex             base_import_tests_models_complex[]
  base_import_tests_models_float               base_import_tests_models_float[]
  res_company                                  res_company[]
  res_country                                  res_country[]
  res_users_res_currency_create_uidTores_users res_users?                         @relation("res_currency_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_currency_write_uidTores_users  res_users?                         @relation("res_currency_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_currency_rate                            res_currency_rate[]
  res_partner_bank                             res_partner_bank[]
}

model res_currency_rate {
  id                                                Int           @id @default(autoincrement())
  name                                              DateTime      @db.Date
  rate                                              Decimal?      @db.Decimal
  currency_id                                       Int?
  company_id                                        Int?
  create_uid                                        Int?
  create_date                                       DateTime?     @db.Timestamp(6)
  write_uid                                         Int?
  write_date                                        DateTime?     @db.Timestamp(6)
  res_company                                       res_company?  @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  res_users_res_currency_rate_create_uidTores_users res_users?    @relation("res_currency_rate_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                      res_currency? @relation(fields: [currency_id], references: [id], onUpdate: NoAction)
  res_users_res_currency_rate_write_uidTores_users  res_users?    @relation("res_currency_rate_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([name, currency_id, company_id], map: "res_currency_rate_unique_name_per_day")
  @@index([name], map: "res_currency_rate_name_index")
}

model res_groups {
  id                                                            Int                           @id @default(autoincrement())
  name                                                          String                        @db.VarChar
  comment                                                       String?
  category_id                                                   Int?
  color                                                         Int?
  share                                                         Boolean?
  create_uid                                                    Int?
  create_date                                                   DateTime?                     @db.Timestamp(6)
  write_uid                                                     Int?
  write_date                                                    DateTime?                     @db.Timestamp(6)
  ir_act_window_group_rel                                       ir_act_window_group_rel[]
  ir_model_access                                               ir_model_access[]
  ir_model_fields_group_rel                                     ir_model_fields_group_rel[]
  ir_ui_menu_group_rel                                          ir_ui_menu_group_rel[]
  ir_ui_view_group_rel                                          ir_ui_view_group_rel[]
  mail_channel                                                  mail_channel[]
  mail_channel_res_groups_rel                                   mail_channel_res_groups_rel[]
  ir_module_category                                            ir_module_category?           @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  res_users_res_groups_create_uidTores_users                    res_users?                    @relation("res_groups_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_groups_write_uidTores_users                     res_users?                    @relation("res_groups_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_groups_implied_rel_res_groups_implied_rel_gidTores_groups res_groups_implied_rel[]      @relation("res_groups_implied_rel_gidTores_groups")
  res_groups_implied_rel_res_groups_implied_rel_hidTores_groups res_groups_implied_rel[]      @relation("res_groups_implied_rel_hidTores_groups")
  res_groups_report_rel                                         res_groups_report_rel[]
  res_groups_users_rel                                          res_groups_users_rel[]
  rule_group_rel                                                rule_group_rel[]

  @@unique([category_id, name], map: "res_groups_name_uniq")
  @@index([category_id], map: "res_groups_category_id_index")
}

model res_groups_implied_rel {
  gid                                               Int
  hid                                               Int
  res_groups_res_groups_implied_rel_gidTores_groups res_groups @relation("res_groups_implied_rel_gidTores_groups", fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_groups_res_groups_implied_rel_hidTores_groups res_groups @relation("res_groups_implied_rel_hidTores_groups", fields: [hid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([gid, hid])
  @@index([gid])
  @@index([hid])
}

model res_groups_report_rel {
  uid               Int
  gid               Int
  res_groups        res_groups        @relation(fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_act_report_xml ir_act_report_xml @relation(fields: [uid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([uid, gid])
  @@index([gid])
  @@index([uid])
}

model res_groups_users_rel {
  gid        Int
  uid        Int
  res_groups res_groups @relation(fields: [gid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users  res_users  @relation(fields: [uid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([gid, uid])
  @@index([gid])
  @@index([uid])
}

model res_lang {
  id                                       Int                @id @default(autoincrement())
  name                                     String             @unique(map: "res_lang_name_uniq") @db.VarChar
  code                                     String             @unique(map: "res_lang_code_uniq") @db.VarChar
  iso_code                                 String?            @db.VarChar
  translatable                             Boolean?
  active                                   Boolean?
  direction                                String             @db.VarChar
  date_format                              String             @db.VarChar
  time_format                              String             @db.VarChar
  week_start                               Int
  grouping                                 String             @db.VarChar
  decimal_point                            String             @db.VarChar
  thousands_sep                            String?            @db.VarChar
  create_uid                               Int?
  create_date                              DateTime?          @db.Timestamp(6)
  write_uid                                Int?
  write_date                               DateTime?          @db.Timestamp(6)
  ir_translation                           ir_translation[]
  res_users_res_lang_create_uidTores_users res_users?         @relation("res_lang_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_lang_write_uidTores_users  res_users?         @relation("res_lang_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  website                                  website[]
  website_lang_rel                         website_lang_rel[]
}

model res_partner {
  id                                                               Int                                                   @id @default(autoincrement())
  name                                                             String?                                               @db.VarChar
  company_id                                                       Int?
  create_date                                                      DateTime?                                             @db.Timestamp(6)
  display_name                                                     String?                                               @db.VarChar
  date                                                             DateTime?                                             @db.Date
  title                                                            Int?
  parent_id                                                        Int?
  ref                                                              String?                                               @db.VarChar
  lang                                                             String?                                               @db.VarChar
  tz                                                               String?                                               @db.VarChar
  user_id                                                          Int?
  vat                                                              String?                                               @db.VarChar
  website                                                          String?                                               @db.VarChar
  comment                                                          String?
  credit_limit                                                     Float?
  barcode                                                          String?                                               @db.VarChar
  active                                                           Boolean?
  customer                                                         Boolean?
  supplier                                                         Boolean?
  employee                                                         Boolean?
  function                                                         String?                                               @db.VarChar
  type                                                             String?                                               @db.VarChar
  street                                                           String?                                               @db.VarChar
  street2                                                          String?                                               @db.VarChar
  zip                                                              String?                                               @db.VarChar
  city                                                             String?                                               @db.VarChar
  state_id                                                         Int?
  country_id                                                       Int?
  email                                                            String?                                               @db.VarChar
  phone                                                            String?                                               @db.VarChar
  mobile                                                           String?                                               @db.VarChar
  is_company                                                       Boolean?
  industry_id                                                      Int?
  color                                                            Int?
  partner_share                                                    Boolean?
  commercial_partner_id                                            Int?
  commercial_company_name                                          String?                                               @db.VarChar
  company_name                                                     String?                                               @db.VarChar
  create_uid                                                       Int?
  write_uid                                                        Int?
  write_date                                                       DateTime?                                             @db.Timestamp(6)
  message_main_attachment_id                                       Int?
  message_bounce                                                   Int?
  signup_token                                                     String?                                               @db.VarChar
  signup_type                                                      String?                                               @db.VarChar
  signup_expiration                                                DateTime?                                             @db.Timestamp(6)
  partner_gid                                                      Int?
  additional_info                                                  String?                                               @db.VarChar
  website_id                                                       Int?
  base_partner_merge_automatic_wizard                              base_partner_merge_automatic_wizard[]
  base_partner_merge_automatic_wizard_res_partner_rel              base_partner_merge_automatic_wizard_res_partner_rel[]
  email_template_preview_res_partner_rel                           email_template_preview_res_partner_rel[]
  ir_act_server_res_partner_rel                                    ir_act_server_res_partner_rel[]
  mail_channel_partner                                             mail_channel_partner[]
  mail_compose_message                                             mail_compose_message[]
  mail_compose_message_res_partner_rel                             mail_compose_message_res_partner_rel[]
  mail_followers                                                   mail_followers[]
  mail_mail_res_partner_rel                                        mail_mail_res_partner_rel[]
  mail_message                                                     mail_message[]
  mail_message_res_partner_needaction_rel                          mail_message_res_partner_needaction_rel[]
  mail_message_res_partner_rel                                     mail_message_res_partner_rel[]
  mail_message_res_partner_starred_rel                             mail_message_res_partner_starred_rel[]
  mail_resend_partner                                              mail_resend_partner[]
  mail_wizard_invite_res_partner_rel                               mail_wizard_invite_res_partner_rel[]
  portal_share_res_partner_rel                                     portal_share_res_partner_rel[]
  portal_wizard_user                                               portal_wizard_user[]
  res_company_res_company_partner_idTores_partner                  res_company[]                                         @relation("res_company_partner_idTores_partner")
  res_partner_res_partner_commercial_partner_idTores_partner       res_partner?                                          @relation("res_partner_commercial_partner_idTores_partner", fields: [commercial_partner_id], references: [id], onUpdate: NoAction)
  other_res_partner_res_partner_commercial_partner_idTores_partner res_partner[]                                         @relation("res_partner_commercial_partner_idTores_partner")
  res_company_res_partner_company_idTores_company                  res_company?                                          @relation("res_partner_company_idTores_company", fields: [company_id], references: [id], onUpdate: NoAction)
  res_country                                                      res_country?                                          @relation(fields: [country_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  res_users_res_partner_create_uidTores_users                      res_users?                                            @relation("res_partner_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_partner_industry                                             res_partner_industry?                                 @relation(fields: [industry_id], references: [id], onUpdate: NoAction)
  ir_attachment                                                    ir_attachment?                                        @relation(fields: [message_main_attachment_id], references: [id], onUpdate: NoAction)
  res_partner_res_partner_parent_idTores_partner                   res_partner?                                          @relation("res_partner_parent_idTores_partner", fields: [parent_id], references: [id], onUpdate: NoAction)
  other_res_partner_res_partner_parent_idTores_partner             res_partner[]                                         @relation("res_partner_parent_idTores_partner")
  res_country_state                                                res_country_state?                                    @relation(fields: [state_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  res_partner_title                                                res_partner_title?                                    @relation(fields: [title], references: [id], onUpdate: NoAction)
  res_users_res_partner_user_idTores_users                         res_users?                                            @relation("res_partner_user_idTores_users", fields: [user_id], references: [id], onUpdate: NoAction)
  website_rel                                                          website?                                              @relation(fields: [website_id], references: [id], onUpdate: NoAction)
  res_users_res_partner_write_uidTores_users                       res_users?                                            @relation("res_partner_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_partner_autocomplete_sync                                    res_partner_autocomplete_sync[]
  res_partner_bank                                                 res_partner_bank[]
  res_partner_res_partner_category_rel                             res_partner_res_partner_category_rel[]
  res_users_res_users_partner_idTores_partner                      res_users[]                                           @relation("res_users_partner_idTores_partner")
  snailmail_letter                                                 snailmail_letter[]

  @@index([commercial_partner_id], map: "res_partner_commercial_partner_id_index")
  @@index([company_id], map: "res_partner_company_id_index")
  @@index([date], map: "res_partner_date_index")
  @@index([display_name], map: "res_partner_display_name_index")
  @@index([message_main_attachment_id], map: "res_partner_message_main_attachment_id_index")
  @@index([name], map: "res_partner_name_index")
  @@index([parent_id], map: "res_partner_parent_id_index")
  @@index([ref], map: "res_partner_ref_index")
}

model res_partner_autocomplete_sync {
  id                                                            Int          @id @default(autoincrement())
  partner_id                                                    Int?
  synched                                                       Boolean?
  create_uid                                                    Int?
  create_date                                                   DateTime?    @db.Timestamp(6)
  write_uid                                                     Int?
  write_date                                                    DateTime?    @db.Timestamp(6)
  res_users_res_partner_autocomplete_sync_create_uidTores_users res_users?   @relation("res_partner_autocomplete_sync_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_partner                                                   res_partner? @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_res_partner_autocomplete_sync_write_uidTores_users  res_users?   @relation("res_partner_autocomplete_sync_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model res_partner_bank {
  id                                               Int           @id @default(autoincrement())
  acc_number                                       String        @db.VarChar
  sanitized_acc_number                             String?       @db.VarChar
  acc_holder_name                                  String?       @db.VarChar
  partner_id                                       Int
  bank_id                                          Int?
  sequence                                         Int?
  currency_id                                      Int?
  company_id                                       Int?
  create_uid                                       Int?
  create_date                                      DateTime?     @db.Timestamp(6)
  write_uid                                        Int?
  write_date                                       DateTime?     @db.Timestamp(6)
  res_bank                                         res_bank?     @relation(fields: [bank_id], references: [id], onUpdate: NoAction)
  res_company                                      res_company?  @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_res_partner_bank_create_uidTores_users res_users?    @relation("res_partner_bank_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_currency                                     res_currency? @relation(fields: [currency_id], references: [id], onUpdate: NoAction)
  res_partner                                      res_partner   @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_res_partner_bank_write_uidTores_users  res_users?    @relation("res_partner_bank_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@unique([sanitized_acc_number, company_id], map: "res_partner_bank_unique_number")
  @@index([partner_id], map: "res_partner_bank_partner_id_index")
}

model res_partner_category {
  id                                                   Int                                    @id @default(autoincrement())
  parent_path                                          String?                                @db.VarChar
  name                                                 String                                 @db.VarChar
  color                                                Int?
  parent_id                                            Int?
  active                                               Boolean?
  create_uid                                           Int?
  create_date                                          DateTime?                              @db.Timestamp(6)
  write_uid                                            Int?
  write_date                                           DateTime?                              @db.Timestamp(6)
  res_users_res_partner_category_create_uidTores_users res_users?                             @relation("res_partner_category_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_partner_category                                 res_partner_category?                  @relation("res_partner_categoryTores_partner_category", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_res_partner_category                           res_partner_category[]                 @relation("res_partner_categoryTores_partner_category")
  res_users_res_partner_category_write_uidTores_users  res_users?                             @relation("res_partner_category_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  res_partner_res_partner_category_rel                 res_partner_res_partner_category_rel[]

  @@index([parent_id], map: "res_partner_category_parent_id_index")
  @@index([parent_path], map: "res_partner_category_parent_path_index")
}

model res_partner_industry {
  id                                                   Int           @id @default(autoincrement())
  name                                                 String?       @db.VarChar
  full_name                                            String?       @db.VarChar
  active                                               Boolean?
  create_uid                                           Int?
  create_date                                          DateTime?     @db.Timestamp(6)
  write_uid                                            Int?
  write_date                                           DateTime?     @db.Timestamp(6)
  res_partner                                          res_partner[]
  res_users_res_partner_industry_create_uidTores_users res_users?    @relation("res_partner_industry_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_partner_industry_write_uidTores_users  res_users?    @relation("res_partner_industry_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model res_partner_res_partner_category_rel {
  category_id          Int
  partner_id           Int
  res_partner_category res_partner_category @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_partner          res_partner          @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([category_id, partner_id])
  @@index([category_id])
  @@index([partner_id])
}

model res_partner_title {
  id                                                Int           @id @default(autoincrement())
  name                                              String        @db.VarChar
  shortcut                                          String?       @db.VarChar
  create_uid                                        Int?
  create_date                                       DateTime?     @db.Timestamp(6)
  write_uid                                         Int?
  write_date                                        DateTime?     @db.Timestamp(6)
  res_partner                                       res_partner[]
  res_users_res_partner_title_create_uidTores_users res_users?    @relation("res_partner_title_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_partner_title_write_uidTores_users  res_users?    @relation("res_partner_title_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model res_users {
  id                                                                                                                Int                                             @id @default(autoincrement())
  active                                                                                                            Boolean?                                        @default(true)
  login                                                                                                             String                                          @db.VarChar
  password                                                                                                          String?                                         @db.VarChar
  company_id                                                                                                        Int
  partner_id                                                                                                        Int
  create_date                                                                                                       DateTime?                                       @db.Timestamp(6)
  signature                                                                                                         String?
  action_id                                                                                                         Int?
  share                                                                                                             Boolean?
  create_uid                                                                                                        Int?
  write_uid                                                                                                         Int?
  write_date                                                                                                        DateTime?                                       @db.Timestamp(6)
  alias_id                                                                                                          Int?
  notification_type                                                                                                 String                                          @db.VarChar
  odoobot_state                                                                                                     String                                          @db.VarChar
  website_id                                                                                                        Int?
  base_import_import_base_import_import_create_uidTores_users                                                       base_import_import[]                            @relation("base_import_import_create_uidTores_users")
  base_import_import_base_import_import_write_uidTores_users                                                        base_import_import[]                            @relation("base_import_import_write_uidTores_users")
  base_import_mapping_base_import_mapping_create_uidTores_users                                                     base_import_mapping[]                           @relation("base_import_mapping_create_uidTores_users")
  base_import_mapping_base_import_mapping_write_uidTores_users                                                      base_import_mapping[]                           @relation("base_import_mapping_write_uidTores_users")
  base_import_tests_models_char_base_import_tests_models_char_create_uidTores_users                                 base_import_tests_models_char[]                 @relation("base_import_tests_models_char_create_uidTores_users")
  base_import_tests_models_char_base_import_tests_models_char_write_uidTores_users                                  base_import_tests_models_char[]                 @relation("base_import_tests_models_char_write_uidTores_users")
  base_import_tests_models_char_noreadonly_base_import_tests_models_char_noreadonly_create_uidTores_users           base_import_tests_models_char_noreadonly[]      @relation("base_import_tests_models_char_noreadonly_create_uidTores_users")
  base_import_tests_models_char_noreadonly_base_import_tests_models_char_noreadonly_write_uidTores_users            base_import_tests_models_char_noreadonly[]      @relation("base_import_tests_models_char_noreadonly_write_uidTores_users")
  base_import_tests_models_char_readonly_base_import_tests_models_char_readonly_create_uidTores_users               base_import_tests_models_char_readonly[]        @relation("base_import_tests_models_char_readonly_create_uidTores_users")
  base_import_tests_models_char_readonly_base_import_tests_models_char_readonly_write_uidTores_users                base_import_tests_models_char_readonly[]        @relation("base_import_tests_models_char_readonly_write_uidTores_users")
  base_import_tests_models_char_required_base_import_tests_models_char_required_create_uidTores_users               base_import_tests_models_char_required[]        @relation("base_import_tests_models_char_required_create_uidTores_users")
  base_import_tests_models_char_required_base_import_tests_models_char_required_write_uidTores_users                base_import_tests_models_char_required[]        @relation("base_import_tests_models_char_required_write_uidTores_users")
  base_import_tests_models_char_states_base_import_tests_models_char_states_create_uidTores_users                   base_import_tests_models_char_states[]          @relation("base_import_tests_models_char_states_create_uidTores_users")
  base_import_tests_models_char_states_base_import_tests_models_char_states_write_uidTores_users                    base_import_tests_models_char_states[]          @relation("base_import_tests_models_char_states_write_uidTores_users")
  base_import_tests_models_char_stillreadonly_base_import_tests_models_char_stillreadonly_create_uidTores_users     base_import_tests_models_char_stillreadonly[]   @relation("base_import_tests_models_char_stillreadonly_create_uidTores_users")
  base_import_tests_models_char_stillreadonly_base_import_tests_models_char_stillreadonly_write_uidTores_users      base_import_tests_models_char_stillreadonly[]   @relation("base_import_tests_models_char_stillreadonly_write_uidTores_users")
  base_import_tests_models_complex_base_import_tests_models_complex_create_uidTores_users                           base_import_tests_models_complex[]              @relation("base_import_tests_models_complex_create_uidTores_users")
  base_import_tests_models_complex_base_import_tests_models_complex_write_uidTores_users                            base_import_tests_models_complex[]              @relation("base_import_tests_models_complex_write_uidTores_users")
  base_import_tests_models_float_base_import_tests_models_float_create_uidTores_users                               base_import_tests_models_float[]                @relation("base_import_tests_models_float_create_uidTores_users")
  base_import_tests_models_float_base_import_tests_models_float_write_uidTores_users                                base_import_tests_models_float[]                @relation("base_import_tests_models_float_write_uidTores_users")
  base_import_tests_models_m2o_base_import_tests_models_m2o_create_uidTores_users                                   base_import_tests_models_m2o[]                  @relation("base_import_tests_models_m2o_create_uidTores_users")
  base_import_tests_models_m2o_base_import_tests_models_m2o_write_uidTores_users                                    base_import_tests_models_m2o[]                  @relation("base_import_tests_models_m2o_write_uidTores_users")
  base_import_tests_models_m2o_related_base_import_tests_models_m2o_related_create_uidTores_users                   base_import_tests_models_m2o_related[]          @relation("base_import_tests_models_m2o_related_create_uidTores_users")
  base_import_tests_models_m2o_related_base_import_tests_models_m2o_related_write_uidTores_users                    base_import_tests_models_m2o_related[]          @relation("base_import_tests_models_m2o_related_write_uidTores_users")
  base_import_tests_models_m2o_required_base_import_tests_models_m2o_required_create_uidTores_users                 base_import_tests_models_m2o_required[]         @relation("base_import_tests_models_m2o_required_create_uidTores_users")
  base_import_tests_models_m2o_required_base_import_tests_models_m2o_required_write_uidTores_users                  base_import_tests_models_m2o_required[]         @relation("base_import_tests_models_m2o_required_write_uidTores_users")
  base_import_tests_models_m2o_required_related_base_import_tests_models_m2o_required_related_create_uidTores_users base_import_tests_models_m2o_required_related[] @relation("base_import_tests_models_m2o_required_related_create_uidTores_users")
  base_import_tests_models_m2o_required_related_base_import_tests_models_m2o_required_related_write_uidTores_users  base_import_tests_models_m2o_required_related[] @relation("base_import_tests_models_m2o_required_related_write_uidTores_users")
  base_import_tests_models_o2m_base_import_tests_models_o2m_create_uidTores_users                                   base_import_tests_models_o2m[]                  @relation("base_import_tests_models_o2m_create_uidTores_users")
  base_import_tests_models_o2m_base_import_tests_models_o2m_write_uidTores_users                                    base_import_tests_models_o2m[]                  @relation("base_import_tests_models_o2m_write_uidTores_users")
  base_import_tests_models_o2m_child_base_import_tests_models_o2m_child_create_uidTores_users                       base_import_tests_models_o2m_child[]            @relation("base_import_tests_models_o2m_child_create_uidTores_users")
  base_import_tests_models_o2m_child_base_import_tests_models_o2m_child_write_uidTores_users                        base_import_tests_models_o2m_child[]            @relation("base_import_tests_models_o2m_child_write_uidTores_users")
  base_import_tests_models_preview_base_import_tests_models_preview_create_uidTores_users                           base_import_tests_models_preview[]              @relation("base_import_tests_models_preview_create_uidTores_users")
  base_import_tests_models_preview_base_import_tests_models_preview_write_uidTores_users                            base_import_tests_models_preview[]              @relation("base_import_tests_models_preview_write_uidTores_users")
  base_language_export_base_language_export_create_uidTores_users                                                   base_language_export[]                          @relation("base_language_export_create_uidTores_users")
  base_language_export_base_language_export_write_uidTores_users                                                    base_language_export[]                          @relation("base_language_export_write_uidTores_users")
  base_language_import_base_language_import_create_uidTores_users                                                   base_language_import[]                          @relation("base_language_import_create_uidTores_users")
  base_language_import_base_language_import_write_uidTores_users                                                    base_language_import[]                          @relation("base_language_import_write_uidTores_users")
  base_language_install_base_language_install_create_uidTores_users                                                 base_language_install[]                         @relation("base_language_install_create_uidTores_users")
  base_language_install_base_language_install_write_uidTores_users                                                  base_language_install[]                         @relation("base_language_install_write_uidTores_users")
  base_module_uninstall_base_module_uninstall_create_uidTores_users                                                 base_module_uninstall[]                         @relation("base_module_uninstall_create_uidTores_users")
  base_module_uninstall_base_module_uninstall_write_uidTores_users                                                  base_module_uninstall[]                         @relation("base_module_uninstall_write_uidTores_users")
  base_module_update_base_module_update_create_uidTores_users                                                       base_module_update[]                            @relation("base_module_update_create_uidTores_users")
  base_module_update_base_module_update_write_uidTores_users                                                        base_module_update[]                            @relation("base_module_update_write_uidTores_users")
  base_module_upgrade_base_module_upgrade_create_uidTores_users                                                     base_module_upgrade[]                           @relation("base_module_upgrade_create_uidTores_users")
  base_module_upgrade_base_module_upgrade_write_uidTores_users                                                      base_module_upgrade[]                           @relation("base_module_upgrade_write_uidTores_users")
  base_partner_merge_automatic_wizard_base_partner_merge_automatic_wizard_create_uidTores_users                     base_partner_merge_automatic_wizard[]           @relation("base_partner_merge_automatic_wizard_create_uidTores_users")
  base_partner_merge_automatic_wizard_base_partner_merge_automatic_wizard_write_uidTores_users                      base_partner_merge_automatic_wizard[]           @relation("base_partner_merge_automatic_wizard_write_uidTores_users")
  base_partner_merge_line_base_partner_merge_line_create_uidTores_users                                             base_partner_merge_line[]                       @relation("base_partner_merge_line_create_uidTores_users")
  base_partner_merge_line_base_partner_merge_line_write_uidTores_users                                              base_partner_merge_line[]                       @relation("base_partner_merge_line_write_uidTores_users")
  base_update_translations_base_update_translations_create_uidTores_users                                           base_update_translations[]                      @relation("base_update_translations_create_uidTores_users")
  base_update_translations_base_update_translations_write_uidTores_users                                            base_update_translations[]                      @relation("base_update_translations_write_uidTores_users")
  bus_bus_bus_bus_create_uidTores_users                                                                             bus_bus[]                                       @relation("bus_bus_create_uidTores_users")
  bus_bus_bus_bus_write_uidTores_users                                                                              bus_bus[]                                       @relation("bus_bus_write_uidTores_users")
  bus_presence                                                                                                      bus_presence?
  change_password_user_change_password_user_create_uidTores_users                                                   change_password_user[]                          @relation("change_password_user_create_uidTores_users")
  change_password_user_change_password_user_user_idTores_users                                                      change_password_user[]                          @relation("change_password_user_user_idTores_users")
  change_password_user_change_password_user_write_uidTores_users                                                    change_password_user[]                          @relation("change_password_user_write_uidTores_users")
  change_password_wizard_change_password_wizard_create_uidTores_users                                               change_password_wizard[]                        @relation("change_password_wizard_create_uidTores_users")
  change_password_wizard_change_password_wizard_write_uidTores_users                                                change_password_wizard[]                        @relation("change_password_wizard_write_uidTores_users")
  email_template_preview_email_template_preview_create_uidTores_users                                               email_template_preview[]                        @relation("email_template_preview_create_uidTores_users")
  email_template_preview_email_template_preview_write_uidTores_users                                                email_template_preview[]                        @relation("email_template_preview_write_uidTores_users")
  fetchmail_server_fetchmail_server_create_uidTores_users                                                           fetchmail_server[]                              @relation("fetchmail_server_create_uidTores_users")
  fetchmail_server_fetchmail_server_write_uidTores_users                                                            fetchmail_server[]                              @relation("fetchmail_server_write_uidTores_users")
  iap_account_iap_account_create_uidTores_users                                                                     iap_account[]                                   @relation("iap_account_create_uidTores_users")
  iap_account_iap_account_write_uidTores_users                                                                      iap_account[]                                   @relation("iap_account_write_uidTores_users")
  ir_act_client_ir_act_client_create_uidTores_users                                                                 ir_act_client[]                                 @relation("ir_act_client_create_uidTores_users")
  ir_act_client_ir_act_client_write_uidTores_users                                                                  ir_act_client[]                                 @relation("ir_act_client_write_uidTores_users")
  ir_act_report_xml_ir_act_report_xml_create_uidTores_users                                                         ir_act_report_xml[]                             @relation("ir_act_report_xml_create_uidTores_users")
  ir_act_report_xml_ir_act_report_xml_write_uidTores_users                                                          ir_act_report_xml[]                             @relation("ir_act_report_xml_write_uidTores_users")
  ir_act_server_ir_act_server_activity_user_idTores_users                                                           ir_act_server[]                                 @relation("ir_act_server_activity_user_idTores_users")
  ir_act_server_ir_act_server_create_uidTores_users                                                                 ir_act_server[]                                 @relation("ir_act_server_create_uidTores_users")
  ir_act_server_ir_act_server_write_uidTores_users                                                                  ir_act_server[]                                 @relation("ir_act_server_write_uidTores_users")
  ir_act_url_ir_act_url_create_uidTores_users                                                                       ir_act_url[]                                    @relation("ir_act_url_create_uidTores_users")
  ir_act_url_ir_act_url_write_uidTores_users                                                                        ir_act_url[]                                    @relation("ir_act_url_write_uidTores_users")
  ir_act_window_ir_act_window_create_uidTores_users                                                                 ir_act_window[]                                 @relation("ir_act_window_create_uidTores_users")
  ir_act_window_ir_act_window_write_uidTores_users                                                                  ir_act_window[]                                 @relation("ir_act_window_write_uidTores_users")
  ir_act_window_view_ir_act_window_view_create_uidTores_users                                                       ir_act_window_view[]                            @relation("ir_act_window_view_create_uidTores_users")
  ir_act_window_view_ir_act_window_view_write_uidTores_users                                                        ir_act_window_view[]                            @relation("ir_act_window_view_write_uidTores_users")
  ir_actions_ir_actions_create_uidTores_users                                                                       ir_actions[]                                    @relation("ir_actions_create_uidTores_users")
  ir_actions_ir_actions_write_uidTores_users                                                                        ir_actions[]                                    @relation("ir_actions_write_uidTores_users")
  ir_actions_todo_ir_actions_todo_create_uidTores_users                                                             ir_actions_todo[]                               @relation("ir_actions_todo_create_uidTores_users")
  ir_actions_todo_ir_actions_todo_write_uidTores_users                                                              ir_actions_todo[]                               @relation("ir_actions_todo_write_uidTores_users")
  ir_attachment_ir_attachment_create_uidTores_users                                                                 ir_attachment[]                                 @relation("ir_attachment_create_uidTores_users")
  ir_attachment_ir_attachment_write_uidTores_users                                                                  ir_attachment[]                                 @relation("ir_attachment_write_uidTores_users")
  ir_config_parameter_ir_config_parameter_create_uidTores_users                                                     ir_config_parameter[]                           @relation("ir_config_parameter_create_uidTores_users")
  ir_config_parameter_ir_config_parameter_write_uidTores_users                                                      ir_config_parameter[]                           @relation("ir_config_parameter_write_uidTores_users")
  ir_cron_ir_cron_create_uidTores_users                                                                             ir_cron[]                                       @relation("ir_cron_create_uidTores_users")
  ir_cron_ir_cron_user_idTores_users                                                                                ir_cron[]                                       @relation("ir_cron_user_idTores_users")
  ir_cron_ir_cron_write_uidTores_users                                                                              ir_cron[]                                       @relation("ir_cron_write_uidTores_users")
  ir_default_ir_default_create_uidTores_users                                                                       ir_default[]                                    @relation("ir_default_create_uidTores_users")
  ir_default_ir_default_user_idTores_users                                                                          ir_default[]                                    @relation("ir_default_user_idTores_users")
  ir_default_ir_default_write_uidTores_users                                                                        ir_default[]                                    @relation("ir_default_write_uidTores_users")
  ir_demo_ir_demo_create_uidTores_users                                                                             ir_demo[]                                       @relation("ir_demo_create_uidTores_users")
  ir_demo_ir_demo_write_uidTores_users                                                                              ir_demo[]                                       @relation("ir_demo_write_uidTores_users")
  ir_demo_failure_ir_demo_failure_create_uidTores_users                                                             ir_demo_failure[]                               @relation("ir_demo_failure_create_uidTores_users")
  ir_demo_failure_ir_demo_failure_write_uidTores_users                                                              ir_demo_failure[]                               @relation("ir_demo_failure_write_uidTores_users")
  ir_demo_failure_wizard_ir_demo_failure_wizard_create_uidTores_users                                               ir_demo_failure_wizard[]                        @relation("ir_demo_failure_wizard_create_uidTores_users")
  ir_demo_failure_wizard_ir_demo_failure_wizard_write_uidTores_users                                                ir_demo_failure_wizard[]                        @relation("ir_demo_failure_wizard_write_uidTores_users")
  ir_exports_ir_exports_create_uidTores_users                                                                       ir_exports[]                                    @relation("ir_exports_create_uidTores_users")
  ir_exports_ir_exports_write_uidTores_users                                                                        ir_exports[]                                    @relation("ir_exports_write_uidTores_users")
  ir_exports_line_ir_exports_line_create_uidTores_users                                                             ir_exports_line[]                               @relation("ir_exports_line_create_uidTores_users")
  ir_exports_line_ir_exports_line_write_uidTores_users                                                              ir_exports_line[]                               @relation("ir_exports_line_write_uidTores_users")
  ir_filters_ir_filters_create_uidTores_users                                                                       ir_filters[]                                    @relation("ir_filters_create_uidTores_users")
  ir_filters_ir_filters_user_idTores_users                                                                          ir_filters[]                                    @relation("ir_filters_user_idTores_users")
  ir_filters_ir_filters_write_uidTores_users                                                                        ir_filters[]                                    @relation("ir_filters_write_uidTores_users")
  ir_mail_server_ir_mail_server_create_uidTores_users                                                               ir_mail_server[]                                @relation("ir_mail_server_create_uidTores_users")
  ir_mail_server_ir_mail_server_write_uidTores_users                                                                ir_mail_server[]                                @relation("ir_mail_server_write_uidTores_users")
  ir_model_ir_model_create_uidTores_users                                                                           ir_model[]                                      @relation("ir_model_create_uidTores_users")
  ir_model_ir_model_write_uidTores_users                                                                            ir_model[]                                      @relation("ir_model_write_uidTores_users")
  ir_model_access_ir_model_access_create_uidTores_users                                                             ir_model_access[]                               @relation("ir_model_access_create_uidTores_users")
  ir_model_access_ir_model_access_write_uidTores_users                                                              ir_model_access[]                               @relation("ir_model_access_write_uidTores_users")
  ir_model_constraint_ir_model_constraint_create_uidTores_users                                                     ir_model_constraint[]                           @relation("ir_model_constraint_create_uidTores_users")
  ir_model_constraint_ir_model_constraint_write_uidTores_users                                                      ir_model_constraint[]                           @relation("ir_model_constraint_write_uidTores_users")
  ir_model_data_ir_model_data_create_uidTores_users                                                                 ir_model_data[]                                 @relation("ir_model_data_create_uidTores_users")
  ir_model_data_ir_model_data_write_uidTores_users                                                                  ir_model_data[]                                 @relation("ir_model_data_write_uidTores_users")
  ir_model_fields_ir_model_fields_create_uidTores_users                                                             ir_model_fields[]                               @relation("ir_model_fields_create_uidTores_users")
  ir_model_fields_ir_model_fields_write_uidTores_users                                                              ir_model_fields[]                               @relation("ir_model_fields_write_uidTores_users")
  ir_model_relation_ir_model_relation_create_uidTores_users                                                         ir_model_relation[]                             @relation("ir_model_relation_create_uidTores_users")
  ir_model_relation_ir_model_relation_write_uidTores_users                                                          ir_model_relation[]                             @relation("ir_model_relation_write_uidTores_users")
  ir_module_category_ir_module_category_create_uidTores_users                                                       ir_module_category[]                            @relation("ir_module_category_create_uidTores_users")
  ir_module_category_ir_module_category_write_uidTores_users                                                        ir_module_category[]                            @relation("ir_module_category_write_uidTores_users")
  ir_module_module_ir_module_module_create_uidTores_users                                                           ir_module_module[]                              @relation("ir_module_module_create_uidTores_users")
  ir_module_module_ir_module_module_write_uidTores_users                                                            ir_module_module[]                              @relation("ir_module_module_write_uidTores_users")
  ir_module_module_dependency_ir_module_module_dependency_create_uidTores_users                                     ir_module_module_dependency[]                   @relation("ir_module_module_dependency_create_uidTores_users")
  ir_module_module_dependency_ir_module_module_dependency_write_uidTores_users                                      ir_module_module_dependency[]                   @relation("ir_module_module_dependency_write_uidTores_users")
  ir_module_module_exclusion_ir_module_module_exclusion_create_uidTores_users                                       ir_module_module_exclusion[]                    @relation("ir_module_module_exclusion_create_uidTores_users")
  ir_module_module_exclusion_ir_module_module_exclusion_write_uidTores_users                                        ir_module_module_exclusion[]                    @relation("ir_module_module_exclusion_write_uidTores_users")
  ir_property_ir_property_create_uidTores_users                                                                     ir_property[]                                   @relation("ir_property_create_uidTores_users")
  ir_property_ir_property_write_uidTores_users                                                                      ir_property[]                                   @relation("ir_property_write_uidTores_users")
  ir_rule_ir_rule_create_uidTores_users                                                                             ir_rule[]                                       @relation("ir_rule_create_uidTores_users")
  ir_rule_ir_rule_write_uidTores_users                                                                              ir_rule[]                                       @relation("ir_rule_write_uidTores_users")
  ir_sequence_ir_sequence_create_uidTores_users                                                                     ir_sequence[]                                   @relation("ir_sequence_create_uidTores_users")
  ir_sequence_ir_sequence_write_uidTores_users                                                                      ir_sequence[]                                   @relation("ir_sequence_write_uidTores_users")
  ir_sequence_date_range_ir_sequence_date_range_create_uidTores_users                                               ir_sequence_date_range[]                        @relation("ir_sequence_date_range_create_uidTores_users")
  ir_sequence_date_range_ir_sequence_date_range_write_uidTores_users                                                ir_sequence_date_range[]                        @relation("ir_sequence_date_range_write_uidTores_users")
  ir_server_object_lines_ir_server_object_lines_create_uidTores_users                                               ir_server_object_lines[]                        @relation("ir_server_object_lines_create_uidTores_users")
  ir_server_object_lines_ir_server_object_lines_write_uidTores_users                                                ir_server_object_lines[]                        @relation("ir_server_object_lines_write_uidTores_users")
  ir_ui_menu_ir_ui_menu_create_uidTores_users                                                                       ir_ui_menu[]                                    @relation("ir_ui_menu_create_uidTores_users")
  ir_ui_menu_ir_ui_menu_write_uidTores_users                                                                        ir_ui_menu[]                                    @relation("ir_ui_menu_write_uidTores_users")
  ir_ui_view_ir_ui_view_create_uidTores_users                                                                       ir_ui_view[]                                    @relation("ir_ui_view_create_uidTores_users")
  ir_ui_view_ir_ui_view_write_uidTores_users                                                                        ir_ui_view[]                                    @relation("ir_ui_view_write_uidTores_users")
  ir_ui_view_custom_ir_ui_view_custom_create_uidTores_users                                                         ir_ui_view_custom[]                             @relation("ir_ui_view_custom_create_uidTores_users")
  ir_ui_view_custom_ir_ui_view_custom_user_idTores_users                                                            ir_ui_view_custom[]                             @relation("ir_ui_view_custom_user_idTores_users")
  ir_ui_view_custom_ir_ui_view_custom_write_uidTores_users                                                          ir_ui_view_custom[]                             @relation("ir_ui_view_custom_write_uidTores_users")
  mail_activity_mail_activity_create_uidTores_users                                                                 mail_activity[]                                 @relation("mail_activity_create_uidTores_users")
  mail_activity_mail_activity_create_user_idTores_users                                                             mail_activity[]                                 @relation("mail_activity_create_user_idTores_users")
  mail_activity_mail_activity_user_idTores_users                                                                    mail_activity[]                                 @relation("mail_activity_user_idTores_users")
  mail_activity_mail_activity_write_uidTores_users                                                                  mail_activity[]                                 @relation("mail_activity_write_uidTores_users")
  mail_activity_type_mail_activity_type_create_uidTores_users                                                       mail_activity_type[]                            @relation("mail_activity_type_create_uidTores_users")
  mail_activity_type_mail_activity_type_write_uidTores_users                                                        mail_activity_type[]                            @relation("mail_activity_type_write_uidTores_users")
  mail_alias_mail_alias_alias_user_idTores_users                                                                    mail_alias[]                                    @relation("mail_alias_alias_user_idTores_users")
  mail_alias_mail_alias_create_uidTores_users                                                                       mail_alias[]                                    @relation("mail_alias_create_uidTores_users")
  mail_alias_mail_alias_write_uidTores_users                                                                        mail_alias[]                                    @relation("mail_alias_write_uidTores_users")
  mail_blacklist_mail_blacklist_create_uidTores_users                                                               mail_blacklist[]                                @relation("mail_blacklist_create_uidTores_users")
  mail_blacklist_mail_blacklist_write_uidTores_users                                                                mail_blacklist[]                                @relation("mail_blacklist_write_uidTores_users")
  mail_channel_mail_channel_create_uidTores_users                                                                   mail_channel[]                                  @relation("mail_channel_create_uidTores_users")
  mail_channel_mail_channel_write_uidTores_users                                                                    mail_channel[]                                  @relation("mail_channel_write_uidTores_users")
  mail_channel_moderator_rel                                                                                        mail_channel_moderator_rel[]
  mail_channel_partner_mail_channel_partner_create_uidTores_users                                                   mail_channel_partner[]                          @relation("mail_channel_partner_create_uidTores_users")
  mail_channel_partner_mail_channel_partner_write_uidTores_users                                                    mail_channel_partner[]                          @relation("mail_channel_partner_write_uidTores_users")
  mail_compose_message_mail_compose_message_create_uidTores_users                                                   mail_compose_message[]                          @relation("mail_compose_message_create_uidTores_users")
  mail_compose_message_mail_compose_message_moderator_idTores_users                                                 mail_compose_message[]                          @relation("mail_compose_message_moderator_idTores_users")
  mail_compose_message_mail_compose_message_write_uidTores_users                                                    mail_compose_message[]                          @relation("mail_compose_message_write_uidTores_users")
  mail_mail_mail_mail_create_uidTores_users                                                                         mail_mail[]                                     @relation("mail_mail_create_uidTores_users")
  mail_mail_mail_mail_write_uidTores_users                                                                          mail_mail[]                                     @relation("mail_mail_write_uidTores_users")
  mail_message_mail_message_create_uidTores_users                                                                   mail_message[]                                  @relation("mail_message_create_uidTores_users")
  mail_message_mail_message_moderator_idTores_users                                                                 mail_message[]                                  @relation("mail_message_moderator_idTores_users")
  mail_message_mail_message_write_uidTores_users                                                                    mail_message[]                                  @relation("mail_message_write_uidTores_users")
  mail_message_subtype_mail_message_subtype_create_uidTores_users                                                   mail_message_subtype[]                          @relation("mail_message_subtype_create_uidTores_users")
  mail_message_subtype_mail_message_subtype_write_uidTores_users                                                    mail_message_subtype[]                          @relation("mail_message_subtype_write_uidTores_users")
  mail_moderation_mail_moderation_create_uidTores_users                                                             mail_moderation[]                               @relation("mail_moderation_create_uidTores_users")
  mail_moderation_mail_moderation_write_uidTores_users                                                              mail_moderation[]                               @relation("mail_moderation_write_uidTores_users")
  mail_resend_cancel_mail_resend_cancel_create_uidTores_users                                                       mail_resend_cancel[]                            @relation("mail_resend_cancel_create_uidTores_users")
  mail_resend_cancel_mail_resend_cancel_write_uidTores_users                                                        mail_resend_cancel[]                            @relation("mail_resend_cancel_write_uidTores_users")
  mail_resend_message_mail_resend_message_create_uidTores_users                                                     mail_resend_message[]                           @relation("mail_resend_message_create_uidTores_users")
  mail_resend_message_mail_resend_message_write_uidTores_users                                                      mail_resend_message[]                           @relation("mail_resend_message_write_uidTores_users")
  mail_resend_partner_mail_resend_partner_create_uidTores_users                                                     mail_resend_partner[]                           @relation("mail_resend_partner_create_uidTores_users")
  mail_resend_partner_mail_resend_partner_write_uidTores_users                                                      mail_resend_partner[]                           @relation("mail_resend_partner_write_uidTores_users")
  mail_shortcode_mail_shortcode_create_uidTores_users                                                               mail_shortcode[]                                @relation("mail_shortcode_create_uidTores_users")
  mail_shortcode_mail_shortcode_write_uidTores_users                                                                mail_shortcode[]                                @relation("mail_shortcode_write_uidTores_users")
  mail_template_mail_template_create_uidTores_users                                                                 mail_template[]                                 @relation("mail_template_create_uidTores_users")
  mail_template_mail_template_write_uidTores_users                                                                  mail_template[]                                 @relation("mail_template_write_uidTores_users")
  mail_tracking_value_mail_tracking_value_create_uidTores_users                                                     mail_tracking_value[]                           @relation("mail_tracking_value_create_uidTores_users")
  mail_tracking_value_mail_tracking_value_write_uidTores_users                                                      mail_tracking_value[]                           @relation("mail_tracking_value_write_uidTores_users")
  mail_wizard_invite_mail_wizard_invite_create_uidTores_users                                                       mail_wizard_invite[]                            @relation("mail_wizard_invite_create_uidTores_users")
  mail_wizard_invite_mail_wizard_invite_write_uidTores_users                                                        mail_wizard_invite[]                            @relation("mail_wizard_invite_write_uidTores_users")
  portal_share_portal_share_create_uidTores_users                                                                   portal_share[]                                  @relation("portal_share_create_uidTores_users")
  portal_share_portal_share_write_uidTores_users                                                                    portal_share[]                                  @relation("portal_share_write_uidTores_users")
  portal_wizard_portal_wizard_create_uidTores_users                                                                 portal_wizard[]                                 @relation("portal_wizard_create_uidTores_users")
  portal_wizard_portal_wizard_write_uidTores_users                                                                  portal_wizard[]                                 @relation("portal_wizard_write_uidTores_users")
  portal_wizard_user_portal_wizard_user_create_uidTores_users                                                       portal_wizard_user[]                            @relation("portal_wizard_user_create_uidTores_users")
  portal_wizard_user_portal_wizard_user_user_idTores_users                                                          portal_wizard_user[]                            @relation("portal_wizard_user_user_idTores_users")
  portal_wizard_user_portal_wizard_user_write_uidTores_users                                                        portal_wizard_user[]                            @relation("portal_wizard_user_write_uidTores_users")
  report_layout_report_layout_create_uidTores_users                                                                 report_layout[]                                 @relation("report_layout_create_uidTores_users")
  report_layout_report_layout_write_uidTores_users                                                                  report_layout[]                                 @relation("report_layout_write_uidTores_users")
  report_paperformat_report_paperformat_create_uidTores_users                                                       report_paperformat[]                            @relation("report_paperformat_create_uidTores_users")
  report_paperformat_report_paperformat_write_uidTores_users                                                        report_paperformat[]                            @relation("report_paperformat_write_uidTores_users")
  res_bank_res_bank_create_uidTores_users                                                                           res_bank[]                                      @relation("res_bank_create_uidTores_users")
  res_bank_res_bank_write_uidTores_users                                                                            res_bank[]                                      @relation("res_bank_write_uidTores_users")
  res_company_res_company_create_uidTores_users                                                                     res_company[]                                   @relation("res_company_create_uidTores_users")
  res_company_res_company_write_uidTores_users                                                                      res_company[]                                   @relation("res_company_write_uidTores_users")
  res_company_users_rel                                                                                             res_company_users_rel[]
  res_config_res_config_create_uidTores_users                                                                       res_config[]                                    @relation("res_config_create_uidTores_users")
  res_config_res_config_write_uidTores_users                                                                        res_config[]                                    @relation("res_config_write_uidTores_users")
  res_config_installer_res_config_installer_create_uidTores_users                                                   res_config_installer[]                          @relation("res_config_installer_create_uidTores_users")
  res_config_installer_res_config_installer_write_uidTores_users                                                    res_config_installer[]                          @relation("res_config_installer_write_uidTores_users")
  res_config_settings_res_config_settings_auth_signup_template_user_idTores_users                                   res_config_settings[]                           @relation("res_config_settings_auth_signup_template_user_idTores_users")
  res_config_settings_res_config_settings_create_uidTores_users                                                     res_config_settings[]                           @relation("res_config_settings_create_uidTores_users")
  res_config_settings_res_config_settings_write_uidTores_users                                                      res_config_settings[]                           @relation("res_config_settings_write_uidTores_users")
  res_country_res_country_create_uidTores_users                                                                     res_country[]                                   @relation("res_country_create_uidTores_users")
  res_country_res_country_write_uidTores_users                                                                      res_country[]                                   @relation("res_country_write_uidTores_users")
  res_country_group_res_country_group_create_uidTores_users                                                         res_country_group[]                             @relation("res_country_group_create_uidTores_users")
  res_country_group_res_country_group_write_uidTores_users                                                          res_country_group[]                             @relation("res_country_group_write_uidTores_users")
  res_country_state_res_country_state_create_uidTores_users                                                         res_country_state[]                             @relation("res_country_state_create_uidTores_users")
  res_country_state_res_country_state_write_uidTores_users                                                          res_country_state[]                             @relation("res_country_state_write_uidTores_users")
  res_currency_res_currency_create_uidTores_users                                                                   res_currency[]                                  @relation("res_currency_create_uidTores_users")
  res_currency_res_currency_write_uidTores_users                                                                    res_currency[]                                  @relation("res_currency_write_uidTores_users")
  res_currency_rate_res_currency_rate_create_uidTores_users                                                         res_currency_rate[]                             @relation("res_currency_rate_create_uidTores_users")
  res_currency_rate_res_currency_rate_write_uidTores_users                                                          res_currency_rate[]                             @relation("res_currency_rate_write_uidTores_users")
  res_groups_res_groups_create_uidTores_users                                                                       res_groups[]                                    @relation("res_groups_create_uidTores_users")
  res_groups_res_groups_write_uidTores_users                                                                        res_groups[]                                    @relation("res_groups_write_uidTores_users")
  res_groups_users_rel                                                                                              res_groups_users_rel[]
  res_lang_res_lang_create_uidTores_users                                                                           res_lang[]                                      @relation("res_lang_create_uidTores_users")
  res_lang_res_lang_write_uidTores_users                                                                            res_lang[]                                      @relation("res_lang_write_uidTores_users")
  res_partner_res_partner_create_uidTores_users                                                                     res_partner[]                                   @relation("res_partner_create_uidTores_users")
  res_partner_res_partner_user_idTores_users                                                                        res_partner[]                                   @relation("res_partner_user_idTores_users")
  res_partner_res_partner_write_uidTores_users                                                                      res_partner[]                                   @relation("res_partner_write_uidTores_users")
  res_partner_autocomplete_sync_res_partner_autocomplete_sync_create_uidTores_users                                 res_partner_autocomplete_sync[]                 @relation("res_partner_autocomplete_sync_create_uidTores_users")
  res_partner_autocomplete_sync_res_partner_autocomplete_sync_write_uidTores_users                                  res_partner_autocomplete_sync[]                 @relation("res_partner_autocomplete_sync_write_uidTores_users")
  res_partner_bank_res_partner_bank_create_uidTores_users                                                           res_partner_bank[]                              @relation("res_partner_bank_create_uidTores_users")
  res_partner_bank_res_partner_bank_write_uidTores_users                                                            res_partner_bank[]                              @relation("res_partner_bank_write_uidTores_users")
  res_partner_category_res_partner_category_create_uidTores_users                                                   res_partner_category[]                          @relation("res_partner_category_create_uidTores_users")
  res_partner_category_res_partner_category_write_uidTores_users                                                    res_partner_category[]                          @relation("res_partner_category_write_uidTores_users")
  res_partner_industry_res_partner_industry_create_uidTores_users                                                   res_partner_industry[]                          @relation("res_partner_industry_create_uidTores_users")
  res_partner_industry_res_partner_industry_write_uidTores_users                                                    res_partner_industry[]                          @relation("res_partner_industry_write_uidTores_users")
  res_partner_title_res_partner_title_create_uidTores_users                                                         res_partner_title[]                             @relation("res_partner_title_create_uidTores_users")
  res_partner_title_res_partner_title_write_uidTores_users                                                          res_partner_title[]                             @relation("res_partner_title_write_uidTores_users")
  mail_alias_res_users_alias_idTomail_alias                                                                         mail_alias?                                     @relation("res_users_alias_idTomail_alias", fields: [alias_id], references: [id], onUpdate: NoAction)
  res_company_res_users_company_idTores_company                                                                     res_company                                     @relation("res_users_company_idTores_company", fields: [company_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_res_users_create_uidTores_users                                                                         res_users?                                      @relation("res_users_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  other_res_users_res_users_create_uidTores_users                                                                   res_users[]                                     @relation("res_users_create_uidTores_users")
  res_partner_res_users_partner_idTores_partner                                                                     res_partner                                     @relation("res_users_partner_idTores_partner", fields: [partner_id], references: [id], onUpdate: NoAction)
  website_res_users_website_idTowebsite                                                                             website?                                        @relation("res_users_website_idTowebsite", fields: [website_id], references: [id], onUpdate: NoAction)
  res_users_res_users_write_uidTores_users                                                                          res_users?                                      @relation("res_users_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  other_res_users_res_users_write_uidTores_users                                                                    res_users[]                                     @relation("res_users_write_uidTores_users")
  res_users_log_res_users_log_create_uidTores_users                                                                 res_users_log[]                                 @relation("res_users_log_create_uidTores_users")
  res_users_log_res_users_log_write_uidTores_users                                                                  res_users_log[]                                 @relation("res_users_log_write_uidTores_users")
  sms_send_sms_sms_send_sms_create_uidTores_users                                                                   sms_send_sms[]                                  @relation("sms_send_sms_create_uidTores_users")
  sms_send_sms_sms_send_sms_write_uidTores_users                                                                    sms_send_sms[]                                  @relation("sms_send_sms_write_uidTores_users")
  snailmail_letter_snailmail_letter_create_uidTores_users                                                           snailmail_letter[]                              @relation("snailmail_letter_create_uidTores_users")
  snailmail_letter_snailmail_letter_user_idTores_users                                                              snailmail_letter[]                              @relation("snailmail_letter_user_idTores_users")
  snailmail_letter_snailmail_letter_write_uidTores_users                                                            snailmail_letter[]                              @relation("snailmail_letter_write_uidTores_users")
  theme_ir_attachment_theme_ir_attachment_create_uidTores_users                                                     theme_ir_attachment[]                           @relation("theme_ir_attachment_create_uidTores_users")
  theme_ir_attachment_theme_ir_attachment_write_uidTores_users                                                      theme_ir_attachment[]                           @relation("theme_ir_attachment_write_uidTores_users")
  theme_ir_ui_view_theme_ir_ui_view_create_uidTores_users                                                           theme_ir_ui_view[]                              @relation("theme_ir_ui_view_create_uidTores_users")
  theme_ir_ui_view_theme_ir_ui_view_write_uidTores_users                                                            theme_ir_ui_view[]                              @relation("theme_ir_ui_view_write_uidTores_users")
  theme_website_menu_theme_website_menu_create_uidTores_users                                                       theme_website_menu[]                            @relation("theme_website_menu_create_uidTores_users")
  theme_website_menu_theme_website_menu_write_uidTores_users                                                        theme_website_menu[]                            @relation("theme_website_menu_write_uidTores_users")
  theme_website_page_theme_website_page_create_uidTores_users                                                       theme_website_page[]                            @relation("theme_website_page_create_uidTores_users")
  theme_website_page_theme_website_page_write_uidTores_users                                                        theme_website_page[]                            @relation("theme_website_page_write_uidTores_users")
  web_editor_converter_test_web_editor_converter_test_create_uidTores_users                                         web_editor_converter_test[]                     @relation("web_editor_converter_test_create_uidTores_users")
  web_editor_converter_test_web_editor_converter_test_write_uidTores_users                                          web_editor_converter_test[]                     @relation("web_editor_converter_test_write_uidTores_users")
  web_editor_converter_test_sub_web_editor_converter_test_sub_create_uidTores_users                                 web_editor_converter_test_sub[]                 @relation("web_editor_converter_test_sub_create_uidTores_users")
  web_editor_converter_test_sub_web_editor_converter_test_sub_write_uidTores_users                                  web_editor_converter_test_sub[]                 @relation("web_editor_converter_test_sub_write_uidTores_users")
  web_tour_tour                                                                                                     web_tour_tour[]
  website_website_create_uidTores_users                                                                             website[]                                       @relation("website_create_uidTores_users")
  website_website_user_idTores_users                                                                                website[]                                       @relation("website_user_idTores_users")
  website_website_write_uidTores_users                                                                              website[]                                       @relation("website_write_uidTores_users")
  website_menu_website_menu_create_uidTores_users                                                                   website_menu[]                                  @relation("website_menu_create_uidTores_users")
  website_menu_website_menu_write_uidTores_users                                                                    website_menu[]                                  @relation("website_menu_write_uidTores_users")
  website_page_website_page_create_uidTores_users                                                                   website_page[]                                  @relation("website_page_create_uidTores_users")
  website_page_website_page_write_uidTores_users                                                                    website_page[]                                  @relation("website_page_write_uidTores_users")
  website_redirect_website_redirect_create_uidTores_users                                                           website_redirect[]                              @relation("website_redirect_create_uidTores_users")
  website_redirect_website_redirect_write_uidTores_users                                                            website_redirect[]                              @relation("website_redirect_write_uidTores_users")
  wizard_ir_model_menu_create_wizard_ir_model_menu_create_create_uidTores_users                                     wizard_ir_model_menu_create[]                   @relation("wizard_ir_model_menu_create_create_uidTores_users")
  wizard_ir_model_menu_create_wizard_ir_model_menu_create_write_uidTores_users                                      wizard_ir_model_menu_create[]                   @relation("wizard_ir_model_menu_create_write_uidTores_users")

  @@unique([login, website_id], map: "res_users_login_key")
}

model res_users_log {
  id                                            Int        @id @default(autoincrement())
  create_uid                                    Int?
  create_date                                   DateTime?  @db.Timestamp(6)
  write_uid                                     Int?
  write_date                                    DateTime?  @db.Timestamp(6)
  res_users_res_users_log_create_uidTores_users res_users? @relation("res_users_log_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_res_users_log_write_uidTores_users  res_users? @relation("res_users_log_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model rule_group_rel {
  rule_group_id Int
  group_id      Int
  res_groups    res_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ir_rule       ir_rule    @relation(fields: [rule_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([rule_group_id, group_id])
  @@index([group_id])
  @@index([rule_group_id])
}

model sms_send_sms {
  id                                           Int        @id @default(autoincrement())
  recipients                                   String     @db.VarChar
  message                                      String
  create_uid                                   Int?
  create_date                                  DateTime?  @db.Timestamp(6)
  write_uid                                    Int?
  write_date                                   DateTime?  @db.Timestamp(6)
  res_users_sms_send_sms_create_uidTores_users res_users? @relation("sms_send_sms_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_sms_send_sms_write_uidTores_users  res_users? @relation("sms_send_sms_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model snailmail_letter {
  id                                               Int                @id @default(autoincrement())
  user_id                                          Int?
  model                                            String             @db.VarChar
  res_id                                           Int
  partner_id                                       Int
  company_id                                       Int
  report_template                                  Int?
  attachment_id                                    Int?
  color                                            Boolean?
  duplex                                           Boolean?
  state                                            String?            @db.VarChar
  info_msg                                         String?            @db.VarChar
  create_uid                                       Int?
  create_date                                      DateTime?          @db.Timestamp(6)
  write_uid                                        Int?
  write_date                                       DateTime?          @db.Timestamp(6)
  ir_attachment                                    ir_attachment?     @relation(fields: [attachment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_company                                      res_company        @relation(fields: [company_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_snailmail_letter_create_uidTores_users res_users?         @relation("snailmail_letter_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_partner                                      res_partner        @relation(fields: [partner_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  ir_act_report_xml                                ir_act_report_xml? @relation(fields: [report_template], references: [id], onUpdate: NoAction)
  res_users_snailmail_letter_user_idTores_users    res_users?         @relation("snailmail_letter_user_idTores_users", fields: [user_id], references: [id], onUpdate: NoAction)
  res_users_snailmail_letter_write_uidTores_users  res_users?         @relation("snailmail_letter_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model theme_ir_attachment {
  id                                                  Int             @id @default(autoincrement())
  name                                                String          @db.VarChar
  key                                                 String          @db.VarChar
  url                                                 String?         @db.VarChar
  create_uid                                          Int?
  create_date                                         DateTime?       @db.Timestamp(6)
  write_uid                                           Int?
  write_date                                          DateTime?       @db.Timestamp(6)
  ir_attachment                                       ir_attachment[]
  res_users_theme_ir_attachment_create_uidTores_users res_users?      @relation("theme_ir_attachment_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_theme_ir_attachment_write_uidTores_users  res_users?      @relation("theme_ir_attachment_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model theme_ir_ui_view {
  id                                               Int                  @id @default(autoincrement())
  name                                             String               @db.VarChar
  key                                              String?              @db.VarChar
  type                                             String?              @db.VarChar
  priority                                         Int
  mode                                             String?              @db.VarChar
  active                                           Boolean?
  arch                                             String?
  arch_fs                                          String?              @db.VarChar
  inherit_id                                       String?              @db.VarChar
  create_uid                                       Int?
  create_date                                      DateTime?            @db.Timestamp(6)
  write_uid                                        Int?
  write_date                                       DateTime?            @db.Timestamp(6)
  ir_ui_view                                       ir_ui_view[]
  res_users_theme_ir_ui_view_create_uidTores_users res_users?           @relation("theme_ir_ui_view_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_theme_ir_ui_view_write_uidTores_users  res_users?           @relation("theme_ir_ui_view_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  theme_website_page                               theme_website_page[]
}

model theme_website_menu {
  id                                                 Int                  @id @default(autoincrement())
  name                                               String               @db.VarChar
  url                                                String?              @db.VarChar
  page_id                                            Int?
  new_window                                         Boolean?
  sequence                                           Int?
  parent_id                                          Int?
  create_uid                                         Int?
  create_date                                        DateTime?            @db.Timestamp(6)
  write_uid                                          Int?
  write_date                                         DateTime?            @db.Timestamp(6)
  res_users_theme_website_menu_create_uidTores_users res_users?           @relation("theme_website_menu_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  theme_website_page                                 theme_website_page?  @relation(fields: [page_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  theme_website_menu                                 theme_website_menu?  @relation("theme_website_menuTotheme_website_menu", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_theme_website_menu                           theme_website_menu[] @relation("theme_website_menuTotheme_website_menu")
  res_users_theme_website_menu_write_uidTores_users  res_users?           @relation("theme_website_menu_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  website_menu                                       website_menu[]

  @@index([parent_id], map: "theme_website_menu_parent_id_index")
}

model theme_website_page {
  id                                                 Int                  @id @default(autoincrement())
  url                                                String?              @db.VarChar
  view_id                                            Int
  website_indexed                                    Boolean?
  create_uid                                         Int?
  create_date                                        DateTime?            @db.Timestamp(6)
  write_uid                                          Int?
  write_date                                         DateTime?            @db.Timestamp(6)
  theme_website_menu                                 theme_website_menu[]
  res_users_theme_website_page_create_uidTores_users res_users?           @relation("theme_website_page_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  theme_ir_ui_view                                   theme_ir_ui_view     @relation(fields: [view_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_theme_website_page_write_uidTores_users  res_users?           @relation("theme_website_page_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  website_page                                       website_page[]
}

model web_editor_converter_test {
  id                                                        Int                            @id @default(autoincrement())
  char                                                      String?                        @db.VarChar
  integer                                                   Int?
  float                                                     Float?
  numeric                                                   Decimal?                       @db.Decimal
  many2one                                                  Int?
  binary                                                    Bytes?
  date                                                      DateTime?                      @db.Date
  datetime                                                  DateTime?                      @db.Timestamp(6)
  selection                                                 Int?
  selection_str                                             String?                        @db.VarChar
  html                                                      String?
  text                                                      String?
  create_uid                                                Int?
  create_date                                               DateTime?                      @db.Timestamp(6)
  write_uid                                                 Int?
  write_date                                                DateTime?                      @db.Timestamp(6)
  res_users_web_editor_converter_test_create_uidTores_users res_users?                     @relation("web_editor_converter_test_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  web_editor_converter_test_sub                             web_editor_converter_test_sub? @relation(fields: [many2one], references: [id], onUpdate: NoAction)
  res_users_web_editor_converter_test_write_uidTores_users  res_users?                     @relation("web_editor_converter_test_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model web_editor_converter_test_sub {
  id                                                            Int                         @id @default(autoincrement())
  name                                                          String?                     @db.VarChar
  create_uid                                                    Int?
  create_date                                                   DateTime?                   @db.Timestamp(6)
  write_uid                                                     Int?
  write_date                                                    DateTime?                   @db.Timestamp(6)
  web_editor_converter_test                                     web_editor_converter_test[]
  res_users_web_editor_converter_test_sub_create_uidTores_users res_users?                  @relation("web_editor_converter_test_sub_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_users_web_editor_converter_test_sub_write_uidTores_users  res_users?                  @relation("web_editor_converter_test_sub_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model web_tour_tour {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar
  user_id   Int?
  res_users res_users? @relation(fields: [user_id], references: [id], onUpdate: NoAction)
}

model website {
  id                                             Int                                 @id @default(autoincrement())
  name                                           String                              @db.VarChar
  domain                                         String?                             @db.VarChar
  company_id                                     Int
  default_lang_id                                Int
  default_lang_code                              String?                             @db.VarChar
  auto_redirect_lang                             Boolean?
  social_twitter                                 String?                             @db.VarChar
  social_facebook                                String?                             @db.VarChar
  social_github                                  String?                             @db.VarChar
  social_linkedin                                String?                             @db.VarChar
  social_youtube                                 String?                             @db.VarChar
  social_googleplus                              String?                             @db.VarChar
  social_instagram                               String?                             @db.VarChar
  google_analytics_key                           String?                             @db.VarChar
  google_management_client_id                    String?                             @db.VarChar
  google_management_client_secret                String?                             @db.VarChar
  google_maps_api_key                            String?                             @db.VarChar
  user_id                                        Int
  cdn_activated                                  Boolean?
  cdn_url                                        String?                             @db.VarChar
  cdn_filters                                    String?
  homepage_id                                    Int?
  favicon                                        Bytes?
  theme_id                                       Int?
  specific_user_account                          Boolean?
  auth_signup_uninvited                          String?                             @db.VarChar
  create_uid                                     Int?
  create_date                                    DateTime?                           @db.Timestamp(6)
  write_uid                                      Int?
  write_date                                     DateTime?                           @db.Timestamp(6)
  base_language_install_website_rel              base_language_install_website_rel[]
  ir_attachment                                  ir_attachment[]
  ir_ui_view                                     ir_ui_view[]
  res_config_settings                            res_config_settings[]
  res_partner                                    res_partner[]
  res_users_res_users_website_idTowebsite        res_users[]                         @relation("res_users_website_idTowebsite")
  res_company                                    res_company                         @relation(fields: [company_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_website_create_uidTores_users        res_users?                          @relation("website_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  res_lang                                       res_lang                            @relation(fields: [default_lang_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  website_page_website_homepage_idTowebsite_page website_page?                       @relation("website_homepage_idTowebsite_page", fields: [homepage_id], references: [id], onUpdate: NoAction)
  ir_module_module                               ir_module_module?                   @relation(fields: [theme_id], references: [id], onUpdate: NoAction)
  res_users_website_user_idTores_users           res_users                           @relation("website_user_idTores_users", fields: [user_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  res_users_website_write_uidTores_users         res_users?                          @relation("website_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
  website_country_group_rel                      website_country_group_rel[]
  website_lang_rel                               website_lang_rel[]
  website_menu                                   website_menu[]
  website_page_website_page_website_idTowebsite  website_page[]                      @relation("website_page_website_idTowebsite")
  website_redirect                               website_redirect[]
}

model website_country_group_rel {
  website_id        Int
  country_group_id  Int
  res_country_group res_country_group @relation(fields: [country_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  website           website           @relation(fields: [website_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([website_id, country_group_id])
  @@index([country_group_id])
  @@index([website_id])
}

model website_lang_rel {
  website_id Int
  lang_id    Int
  res_lang   res_lang @relation(fields: [lang_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  website    website  @relation(fields: [website_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([website_id, lang_id])
  @@index([lang_id])
  @@index([website_id])
}

model website_menu {
  id                                           Int                 @id @default(autoincrement())
  parent_path                                  String?             @db.VarChar
  name                                         String              @db.VarChar
  url                                          String?             @db.VarChar
  page_id                                      Int?
  new_window                                   Boolean?
  sequence                                     Int?
  website_id                                   Int?
  parent_id                                    Int?
  create_uid                                   Int?
  create_date                                  DateTime?           @db.Timestamp(6)
  write_uid                                    Int?
  write_date                                   DateTime?           @db.Timestamp(6)
  theme_template_id                            Int?
  res_users_website_menu_create_uidTores_users res_users?          @relation("website_menu_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  website_page                                 website_page?       @relation(fields: [page_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  website_menu                                 website_menu?       @relation("website_menuTowebsite_menu", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_website_menu                           website_menu[]      @relation("website_menuTowebsite_menu")
  theme_website_menu                           theme_website_menu? @relation(fields: [theme_template_id], references: [id], onUpdate: NoAction)
  website                                      website?            @relation(fields: [website_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_website_menu_write_uidTores_users  res_users?          @relation("website_menu_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)

  @@index([parent_id], map: "website_menu_parent_id_index")
  @@index([parent_path], map: "website_menu_parent_path_index")
}

model website_page {
  id                                           Int                 @id @default(autoincrement())
  is_published                                 Boolean?
  url                                          String?             @db.VarChar
  view_id                                      Int
  website_indexed                              Boolean?
  date_publish                                 DateTime?           @db.Timestamp(6)
  header_overlay                               Boolean?
  header_color                                 String?             @db.VarChar
  website_id                                   Int?
  create_uid                                   Int?
  create_date                                  DateTime?           @db.Timestamp(6)
  write_uid                                    Int?
  write_date                                   DateTime?           @db.Timestamp(6)
  theme_template_id                            Int?
  website_website_homepage_idTowebsite_page    website[]           @relation("website_homepage_idTowebsite_page")
  website_menu                                 website_menu[]
  res_users_website_page_create_uidTores_users res_users?          @relation("website_page_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  theme_website_page                           theme_website_page? @relation(fields: [theme_template_id], references: [id], onUpdate: NoAction)
  ir_ui_view                                   ir_ui_view          @relation(fields: [view_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  website_website_page_website_idTowebsite     website?            @relation("website_page_website_idTowebsite", fields: [website_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  res_users_website_page_write_uidTores_users  res_users?          @relation("website_page_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model website_redirect {
  id                                               Int        @id @default(autoincrement())
  type                                             String     @db.VarChar
  url_from                                         String     @db.VarChar
  url_to                                           String     @db.VarChar
  website_id                                       Int?
  active                                           Boolean?
  sequence                                         Int?
  create_uid                                       Int?
  create_date                                      DateTime?  @db.Timestamp(6)
  write_uid                                        Int?
  write_date                                       DateTime?  @db.Timestamp(6)
  res_users_website_redirect_create_uidTores_users res_users? @relation("website_redirect_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  website                                          website?   @relation(fields: [website_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_website_redirect_write_uidTores_users  res_users? @relation("website_redirect_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

model wizard_ir_model_menu_create {
  id                                                          Int        @id @default(autoincrement())
  menu_id                                                     Int
  name                                                        String     @db.VarChar
  create_uid                                                  Int?
  create_date                                                 DateTime?  @db.Timestamp(6)
  write_uid                                                   Int?
  write_date                                                  DateTime?  @db.Timestamp(6)
  res_users_wizard_ir_model_menu_create_create_uidTores_users res_users? @relation("wizard_ir_model_menu_create_create_uidTores_users", fields: [create_uid], references: [id], onUpdate: NoAction)
  ir_ui_menu                                                  ir_ui_menu @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  res_users_wizard_ir_model_menu_create_write_uidTores_users  res_users? @relation("wizard_ir_model_menu_create_write_uidTores_users", fields: [write_uid], references: [id], onUpdate: NoAction)
}

