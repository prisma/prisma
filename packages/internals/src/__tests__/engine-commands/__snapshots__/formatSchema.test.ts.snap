// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`format nothing 1`] = `"Parameter schema or schemaPath must be passed."`;

exports[`format valid blog schema 1`] = `
"datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

model User {
  id    String  @id @default(cuid())
  email String  @unique
  name  String?
  posts Post[]
  Like  Like[]
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
  Like      Like[]
}

model Like {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  postId String
  post   Post   @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}
"
`;

exports[`format valid blog schemaPath 1`] = `
"datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String  @id @default(cuid())
  email String  @unique
  name  String?
  posts Post[]
  Like  Like[]
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
  Like      Like[]
}

model Like {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  postId String
  post   Post   @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}
"
`;

exports[`format valid schema with 1 preview feature flag warning 1`] = `
"generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["cockroachdb"]
}

datasource db {
  provider = "cockroachdb"
  url      = env("TEST_POSTGRES_URI")
}

model SomeUser {
  id Int @id
}
"
`;

exports[`format valid schema with 3 preview feature flag warnings 1`] = `
"generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["cockroachdb", "mongoDb", "microsoftSqlServer"]
}

datasource db {
  provider = "cockroachdb"
  url      = env("TEST_POSTGRES_URI")
}

model SomeUser {
  id Int @id
}
"
`;
