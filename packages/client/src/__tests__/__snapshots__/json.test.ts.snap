// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`json should be able filter json "null" 1`] = `
query {
  findManyOptionalUser(where: {
    json: {
      equals: "\\"null\\""
    }
  }) {
    id
    name
    email
    json
  }
}
`;

exports[`json should be able filter json 1`] = `
query {
  findManyUser(where: {
    json: {
      equals: "{\\"hello\\":\\"world\\"}"
    }
  }) {
    id
    name
    email
    json
    jsonList
  }
}
`;

exports[`json should be able filter json null 1`] = `
query {
  findManyOptionalUser(where: {
    json: {
      equals: JsonNull
    }
  }) {
    id
    name
    email
    json
  }
}
`;

exports[`json should be able to create json 1`] = `
mutation {
  createOneUser(data: {
    email: "a@a.de"
    json: "{\\"hello\\":\\"world\\"}"
    jsonList: ["{\\"hello\\":\\"world\\"}"]
    name: "Bob"
  }) {
    id
    name
    email
    json
    jsonList
  }
}
`;

exports[`json should error if equals is missing 1`] = `

Invalid \`prisma.user()\` invocation:

{}

Unknown arg \`hello\` in where.json.hello for type JsonFilter. Did you mean \`lt\`? Available args:
type JsonFilter {
  equals?: Json | JsonNullValueFilter
  path?: List<String>
  string_contains?: String
  string_starts_with?: String
  string_ends_with?: String
  array_contains?: Json | Null
  array_starts_with?: Json | Null
  array_ends_with?: Json | Null
  lt?: Json
  lte?: Json
  gt?: Json
  gte?: Json
  not?: Json | JsonNullValueFilter
}


`;

exports[`json should not consider "JsonNull" string an enum value 1`] = `
query {
  findManyOptionalUser(where: {
    json: {
      equals: "\\"JsonNull\\""
    }
  }) {
    id
    name
    email
    json
  }
}
`;
