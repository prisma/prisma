// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`interactive-transactions (cockroachdb) () batching raw rollback 1`] = `

Invalid \`prisma.$executeRaw()\` invocation:


  Raw query failed. Code: \`23505\`. Message: \`Key (id)=('1') already exists.\`
`;

exports[`interactive-transactions (cockroachdb) () batching rollback 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:234:19

  231  */
  232 testIf(getClientEngineType() === ClientEngineType.Library)('batching rollback', async () => {
  233   const result = prisma.$transaction([
→ 234     prisma.user.create(
  Unique constraint failed on the fields: (\`email\`)
`;

exports[`interactive-transactions (cockroachdb) () rollback query 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:168:25

  165   },
  166 })
  167 
→ 168 await prisma.user.create(
  Unique constraint failed on the fields: (\`email\`)
`;

exports[`interactive-transactions (mongodb) () batching rollback 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:234:19

  231  */
  232 testIf(getClientEngineType() === ClientEngineType.Library)('batching rollback', async () => {
  233   const result = prisma.$transaction([
→ 234     prisma.user.create(
  Unique constraint failed on the constraint: \`User_email_key\`
`;

exports[`interactive-transactions (mongodb) () rollback query 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:168:25

  165   },
  166 })
  167 
→ 168 await prisma.user.create(
  Unique constraint failed on the constraint: \`User_email_key\`
`;

exports[`interactive-transactions (mysql) () batching raw rollback 1`] = `

Invalid \`prisma.$executeRaw()\` invocation:


  Raw query failed. Code: \`1062\`. Message: \`Duplicate entry '1' for key 'user.PRIMARY'\`
`;

exports[`interactive-transactions (mysql) () batching rollback 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:234:19

  231  */
  232 testIf(getClientEngineType() === ClientEngineType.Library)('batching rollback', async () => {
  233   const result = prisma.$transaction([
→ 234     prisma.user.create(
  Unique constraint failed on the constraint: \`User_email_key\`
`;

exports[`interactive-transactions (mysql) () rollback query 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:168:25

  165   },
  166 })
  167 
→ 168 await prisma.user.create(
  Unique constraint failed on the constraint: \`User_email_key\`
`;

exports[`interactive-transactions (postgresql) () batching raw rollback 1`] = `

Invalid \`prisma.$executeRaw()\` invocation:


  Raw query failed. Code: \`23505\`. Message: \`Key (id)=(1) already exists.\`
`;

exports[`interactive-transactions (postgresql) () batching rollback 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:234:19

  231  */
  232 testIf(getClientEngineType() === ClientEngineType.Library)('batching rollback', async () => {
  233   const result = prisma.$transaction([
→ 234     prisma.user.create(
  Unique constraint failed on the fields: (\`email\`)
`;

exports[`interactive-transactions (postgresql) () rollback query 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:168:25

  165   },
  166 })
  167 
→ 168 await prisma.user.create(
  Unique constraint failed on the fields: (\`email\`)
`;

exports[`interactive-transactions (sqlite) () batching raw rollback 1`] = `

Invalid \`prisma.$executeRaw()\` invocation:


  Raw query failed. Code: \`2067\`. Message: \`UNIQUE constraint failed: User.email\`
`;

exports[`interactive-transactions (sqlite) () batching rollback 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:234:19

  231  */
  232 testIf(getClientEngineType() === ClientEngineType.Library)('batching rollback', async () => {
  233   const result = prisma.$transaction([
→ 234     prisma.user.create(
  Unique constraint failed on the fields: (\`email\`)
`;

exports[`interactive-transactions (sqlite) () rollback query 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:168:25

  165   },
  166 })
  167 
→ 168 await prisma.user.create(
  Unique constraint failed on the fields: (\`email\`)
`;

exports[`interactive-transactions (sqlserver) () batching raw rollback 1`] = `

Invalid \`prisma.$executeRaw()\` invocation:


  Raw query failed. Code: \`2627\`. Message: \`Violation of PRIMARY KEY constraint 'User_pkey'. Cannot insert duplicate key in object 'dbo.User'. The duplicate key value is (1).\`
`;

exports[`interactive-transactions (sqlserver) () batching rollback 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:234:19

  231  */
  232 testIf(getClientEngineType() === ClientEngineType.Library)('batching rollback', async () => {
  233   const result = prisma.$transaction([
→ 234     prisma.user.create(
  Unique constraint failed on the constraint: \`dbo.User\`
`;

exports[`interactive-transactions (sqlserver) () rollback query 1`] = `

Invalid \`prisma.user.create()\` invocation in
/client/tests/functional/interactive-transactions/tests.ts:168:25

  165   },
  166 })
  167 
→ 168 await prisma.user.create(
  Unique constraint failed on the constraint: \`dbo.User\`
`;
