// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tracing (provider=cockroachdb) Tracing connect should trace the implict $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) Tracing disconnect should trace $disconnect 1`] = `
Object {
  children: Array [],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:disconnect,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on $raw methods $executeRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: executeRaw,
      name: undefined.executeRaw,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:itx_runner,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:connection,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: MyApp,
    },
    kind: 0,
    links: Array [],
    name: create-user,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) Tracing connect should trace the implict $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) Tracing disconnect should trace $disconnect 1`] = `
Object {
  children: Array [],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:disconnect,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:itx_runner,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:connection,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: MyApp,
    },
    kind: 0,
    links: Array [],
    name: create-user,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mongodb) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) Tracing connect should trace the implict $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) Tracing disconnect should trace $disconnect 1`] = `
Object {
  children: Array [],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:disconnect,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing on $raw methods $executeRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: executeRaw,
      name: undefined.executeRaw,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:itx_runner,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:connection,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: MyApp,
    },
    kind: 0,
    links: Array [],
    name: create-user,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=mysql) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) Tracing connect should trace the implict $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) Tracing disconnect should trace $disconnect 1`] = `
Object {
  children: Array [],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:disconnect,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing on $raw methods $executeRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: executeRaw,
      name: undefined.executeRaw,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:itx_runner,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:connection,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: MyApp,
    },
    kind: 0,
    links: Array [],
    name: create-user,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=postgresql) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) Tracing connect should trace the implict $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) Tracing disconnect should trace $disconnect 1`] = `
Object {
  children: Array [],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:disconnect,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:itx_runner,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:connection,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: MyApp,
    },
    kind: 0,
    links: Array [],
    name: create-user,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlite) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) Tracing connect should trace the implict $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) Tracing disconnect should trace $disconnect 1`] = `
Object {
  children: Array [],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:disconnect,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on $raw methods $executeRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: executeRaw,
      name: undefined.executeRaw,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:itx_query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:itx_runner,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:connection,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                endTime: <endTime>,
                events: Array [],
                instrumentationLibrary: Object {
                  name: prisma,
                },
                kind: 0,
                links: Array [],
                name: prisma:db_query,
                parentSpanId: <parentSpanId>,
                startTime: <startTime>,
                status: Object {
                  code: 0,
                },
              },
            },
          ],
          span: Object {
            attributes: Object {},
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:query_builder,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {},
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: MyApp,
    },
    kind: 0,
    links: Array [],
    name: create-user,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;

exports[`tracing (provider=sqlserver) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:connection,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            endTime: <endTime>,
            events: Array [],
            instrumentationLibrary: Object {
              name: prisma,
            },
            kind: 0,
            links: Array [],
            name: prisma:db_query,
            parentSpanId: <parentSpanId>,
            startTime: <startTime>,
            status: Object {
              code: 0,
            },
          },
        },
      ],
      span: Object {
        attributes: Object {},
        endTime: <endTime>,
        events: Array [],
        instrumentationLibrary: Object {
          name: prisma,
        },
        kind: 0,
        links: Array [],
        name: prisma:query_builder,
        parentSpanId: <parentSpanId>,
        startTime: <startTime>,
        status: Object {
          code: 0,
        },
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    endTime: <endTime>,
    events: Array [],
    instrumentationLibrary: Object {
      name: prisma,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
    startTime: <startTime>,
    status: Object {
      code: 0,
    },
  },
}
`;
