// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tracing (provider=cockroachdb) tracing connect should trace the implicit $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on $raw methods $executeRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: executeRaw,
      name: undefined.executeRaw,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        kind: 0,
        links: Array [],
        name: prisma:engine:itx_runner,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:connection,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {},
    kind: 0,
    links: Array [],
    name: create-user,
  },
}
`;

exports[`tracing (provider=cockroachdb) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mongodb) tracing connect should trace the implicit $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mongodb) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mongodb) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mongodb) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mongodb) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mongodb) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=mongodb) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        kind: 0,
        links: Array [],
        name: prisma:engine:itx_runner,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=mongodb) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:connection,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {},
    kind: 0,
    links: Array [],
    name: create-user,
  },
}
`;

exports[`tracing (provider=mongodb) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mysql) tracing connect should trace the implicit $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mysql) tracing on $raw methods $executeRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: executeRaw,
      name: undefined.executeRaw,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mysql) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mysql) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mysql) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mysql) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mysql) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=mysql) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=mysql) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        kind: 0,
        links: Array [],
        name: prisma:engine:itx_runner,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=mysql) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:connection,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {},
    kind: 0,
    links: Array [],
    name: create-user,
  },
}
`;

exports[`tracing (provider=mysql) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=postgresql) tracing connect should trace the implicit $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=postgresql) tracing on $raw methods $executeRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: executeRaw,
      name: undefined.executeRaw,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=postgresql) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=postgresql) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=postgresql) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=postgresql) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=postgresql) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=postgresql) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=postgresql) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        kind: 0,
        links: Array [],
        name: prisma:engine:itx_runner,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=postgresql) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:connection,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {},
    kind: 0,
    links: Array [],
    name: create-user,
  },
}
`;

exports[`tracing (provider=postgresql) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlite) tracing connect should trace the implicit $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlite) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlite) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlite) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlite) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlite) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlite) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=sqlite) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        kind: 0,
        links: Array [],
        name: prisma:engine:itx_runner,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=sqlite) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:connection,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {},
    kind: 0,
    links: Array [],
    name: create-user,
  },
}
`;

exports[`tracing (provider=sqlite) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing connect should trace the implicit $connect call 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:connect,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on $raw methods $executeRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: executeRaw,
      name: undefined.executeRaw,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on $raw methods $queryRaw 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: queryRaw,
      name: undefined.queryRaw,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on crud methods create 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on crud methods delete 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: delete,
      model: User,
      name: User.delete,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on crud methods read 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: findMany,
      model: User,
      name: User.findMany,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on crud methods update 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: update,
      model: User,
      name: User.update,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on transactions $transaction 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing on transactions interactive-transactions 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: findMany,
          model: User,
          name: User.findMany,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [
              Object {
                context: Object {
                  spanId: <spanId>,
                  traceFlags: 1,
                  traceId: <traceId>,
                },
              },
            ],
            name: prisma:engine:itx_query_builder,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          itx_id: <itxId>,
        },
        kind: 0,
        links: Array [],
        name: prisma:engine:itx_runner,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: $transaction,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:transaction,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing with custom span 1`] = `
Object {
  children: Array [
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:client:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.type: <dbType>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:connection,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {},
                kind: 0,
                links: Array [],
                name: prisma:engine:serialize,
                parentSpanId: <parentSpanId>,
              },
            },
            Object {
              children: Array [],
              span: Object {
                attributes: Object {
                  db.statement: <dbStatement>,
                },
                kind: 0,
                links: Array [],
                name: prisma:engine:db_query,
                parentSpanId: <parentSpanId>,
              },
            },
          ],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {
          method: create,
          model: User,
          name: User.create,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:operation,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {},
    kind: 0,
    links: Array [],
    name: create-user,
  },
}
`;

exports[`tracing (provider=sqlserver) tracing with middleware tracing with middleware 1`] = `
Object {
  children: Array [
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {
          method: $use,
        },
        kind: 0,
        links: Array [],
        name: prisma:client:middleware,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:client:serialize,
        parentSpanId: <parentSpanId>,
      },
    },
    Object {
      children: Array [
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.type: <dbType>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:connection,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {},
            kind: 0,
            links: Array [],
            name: prisma:engine:serialize,
            parentSpanId: <parentSpanId>,
          },
        },
        Object {
          children: Array [],
          span: Object {
            attributes: Object {
              db.statement: <dbStatement>,
            },
            kind: 0,
            links: Array [],
            name: prisma:engine:db_query,
            parentSpanId: <parentSpanId>,
          },
        },
      ],
      span: Object {
        attributes: Object {},
        kind: 0,
        links: Array [],
        name: prisma:engine,
        parentSpanId: <parentSpanId>,
      },
    },
  ],
  span: Object {
    attributes: Object {
      method: create,
      model: User,
      name: User.create,
    },
    kind: 0,
    links: Array [],
    name: prisma:client:operation,
  },
}
`;
