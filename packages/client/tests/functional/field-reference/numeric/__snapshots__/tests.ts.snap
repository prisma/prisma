// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`field-reference.numeric (provider=cockroachdb, fieldType=BigInt) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type BigInt but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=cockroachdb, fieldType=Float) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Float but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=cockroachdb, fieldType=Int) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Int but found Product.wrongType of type Float.
`;

exports[`field-reference.numeric (provider=mongodb, fieldType=BigInt) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type BigInt but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=mongodb, fieldType=Float) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Float but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=mongodb, fieldType=Int) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Int but found Product.wrongType of type Float.
`;

exports[`field-reference.numeric (provider=mysql, fieldType=BigInt) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type BigInt but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=mysql, fieldType=Float) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Float but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=mysql, fieldType=Int) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Int but found Product.wrongType of type Float.
`;

exports[`field-reference.numeric (provider=postgresql, fieldType=BigInt) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type BigInt but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=postgresql, fieldType=Float) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Float but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=postgresql, fieldType=Int) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Int but found Product.wrongType of type Float.
`;

exports[`field-reference.numeric (provider=sqlite, fieldType=BigInt) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type BigInt but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=sqlite, fieldType=Float) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Float but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=sqlite, fieldType=Int) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Int but found Product.wrongType of type Float.
`;

exports[`field-reference.numeric (provider=sqlserver, fieldType=BigInt) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type BigInt but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=sqlserver, fieldType=Float) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Float but found Product.wrongType of type Int.
`;

exports[`field-reference.numeric (provider=sqlserver, fieldType=Int) wrong column numeric type 1`] = `

Invalid \`prisma.product.findMany()\` invocation in
/client/tests/functional/field-reference/numeric/tests.ts:0:0

  XX 
  XX // TODO: Edge: skipped because of the error snapshot
  XX testIf(runtime !== 'edge')('wrong column numeric type', async () => {
→ XX   const products = prisma.product.findMany(
Input error. Expected a referenced scalar field of type Int but found Product.wrongType of type Float.
`;
