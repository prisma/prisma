// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`issues.11740-transaction-stored-query (provider=cockroachdb) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=cockroachdb) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=mongodb) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the constraint: \`Resource_email_key\`"
`;

exports[`issues.11740-transaction-stored-query (provider=mongodb) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the constraint: \`Resource_email_key\`"
`;

exports[`issues.11740-transaction-stored-query (provider=mysql) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the constraint: \`Resource_email_key\`"
`;

exports[`issues.11740-transaction-stored-query (provider=mysql) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the constraint: \`Resource_email_key\`"
`;

exports[`issues.11740-transaction-stored-query (provider=mysql, js_planetscale) stored query trigger .requestTransaction twice should fail 1`] = `target: test-0000-00000000.0.primary: vttablet: rpc error: code = AlreadyExists desc = Duplicate entry '02d25579a73a72373fa4e846' for key 'Resource.PRIMARY' (errno 1062) (sqlstate 23000) (CallerID: userData1): Sql: "insert into Resource(id, email) values (:vtg1 /* VARCHAR */, :vtg2 /* VARCHAR */)", BindVars: {vtg1: "type:VARCHAR value:\\"02d25579a73a72373fa4e846\\""vtg2: "type:VARCHAR value:\\"john@prisma.io\\""} (errno 1062) (sqlstate 23000) during query: INSERT INTO \`test-0000-00000000\`.\`Resource\` (\`id\`,\`email\`) VALUES ('02d25579a73a72373fa4e846','john@prisma.io')`;

exports[`issues.11740-transaction-stored-query (provider=mysql, js_planetscale) stored query triggered twice should fail but not exit process 1`] = `target: test-0000-00000000.0.primary: vttablet: rpc error: code = AlreadyExists desc = Duplicate entry '02d25579a73a72373fa4e846' for key 'Resource.PRIMARY' (errno 1062) (sqlstate 23000) (CallerID: userData1): Sql: "insert into Resource(id, email) values (:vtg1 /* VARCHAR */, :vtg2 /* VARCHAR */)", BindVars: {vtg1: "type:VARCHAR value:\\"02d25579a73a72373fa4e846\\""vtg2: "type:VARCHAR value:\\"john@prisma.io\\""} (errno 1062) (sqlstate 23000) during query: INSERT INTO \`test-0000-00000000\`.\`Resource\` (\`id\`,\`email\`) VALUES ('02d25579a73a72373fa4e846','john@prisma.io')`;

exports[`issues.11740-transaction-stored-query (provider=postgresql) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=postgresql) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=postgresql, js_neon) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=postgresql, js_neon) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=postgresql, js_pg) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=postgresql, js_pg) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=sqlite) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=sqlite) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=sqlite, js_d1) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`UNIQUE constraint failed\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=sqlite, js_d1) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`UNIQUE constraint failed\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=sqlite, js_libsql) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=sqlite, js_libsql) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the fields: (\`email\`)"
`;

exports[`issues.11740-transaction-stored-query (provider=sqlserver) stored query trigger .requestTransaction twice should fail 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query trigger .requestTransaction twice should fail',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the constraint: \`dbo.Resource\`"
`;

exports[`issues.11740-transaction-stored-query (provider=sqlserver) stored query triggered twice should fail but not exit process 1`] = `
"
Invalid \`prisma.resource.create()\` invocation in
/client/tests/functional/issues/11740-transaction-stored-query/tests.ts:0:0

  XX testIf(engineType !== 'binary' && driverAdapter !== AdapterProviders.JS_PLANETSCALE)(
  XX   'stored query triggered twice should fail but not exit process',
  XX   async () => {
→ XX     const query = prisma.resource.create(
Unique constraint failed on the constraint: \`dbo.Resource\`"
`;
