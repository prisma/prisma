// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cockroachdb basic introspection (no schema) --url 2`] = `
"generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = "postgresql://prisma@localhost:26257/tests-migrate-db-pull-cockroachdb"
}

model Post {
  id        String    @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(dbgenerated("'1970-01-01 00:00:00'::TIMESTAMP"))
  published Boolean   @default(false)
  title     String
  content   String?
  authorId  String?
  jsonData  Json?
  coinflips Boolean[]
  User      User?     @relation(fields: [authorId], references: [id])
}

model User {
  id    String  @id
  email String  @unique(map: "User.email")
  name  String?
  Post  Post[]
}

enum Role {
  USER
  ADMIN
}

"
`;

exports[`cockroachdb basic introspection (with cockroach provider) --url  2`] = `
"generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = "postgresql://prisma@localhost:26257/tests-migrate-db-pull-cockroachdb"
}

model Post {
  id        String    @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(dbgenerated("'1970-01-01 00:00:00'::TIMESTAMP"))
  published Boolean   @default(false)
  title     String
  content   String?
  authorId  String?
  jsonData  Json?
  coinflips Boolean[]
  User      User?     @relation(fields: [authorId], references: [id])
}

model User {
  id    String  @id
  email String  @unique(map: "User.email")
  name  String?
  Post  Post[]
}

enum Role {
  USER
  ADMIN
}

"
`;

exports[`cockroachdb basic introspection (with cockroachdb provider) 2`] = `
"generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("TEST_COCKROACH_URI_MIGRATE")
}

model Post {
  id        String    @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(dbgenerated("'1970-01-01 00:00:00'::TIMESTAMP"))
  published Boolean   @default(false)
  title     String
  content   String?
  authorId  String?
  jsonData  Json?
  coinflips Boolean[]
  User      User?     @relation(fields: [authorId], references: [id])
}

model User {
  id    String  @id
  email String  @unique(map: "User.email")
  name  String?
  Post  Post[]
}

enum Role {
  USER
  ADMIN
}

"
`;

exports[`cockroachdb basic introspection (with postgresql provider) --url should fail 2`] = `
"
"
`;
