// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`migrate diff D1 should succeed when --from-local-d1 and a single local Cloudflare D1 database exists 2`] = `
"-- DropTable
PRAGMA foreign_keys=off;
DROP TABLE "Post";
PRAGMA foreign_keys=on;

-- DropTable
PRAGMA foreign_keys=off;
DROP TABLE "User";
PRAGMA foreign_keys=on;
"
`;

exports[`migrate diff D1 should succeed when --from-url and a single local Cloudflare D1 database exists 2`] = `
"-- DropTable
PRAGMA foreign_keys=off;
DROP TABLE "Post";
PRAGMA foreign_keys=on;

-- DropTable
PRAGMA foreign_keys=off;
DROP TABLE "User";
PRAGMA foreign_keys=on;
"
`;

exports[`migrate diff D1 should succeed when --to-url and a single local Cloudflare D1 database exists 2`] = `
"-- CreateTable
CREATE TABLE "Post" (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "title" TEXT NOT NULL,
    "authorId" INTEGER NOT NULL,
    FOREIGN KEY ("authorId") REFERENCES "User" ("id") ON DELETE RESTRICT ON UPDATE CASCADE
);

-- CreateTable
CREATE TABLE "User" (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "email" TEXT NOT NULL,
    "count1" INTEGER NOT NULL,
    "name" TEXT
);

-- CreateIndex
CREATE UNIQUE INDEX "User_email_key" ON "User"("email" ASC);
"
`;

exports[`migrate diff sqlite should diff --from-empty --to-url=file:dev.db --script 2`] = `
"-- CreateTable
CREATE TABLE "Post" (
    "authorId" INTEGER NOT NULL,
    "content" TEXT,
    "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "published" BOOLEAN NOT NULL DEFAULT false,
    "title" TEXT NOT NULL,
    FOREIGN KEY ("authorId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

-- CreateTable
CREATE TABLE "Profile" (
    "bio" TEXT,
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "userId" INTEGER NOT NULL,
    FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

-- CreateTable
CREATE TABLE "User" (
    "email" TEXT NOT NULL,
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "name" TEXT
);

-- CreateTable
CREATE TABLE "_Migration" (
    "revision" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "name" TEXT NOT NULL,
    "datamodel" TEXT NOT NULL,
    "status" TEXT NOT NULL,
    "applied" INTEGER NOT NULL,
    "rolled_back" INTEGER NOT NULL,
    "datamodel_steps" TEXT NOT NULL,
    "database_migration" TEXT NOT NULL,
    "errors" TEXT NOT NULL,
    "started_at" DATETIME NOT NULL,
    "finished_at" DATETIME
);

-- CreateIndex
CREATE UNIQUE INDEX "Profile.userId" ON "Profile"("userId" ASC);

-- CreateIndex
CREATE UNIQUE INDEX "User.email" ON "User"("email" ASC);
"
`;
