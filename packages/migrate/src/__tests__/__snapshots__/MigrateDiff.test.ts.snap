// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`migrate diff generic should fail when --from-local-d1 is used with --shadow-database-url 1`] = `

The flag \`--shadow-database-url\` is not compatible with \`--from-local-d1\` or \`--to-local-d1\`.

Usage

  $ prisma migrate diff [options]

Options

  -h, --help               Display this help message

From and To inputs (1 \`--from-...\` and 1 \`--to-...\` must be provided):
  --from-url               A datasource URL
  --to-url

  --from-empty             Flag to assume from or to is an empty datamodel
  --to-empty

  --from-schema-datamodel  Path to a Prisma schema file, uses the datamodel for the diff
  --to-schema-datamodel

  --from-schema-datasource Path to a Prisma schema file, uses the datasource url for the diff
  --to-schema-datasource

  --from-migrations        Path to the Prisma Migrate migrations directory
  --to-migrations

  --from-local-d1          Automatically locate the local Cloudflare D1 database
  --to-local-d1

Shadow database (only required if using --from-migrations or --to-migrations):
  --shadow-database-url    URL for the shadow database

Flags

  --script                 Render a SQL script to stdout instead of the default human readable summary (not supported on MongoDB)
  --exit-code              Change the exit code behavior to signal if the diff is empty or not (Empty: 0, Error: 1, Not empty: 2). Default behavior is Success: 0, Error: 1.

`;

exports[`migrate diff generic should fail when --to-local-d1 is used with --shadow-database-url 1`] = `

The flag \`--shadow-database-url\` is not compatible with \`--from-local-d1\` or \`--to-local-d1\`.

Usage

  $ prisma migrate diff [options]

Options

  -h, --help               Display this help message

From and To inputs (1 \`--from-...\` and 1 \`--to-...\` must be provided):
  --from-url               A datasource URL
  --to-url

  --from-empty             Flag to assume from or to is an empty datamodel
  --to-empty

  --from-schema-datamodel  Path to a Prisma schema file, uses the datamodel for the diff
  --to-schema-datamodel

  --from-schema-datasource Path to a Prisma schema file, uses the datasource url for the diff
  --to-schema-datasource

  --from-migrations        Path to the Prisma Migrate migrations directory
  --to-migrations

  --from-local-d1          Automatically locate the local Cloudflare D1 database
  --to-local-d1

Shadow database (only required if using --from-migrations or --to-migrations):
  --shadow-database-url    URL for the shadow database

Flags

  --script                 Render a SQL script to stdout instead of the default human readable summary (not supported on MongoDB)
  --exit-code              Change the exit code behavior to signal if the diff is empty or not (Empty: 0, Error: 1, Not empty: 2). Default behavior is Success: 0, Error: 1.

`;

exports[`migrate diff sqlite should diff --from-empty --to-url=file:dev.db --script 2`] = `
-- CreateTable
CREATE TABLE "Post" (
    "authorId" INTEGER NOT NULL,
    "content" TEXT,
    "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "published" BOOLEAN NOT NULL DEFAULT false,
    "title" TEXT NOT NULL,
    FOREIGN KEY ("authorId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

-- CreateTable
CREATE TABLE "Profile" (
    "bio" TEXT,
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "userId" INTEGER NOT NULL,
    FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

-- CreateTable
CREATE TABLE "User" (
    "email" TEXT NOT NULL,
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "name" TEXT
);

-- CreateTable
CREATE TABLE "_Migration" (
    "revision" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "name" TEXT NOT NULL,
    "datamodel" TEXT NOT NULL,
    "status" TEXT NOT NULL,
    "applied" INTEGER NOT NULL,
    "rolled_back" INTEGER NOT NULL,
    "datamodel_steps" TEXT NOT NULL,
    "database_migration" TEXT NOT NULL,
    "errors" TEXT NOT NULL,
    "started_at" DATETIME NOT NULL,
    "finished_at" DATETIME
);

-- CreateIndex
CREATE UNIQUE INDEX "Profile.userId" ON "Profile"("userId" ASC);

-- CreateIndex
CREATE UNIQUE INDEX "User.email" ON "User"("email" ASC);
`;
