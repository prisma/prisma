// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`introspection: create bigint data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model migrate {
  version BigInt @id(map: "PK__migrate__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: create bigint data: warnings 1`] = `[]`;

exports[`introspection: create with data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id   Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name String @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
}

`;

exports[`introspection: create with data: warnings 1`] = `[]`;

exports[`introspection: create with empty data and SQL default: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id   Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name String @default("alice", map: "DF__teams__name__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
}

`;

exports[`introspection: create with empty data and SQL default: warnings 1`] = `[]`;

exports[`introspection: delete where composite PK: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model variables {
  name  String @sqlserver.VarChar(32)
  key   String @sqlserver.VarChar(32)
  value String @sqlserver.VarChar(32)
  email String @sqlserver.VarChar(32)

  @@id([name, key], map: "pk_const")
}

`;

exports[`introspection: delete where composite PK: warnings 1`] = `[]`;

exports[`introspection: delete where composite unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model users {
  id    Int    @id(map: "PK__users__CustomNameToAvoidRandomNumber") @default(autoincrement())
  email String @sqlserver.VarChar(32)
  name  String @sqlserver.VarChar(32)

  @@unique([email, name], map: "u_const")
}

`;

exports[`introspection: delete where composite unique: warnings 1`] = `[]`;

exports[`introspection: findMany - email text: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model users {
  id    Int     @id(map: "PK__users__CustomNameToAvoidRandomNumber") @default(autoincrement())
  email String? @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany - email text: warnings 1`] = `[]`;

exports[`introspection: findMany - email varchar(50) not null unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model users {
  id    Int    @id(map: "PK__users__CustomNameToAvoidRandomNumber") @default(autoincrement())
  email String @unique(map: "UQ__users_CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany - email varchar(50) not null unique: warnings 1`] = `[]`;

exports[`introspection: findMany orderBy asc: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id        Int     @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title     String  @sqlserver.VarChar(32)
  published Boolean @default(false, map: "DF__posts__published__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: findMany orderBy asc: warnings 1`] = `[]`;

exports[`introspection: findMany orderBy desc: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id        Int     @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title     String  @sqlserver.VarChar(32)
  published Boolean @default(false, map: "DF__posts__published__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: findMany orderBy desc: warnings 1`] = `[]`;

exports[`introspection: findMany where OR[contains, contains] : datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id        Int     @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title     String  @sqlserver.VarChar(32)
  published Boolean @default(false, map: "DF__posts__published__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: findMany where OR[contains, contains] : warnings 1`] = `[]`;

exports[`introspection: findMany where contains and boolean: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id        Int     @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title     String  @sqlserver.VarChar(32)
  published Boolean @default(false, map: "DF__posts__published__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: findMany where contains and boolean: warnings 1`] = `[]`;

exports[`introspection: findMany where contains: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model crons {
  id        Int     @id(map: "PK__crons__CustomNameToAvoidRandomNumber") @default(autoincrement())
  job       String  @unique(map: "UQ__crons__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
  frequency String? @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where contains: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime exact: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model events {
  id   Int       @id(map: "PK__events__CustomNameToAvoidRandomNumber") @default(autoincrement())
  time DateTime? @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime exact: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime gt than now: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id         Int      @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title      String   @sqlserver.VarChar(32)
  created_at DateTime @default(now(), map: "DF__posts__created_at__CustomNameToAvoidRandomNumber") @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime gt than now: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime gt: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model events {
  id   Int       @id(map: "PK__events__CustomNameToAvoidRandomNumber") @default(autoincrement())
  time DateTime? @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime gt: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime gte than now: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id         Int      @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title      String   @sqlserver.VarChar(32)
  created_at DateTime @default(now(), map: "DF__posts__created_at__CustomNameToAvoidRandomNumber") @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime gte than now: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime gte: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model events {
  id   Int       @id(map: "PK__events__CustomNameToAvoidRandomNumber") @default(autoincrement())
  time DateTime? @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime gte: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime lt than now: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id         Int      @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title      String   @sqlserver.VarChar(32)
  created_at DateTime @default(now(), map: "DF__posts__created_at__CustomNameToAvoidRandomNumber") @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime lt than now: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime lt: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model events {
  id   Int       @id(map: "PK__events__CustomNameToAvoidRandomNumber") @default(autoincrement())
  time DateTime? @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime lt: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime lte - check instanceof Date: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id         Int      @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title      String   @sqlserver.VarChar(32)
  created_at DateTime @default(now(), map: "DF__posts__created_at__CustomNameToAvoidRandomNumber") @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime lte - check instanceof Date: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime lte: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model events {
  id   Int       @id(map: "PK__events__CustomNameToAvoidRandomNumber") @default(autoincrement())
  time DateTime? @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime lte: warnings 1`] = `[]`;

exports[`introspection: findMany where datetime not: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model events {
  id   Int       @id(map: "PK__events__CustomNameToAvoidRandomNumber") @default(autoincrement())
  time DateTime? @sqlserver.DateTime
}

`;

exports[`introspection: findMany where datetime not: warnings 1`] = `[]`;

exports[`introspection: findMany where decimal: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model exercises {
  id       Int     @id(map: "PK__exercises__CustomNameToAvoidRandomNumber") @default(autoincrement())
  distance Decimal @sqlserver.Decimal(5, 3)
}

`;

exports[`introspection: findMany where decimal: warnings 1`] = `[]`;

exports[`introspection: findMany where empty in[]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id    Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  token Int    @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber")
  name  String @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where empty in[]: warnings 1`] = `[]`;

exports[`introspection: findMany where empty notIn[]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id    Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  token Int    @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber")
  name  String @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where empty notIn[]: warnings 1`] = `[]`;

exports[`introspection: findMany where endsWith: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model crons {
  id        Int     @id(map: "PK__crons__CustomNameToAvoidRandomNumber") @default(autoincrement())
  job       String  @unique(map: "UQ__crons__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
  frequency String? @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where endsWith: warnings 1`] = `[]`;

exports[`introspection: findMany where id empty in[] and token in[]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id    Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  token Int    @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber")
  name  String @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where id empty in[] and token in[]: warnings 1`] = `[]`;

exports[`introspection: findMany where in[integer]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id    Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  token Int    @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber")
  name  String @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where in[integer]: warnings 1`] = `[]`;

exports[`introspection: findMany where in[string]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model crons {
  id        Int     @id(map: "PK__crons__CustomNameToAvoidRandomNumber") @default(autoincrement())
  job       String  @unique(map: "UQ__crons__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
  frequency String? @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where in[string]: warnings 1`] = `[]`;

exports[`introspection: findMany where notIn[]: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id    Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  token Int    @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber")
  name  String @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where notIn[]: warnings 1`] = `[]`;

exports[`introspection: findMany where null: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model events {
  id   Int       @id(map: "PK__events__CustomNameToAvoidRandomNumber") @default(autoincrement())
  time DateTime? @sqlserver.DateTime
}

`;

exports[`introspection: findMany where null: warnings 1`] = `[]`;

exports[`introspection: findMany where startsWith: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model crons {
  id        Int     @id(map: "PK__crons__CustomNameToAvoidRandomNumber") @default(autoincrement())
  job       String  @unique(map: "UQ__crons__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
  frequency String? @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where startsWith: warnings 1`] = `[]`;

exports[`introspection: findMany where unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model users {
  id    Int    @id(map: "PK__users__CustomNameToAvoidRandomNumber") @default(autoincrement())
  email String @unique(map: "UQ__users_CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
}

`;

exports[`introspection: findMany where unique: warnings 1`] = `[]`;

exports[`introspection: findUnique where PK with include: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id      Int    @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  user_id Int
  title   String @sqlserver.VarChar(32)
  users   users  @relation(fields: [user_id], references: [id], map: "FK_UserId")
}

model users {
  id    Int     @id(map: "PK__users__CustomNameToAvoidRandomNumber") @default(autoincrement())
  email String  @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
  posts posts[]
}

`;

exports[`introspection: findUnique where PK with include: warnings 1`] = `[]`;

exports[`introspection: findUnique where PK with select: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id    Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber")
  name  String @unique(map: "UQ__teams__name__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
  email String @unique(map: "UQ__teams__email__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
}

`;

exports[`introspection: findUnique where PK with select: warnings 1`] = `[]`;

exports[`introspection: findUnique where PK: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id   Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber")
  name String @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
}

`;

exports[`introspection: findUnique where PK: warnings 1`] = `[]`;

exports[`introspection: findUnique where composite PK with foreign key: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model a {
  one Int
  two Int
  b   b[]

  @@id([one, two], map: "PK__a__CustomNameToAvoidRandomNumber")
}

model b {
  id  Int @id(map: "PK__b__CustomNameToAvoidRandomNumber") @default(autoincrement())
  one Int
  two Int
  a   a   @relation(fields: [one, two], references: [one, two], onUpdate: NoAction, map: "FK_OneTwo")
}

`;

exports[`introspection: findUnique where composite PK with foreign key: warnings 1`] = `[]`;

exports[`introspection: findUnique where composite PK: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model variables {
  name  String @sqlserver.VarChar(32)
  key   String @sqlserver.VarChar(32)
  value String @sqlserver.VarChar(32)
  email String @sqlserver.VarChar(32)

  @@id([name, key], map: "pk_const")
}

`;

exports[`introspection: findUnique where composite PK: warnings 1`] = `[]`;

exports[`introspection: findUnique where composite unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model users {
  id    Int    @id(map: "PK__users__CustomNameToAvoidRandomNumber") @default(autoincrement())
  email String @sqlserver.VarChar(32)
  name  String @sqlserver.VarChar(32)

  @@unique([email, name], map: "u_const")
}

`;

exports[`introspection: findUnique where composite unique: warnings 1`] = `[]`;

exports[`introspection: findUnique where decimal - default value: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model exercises {
  id       Int     @id(map: "PK__exercises__CustomNameToAvoidRandomNumber") @default(autoincrement())
  distance Decimal @unique(map: "UQ__exercises_CustomNameToAvoidRandomNumber") @default(12.3, map: "DF__exercises__active__CustomNameToAvoidRandomNumber") @sqlserver.Decimal(5, 3)
}

`;

exports[`introspection: findUnique where decimal - default value: warnings 1`] = `[]`;

exports[`introspection: findUnique where decimal: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model exercises {
  id       Int     @id(map: "PK__exercises__CustomNameToAvoidRandomNumber") @default(autoincrement())
  distance Decimal @unique(map: "UQ__exercises_CustomNameToAvoidRandomNumber") @sqlserver.Decimal(5, 3)
}

`;

exports[`introspection: findUnique where decimal: warnings 1`] = `[]`;

exports[`introspection: findUnique where unique composite (PK is a composite): datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model variables {
  name  String @sqlserver.VarChar(32)
  key   String @sqlserver.VarChar(32)
  value String @sqlserver.VarChar(32)
  email String @sqlserver.VarChar(32)

  @@id([name, key], map: "pk_const")
  @@unique([value, email], map: "u_const")
}

`;

exports[`introspection: findUnique where unique composite (PK is a composite): warnings 1`] = `[]`;

exports[`introspection: findUnique where unique composite: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model variables {
  id    Int    @id(map: "PK__variables__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name  String @sqlserver.VarChar(32)
  key   String @sqlserver.VarChar(32)
  value String @sqlserver.VarChar(32)
  email String @sqlserver.VarChar(32)

  @@unique([name, key], map: "u_const")
}

`;

exports[`introspection: findUnique where unique composite: warnings 1`] = `[]`;

exports[`introspection: findUnique where unique with foreign key and unpack: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id      Int    @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  user_id Int
  title   String @sqlserver.VarChar(32)
  users   users  @relation(fields: [user_id], references: [id], map: "FK_UserId")
}

model users {
  id    Int     @id(map: "PK__users__CustomNameToAvoidRandomNumber") @default(autoincrement())
  email String  @unique(map: "UQ__users_CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
  posts posts[]
}

`;

exports[`introspection: findUnique where unique with foreign key and unpack: warnings 1`] = `[]`;

exports[`introspection: findUnique where unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model users {
  id    Int    @id(map: "PK__users__CustomNameToAvoidRandomNumber") @default(autoincrement())
  email String @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
}

`;

exports[`introspection: findUnique where unique: warnings 1`] = `[]`;

exports[`introspection: update where composite PK: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model variables {
  name  String @sqlserver.VarChar(32)
  key   String @sqlserver.VarChar(32)
  value String @sqlserver.VarChar(32)
  email String @sqlserver.VarChar(32)

  @@id([name, key], map: "pk_const")
}

`;

exports[`introspection: update where composite PK: warnings 1`] = `[]`;

exports[`introspection: update where composite unique: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model users {
  id    Int    @id(map: "PK__users__CustomNameToAvoidRandomNumber") @default(autoincrement())
  email String @sqlserver.VarChar(32)
  name  String @sqlserver.VarChar(32)

  @@unique([email, name], map: "u_const")
}

`;

exports[`introspection: update where composite unique: warnings 1`] = `[]`;

exports[`introspection: update where integer data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id    Int @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  token Int @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: update where integer data: warnings 1`] = `[]`;

exports[`introspection: update where with boolean data and select: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id     Int     @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name   String  @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
  active Boolean @default(true, map: "DF__teams__active__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: update where with boolean data and select: warnings 1`] = `[]`;

exports[`introspection: update where with boolean data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id     Int     @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name   String  @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
  active Boolean @default(true, map: "DF__teams__active__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: update where with boolean data: warnings 1`] = `[]`;

exports[`introspection: update where with numeric data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id   Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name String @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
}

`;

exports[`introspection: update where with numeric data: warnings 1`] = `[]`;

exports[`introspection: update where with string data: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id   Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name String @unique(map: "UQ__teams__CustomNameToAvoidRandomNumber") @sqlserver.VarChar(32)
}

`;

exports[`introspection: update where with string data: warnings 1`] = `[]`;

exports[`introspection: updateMany where null - check findMany: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id   Int     @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name String? @sqlserver.VarChar(32)
}

`;

exports[`introspection: updateMany where null - check findMany: warnings 1`] = `[]`;

exports[`introspection: updateMany where with string data - check findMany: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id   Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name String @sqlserver.VarChar(32)
}

`;

exports[`introspection: updateMany where with string data - check findMany: warnings 1`] = `[]`;

exports[`introspection: updateMany where with string data - check returned count: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model teams {
  id   Int    @id(map: "PK__teams__CustomNameToAvoidRandomNumber") @default(autoincrement())
  name String @sqlserver.VarChar(32)
}

`;

exports[`introspection: updateMany where with string data - check returned count: warnings 1`] = `[]`;

exports[`introspection: upsert (create): datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id        Int     @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title     String  @sqlserver.VarChar(32)
  published Boolean @default(false, map: "DF__posts__published__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: upsert (create): warnings 1`] = `[]`;

exports[`introspection: upsert (update): datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model posts {
  id        Int     @id(map: "PK__posts__CustomNameToAvoidRandomNumber") @default(autoincrement())
  title     String  @sqlserver.VarChar(32)
  published Boolean @default(false, map: "DF__posts__published__CustomNameToAvoidRandomNumber")
}

`;

exports[`introspection: upsert (update): warnings 1`] = `[]`;

exports[`introspection: upsert where composite PK - create: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model variables {
  name  String @sqlserver.VarChar(32)
  key   String @sqlserver.VarChar(32)
  value String @sqlserver.VarChar(32)
  email String @sqlserver.VarChar(32)

  @@id([name, key], map: "pk_const")
}

`;

exports[`introspection: upsert where composite PK - create: warnings 1`] = `[]`;

exports[`introspection: upsert where composite PK - update: datamodel 1`] = `
generator client {
  provider = "prisma-client-js"
  output = "***"
}

datasource sqlserver {
  provider = "sqlserver"
  url = "***"
}

model variables {
  name  String @sqlserver.VarChar(32)
  key   String @sqlserver.VarChar(32)
  value String @sqlserver.VarChar(32)
  email String @sqlserver.VarChar(32)

  @@id([name, key], map: "pk_const")
}

`;

exports[`introspection: upsert where composite PK - update: warnings 1`] = `[]`;
