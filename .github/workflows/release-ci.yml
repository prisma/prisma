name: npm - release to dev/integration
run-name: npm - release from ${{ github.ref_name }} to dev/integration

on:
  push:
    branches:
      - main
      - 'integration/*'
      - '*.*.x'
    paths-ignore:
      - '*.md'
      - '.devcontainer/**'
      - '.vscode/**'
      - '.github/ISSUE_TEMPLATE/**'
      - 'LICENSE'
      - '.github/CODEOWNERS'
      - '.github/DISCUSSION_TEMPLATE/**'
      - '.buildkite/**'
      - '.dockerignore'
      - '*.bench.ts'
      - 'graphs/**'
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Check to do a dry run (does not publish packages)'
        type: boolean
      forceIntegrationRelease:
        description: 'Check to force an integration release for any given branch name'
        type: boolean
env:
  # To hide "Update available 0.0.0 -> x.x.x"
  PRISMA_HIDE_UPDATE_MESSAGE: 'true'

permissions:
  contents: read

jobs:
  release:
    timeout-minutes: 45
    # environment: 'npm-ci'
    runs-on: ubuntu-latest
    permissions:
      # required for publishing to npm with --provenance
      # see https://docs.npmjs.com/generating-provenance-statements
      id-token: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cba0d00b1fc9a034e1e642ea0f1103c282990604 # v2.5.0
        with:
          egress-policy: audit

      - name: Print input
        env:
          THE_INPUT: '${{ toJson(github.event.inputs) }}'
        run: |
          echo $THE_INPUT

      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Install & build
        uses: ./.github/actions/setup
        with:
          node-version: 16
          pnpm-version: 8

      - name: Publish all packages to npm
        id: publish
        run: pnpm run publish-all
        env:
          # Inputs
          DRY_RUN: ${{ github.event.inputs.dryRun == 'true' && 'true' || '' }}
          FORCE_INTEGRATION_RELEASE: ${{ github.event.inputs.forceIntegrationRelease == 'true' && 'true' || '' }}
          # Other
          BUILDKITE: true
          BUILDKITE_BRANCH: ${{ github.ref_name }}
          GITHUB_CONTEXT: ${{ toJson(github) }}
          # https://docs.npmjs.com/generating-provenance-statements
          NPM_CONFIG_PROVENANCE: true
          # Secrets
          # Note: must use personal access token
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          SLACK_RELEASE_FEED_WEBHOOK: ${{ secrets.SLACK_RELEASE_FEED_WEBHOOK }}

      - name: Print output
        env:
          THE_OUTPUT: '${{ toJson(steps.publish.outputs) }}'
        run: |
          echo $THE_OUTPUT

  # We also have `sendSlackMessage()` in publish.ts
  # It uses the #feed-prisma-releases channel and adds more information
  success:
    needs:
      - release
    if: ${{ success() }}
    name: Communicate success
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cba0d00b1fc9a034e1e642ea0f1103c282990604 # v2.5.0
        with:
          egress-policy: audit

      - name: Set current job url in SLACK_FOOTER env var
        run: echo "SLACK_FOOTER=<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Click here to go to the job logs>" >> $GITHUB_ENV

      - name: Slack Notification on Success
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2.2.0
        env:
          SLACK_TITLE: 'prisma/prisma Release ${{ steps.publish.outputs.prismaVersion }} succeeded :white_check_mark:'
          SLACK_COLOR: '#55ff55'
          SLACK_WEBHOOK: ${{ secrets.SLACK_RELEASE_FEED_WEBHOOK }}
          SLACK_CHANNEL: feed-prisma-publish

  failure:
    needs:
      - release
    if: ${{ failure() }}
    name: Communicate failure
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cba0d00b1fc9a034e1e642ea0f1103c282990604 # v2.5.0
        with:
          egress-policy: audit

      - name: Set current job url in SLACK_FOOTER env var
        run: echo "SLACK_FOOTER=<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Click here to go to the job logs>" >> $GITHUB_ENV

      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2.2.0
        env:
          SLACK_TITLE: 'prisma/prisma Release from ${{ github.ref_name }} to dev/integration failed :x:'
          SLACK_COLOR: '#FF0000'
          SLACK_WEBHOOK: ${{ secrets.SLACK_RELEASE_FEED_WEBHOOK }}
          SLACK_CHANNEL: feed-prisma-publish-failures
