name: CI

# Run on push only for master, if not it will trigger push & pull_request on PRs at the same time
on:
  push:
    branches:
      - master
    paths-ignore:
      # Any update here needs to be done for
      # - `pull_request` see below
      # - https://github.com/prisma/prisma/blob/master/src/.buildkite/test/buildkite-entry.sh
      # - https://github.com/prisma/prisma/blob/master/src/.buildkite/publish/buildkite-entry.sh
      - "*.md"
      - ".vscode/**"
      - "docs/**"
      - "examples/**"
      - "LICENSE"
      - "src/.buildkite/**"
      - "src/.dockerignore"
      - "*.bench.ts"
      - "src/scripts/ci/publish.ts"
      - "src/graphs/**"
  pull_request:
    paths-ignore:
      # Any update here needs to be done for
      # - `push`see before
      # - https://github.com/prisma/prisma/blob/master/src/.buildkite/test/buildkite-entry.sh
      # - https://github.com/prisma/prisma/blob/master/src/.buildkite/publish/buildkite-entry.sh
      - "*.md"
      - ".vscode/**"
      - "docs/**"
      - "examples/**"
      - "LICENSE"
      - "src/.buildkite/**"
      - "src/.dockerignore"
      - "*.bench.ts"
      - "src/scripts/ci/publish.ts"
      - "src/graphs/**"

env:
  PRISMA_TELEMETRY_INFORMATION: "prisma test.yml"
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  NAPI: "true"

jobs:
  # From https://github.com/marketplace/actions/skip-duplicate-actions
  # This action cleans up previously running instances of a workflow on the same branch.
  # This accomplishes the task of automatically cancelling CI runs on pushes to the same branch,
  # which is a common feature in most CI systems but currently not possible with GitHub actions.
  cleanup-runs:
    continue-on-error: true
    runs-on: ubuntu-20.04
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"
    steps:
      - uses: fkirc/skip-duplicate-actions@v3.3.0

  #
  # Linting
  #
  lint:
    timeout-minutes: 7
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2
        with:
          node-version: "12"

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run lint
        working-directory: ./

  #
  # TESTS-INTEGRATION
  #
  tests-integration:
    timeout-minutes: 20
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        database:
          - sqlite
          - postgres
          - mysql
          - mariadb
          - mssql
        node: [12]

    steps:
      - uses: actions/checkout@v2

      - run: docker-compose -f src/docker/docker-compose.yml up --detach ${{matrix.database}}
        if: matrix.database != 'sqlite'

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm i sqlite3@5.0.2 --unsafe-perm --reporter=silent
        if: ${{ matrix.database == 'sqlite' }}
        working-directory: src/packages/tests

      # temp
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - run: pnpm run jest integration/${{ matrix.database }} -- --forceExit --maxConcurrency=8
        working-directory: src/packages/tests
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          TEST_POSTGRES_BASE_URI: postgres://prisma:prisma@localhost:5432
          TEST_MYSQL_BASE_URI: mysql://root:root@localhost:3306
          TEST_MARIADB_BASE_URI: mysql://root:root@localhost:4306
          TEST_POSTGRES_URI: postgres://prisma:prisma@localhost:5432/tests
          TEST_MYSQL_URI: mysql://root:root@localhost:3306/tests
          TEST_MARIADB_URI: mysql://root:root@localhost:4306/tests
          TEST_MSSQL_URI: mssql://SA:Pr1sm4_Pr1sm4@localhost:1433/master

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/tests/src/__tests__/coverage/clover.xml
          flags: tests-integration,${{ matrix.database }}
          name: tests-integration-${{ matrix.database }}

  #
  # CLI-COMMANDS
  #
  cli-commands:
    timeout-minutes: 10
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/cli
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/cli/src/__tests__/coverage/clover.xml
          flags: cli,${{ matrix.os }}
          name: cli-${{ matrix.os }}

  #
  # CLIENT (without types test)
  #
  client:
    timeout-minutes: 20
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]
        node: [12]

    steps:
      - uses: actions/checkout@v2
          
      - run: docker-compose -f src/docker/docker-compose.yml up --detach postgres postgres_isolated mysql mysql_isolated mssql

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test -- --testPathIgnorePatterns src/__tests__/types/types.test.ts
        working-directory: src/packages/client
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          TEST_POSTGRES_URI: postgres://prisma:prisma@localhost:5432/tests
          TEST_POSTGRES_ISOLATED_URI: postgres://prisma:prisma@localhost:5435/tests
          TEST_MYSQL_URI: mysql://root:root@localhost:3306/tests
          TEST_MYSQL_ISOLATED_URI: mysql://root:root@localhost:3307/tests
          TEST_MSSQL_URI: mssql://SA:Pr1sm4_Pr1sm4@localhost:1433/master
          TEST_MSSQL_JDBC_URI: sqlserver://localhost:1433;database=master;user=SA;password=Pr1sm4_Pr1sm4;trustServerCertificate=true;encrypt=DANGER_PLAINTEXT

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/client/src/__tests__/coverage/clover.xml
          flags: client,${{ matrix.os }}
          name: client-${{ matrix.os }}
  #
  # CLIENT (types tests only)
  #
  client-types:
    timeout-minutes: 10
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test src/__tests__/types/types.test.ts
        working-directory: src/packages/client
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/client/src/__tests__/coverage/clover.xml
          flags: client-types,${{ matrix.os }}
          name: client-types-${{ matrix.os }}

  #
  # SDK
  #
  sdk:
    timeout-minutes: 5
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]
        node: [12]

    steps:
      - uses: actions/checkout@v2
          
      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/sdk
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/sdk/src/__tests__/coverage/clover.xml
          flags: sdk,${{ matrix.os }}
          name: sdk-${{ matrix.os }}

  #
  # MIGRATE
  #
  migrate:
    timeout-minutes: 7
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]
        node: [12]

    steps:
      - uses: actions/checkout@v2
          
      - run: docker-compose -f src/docker/docker-compose.yml up --detach postgres

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm i sqlite3@5.0.2 --unsafe-perm --reporter=silent
        working-directory: src/packages/cli

      - run: pnpm run test
        working-directory: src/packages/migrate
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          TEST_POSTGRES_URI: postgres://prisma:prisma@localhost:5432/tests
          TEST_POSTGRES_URI_MIGRATE: postgres://prisma:prisma@localhost:5432/tests-migrate
          TEST_POSTGRES_SHADOWDB_URI_MIGRATE: postgres://prisma:prisma@localhost:5432/tests-migrate-shadowdb

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/migrate/src/__tests__/coverage/clover.xml
          flags: migrate,${{ matrix.os }}
          name: migrate-${{ matrix.os }}
  #
  # All the other packages!
  #
  others:
    timeout-minutes: 10
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]
        node: [12]

    steps:
      - uses: actions/checkout@v2
          
      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        name: "debug"
        working-directory: src/packages/debug
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/debug/src/__tests__/coverage/clover.xml
          flags: debug,${{ matrix.os }}
          name: debug-${{ matrix.os }}

      - run: pnpm run test
        name: "engine-core"
        working-directory: src/packages/engine-core
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/engine-core/src/__tests__/coverage/clover.xml
          flags: engine-core,${{ matrix.os }}
          name: engine-core-${{ matrix.os }}

      - run: pnpm run test
        name: "fetch-engine"
        working-directory: src/packages/fetch-engine
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          
      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/fetch-engine/src/__tests__/coverage/clover.xml
          flags: fetch-engine,${{ matrix.os }}
          name: fetch-engine-${{ matrix.os }}

      - run: pnpm run test
        name: "generator-helper"
        working-directory: src/packages/generator-helper
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/generator-helper/src/__tests__/coverage/clover.xml
          flags: generator-helper,${{ matrix.os }}
          name: generator-helper-${{ matrix.os }}

      - run: pnpm run test
        name: "get-platform"
        working-directory: src/packages/get-platform
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - uses: codecov/codecov-action@v1
        with:
          files: ./src/packages/get-platform/src/__tests__/coverage/clover.xml
          flags: get-platform,${{ matrix.os }}
          name: get-platform-${{ matrix.os }}
