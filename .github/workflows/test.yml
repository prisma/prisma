name: Node.js CI

# Run on push only for master, if not it will trigger push & pull_request on PRs
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  #
  # CLI-POSTGRESQL
  #
  cli-postgresql:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    services:
      postgres:
        image: postgres:9
        env:
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test:postgresql
        working-directory: src/packages/cli
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          TEST_POSTGRES_URI: postgres://prisma:prisma@localhost:${{ job.services.postgres.ports[5432] }}/postgres

  #
  # CLI-MYSQL
  #
  cli-mysql:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    services:
      # mysql:8.0 would not work as we use `mariadb` node lib and it doesn't support the latest default password algorithm
      # https://stackoverflow.com/questions/60902904/how-to-pass-mysql-native-password-to-mysql-service-in-github-actions
      mysql:
        image: bitnami/mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: tests
          MYSQL_USER: prisma
          MYSQL_PASSWORD: prisma
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test:mysql
        working-directory: src/packages/cli
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          TEST_MYSQL_URI: mysql://prisma:prisma@localhost:${{ job.services.mysql.ports[3306] }}/tests

  #
  # CLI-MARIADB
  #
  cli-mariadb:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    services:
      mariadb:
        image: mariadb:10
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: tests
          MYSQL_USER: prisma
          MYSQL_PASSWORD: prisma
        ports:
          - 3306

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test:mariadb
        working-directory: src/packages/cli
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          TEST_MARIADB_URI: mysql://prisma:prisma@localhost:${{ job.services.mariadb.ports[3306] }}/tests

  #
  # CLI-SQLITE
  #
  cli-sqlite:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm i sqlite3@4 --unsafe-perm --reporter=silent
        working-directory: src/packages/cli

      - run: pnpm run test:sqlite
        working-directory: src/packages/cli
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

  #
  # CLI-COMMANDS
  #
  cli-commands:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test:commands
        working-directory: src/packages/cli
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

  #
  # CLIENT
  #
  client:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    services:
      postgres:
        image: postgres:9
        env:
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/client
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          TEST_POSTGRES_URI: postgres://prisma:prisma@localhost:${{ job.services.postgres.ports[5432] }}/postgres

  #
  # SDK
  #
  sdk:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/sdk
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

  #
  # DEBUG
  #
  debug:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/debug
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

  #
  # ENGINE-CORE
  #
  engine-core:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/engine-core
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

  #
  # FETCH-ENGINE
  #
  fetch-engine:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/fetch-engine
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

  #
  # GENERATOR-HELPER
  #
  generator-helper:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/generator-helper
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

  #
  # GET-PLATFORM
  #
  get-platform:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/get-platform
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

  #
  # MIGRATE
  #
  migrate:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm i sqlite3@4 --unsafe-perm --reporter=silent
        working-directory: src/packages/cli

      - run: pnpm run test
        working-directory: src/packages/migrate
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

  #
  # INTROSPECTION
  #
  introspection:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [12]

    services:
      postgres:
        image: postgres:9
        env:
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm run test
        working-directory: src/packages/introspection
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          TEST_POSTGRES_URI: postgres://prisma:prisma@localhost:${{ job.services.postgres.ports[5432] }}/postgres
