name: CI
# Run on push only for main, if not it will trigger push & pull_request on PRs at the same time
on:
  push:
    branches:
      - main
    paths-ignore:
      # Any update here needs to be done for
      # - `pull_request` see below
      - '*.md'
      - '.devcontainer/**'
      - '.vscode/**'
      - '.github/ISSUE_TEMPLATE/**'
      - 'LICENSE'
      - '.github/CODEOWNERS'
      - '.github/DISCUSSION_TEMPLATE/**'
      - '.dockerignore'
      - '*.bench.ts'
      - 'scripts/ci/publish.ts'
      - 'graphs/**'
  pull_request:
    paths-ignore:
      # Any update here needs to be done for
      # - `push`see before
      - '*.md'
      - '.devcontainer/**'
      - '.vscode/**'
      - '.github/ISSUE_TEMPLATE/**'
      - 'LICENSE'
      - '.github/CODEOWNERS'
      - '.github/DISCUSSION_TEMPLATE/**'
      - '.dockerignore'
      - '*.bench.ts'
      - 'scripts/ci/publish.ts'
      - 'graphs/**'
  workflow_dispatch:

jobs:
  detect_jobs_to_run:
    name: Detect jobs to run
    runs-on: ubuntu-latest
    outputs:
      jobs: ${{ steps.detect.outputs.jobs }}
      queryEngine: ${{ steps.enginesOutput.outputs.queryEngine }}
    steps:
      - uses: actions/checkout@v3

      - id: files
        uses: Ana06/get-changed-files@v2.2.0 # it's a fork of jitterbit/get-changed-files@v1 which works better with pull requests
        with:
          format: 'json'
      - id: detect
        run: ./.github/workflows/scripts/detect-jobs-to-run.js <<< '${{ steps.files.outputs.all }}'

      - name: Debug Pull Request Event
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Pull Request: ${{ github.event.pull_request.number }}"
          echo "Pull Request Author: ${{ github.event.pull_request.user.login }}"
          echo "Pull Request Author Association: ${{ github.event.pull_request.author_association }}"
          echo "Pull Request Body contains /integration: ${{ contains(github.event.pull_request.body, '/integration') }}"

      - name: Find "ci test all" comment
        uses: peter-evans/find-comment@v2
        id: findTestAllComment
        if: ${{ github.event_name == 'pull_request' }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: 'ci test all'
      - id: enginesOutput
        name: Decide on which engine types to run the next workflow
        run: |
          if [ -z "${{ steps.findTestAllComment.outputs.comment-id }}" ]; then
            echo 'queryEngine=["library"]' >> $GITHUB_OUTPUT
          else
            echo 'queryEngine=["library","binary"]' >> $GITHUB_OUTPUT
          fi

      - name: Trigger npm release workflow for integration release
        # See https://docs.github.com/en/graphql/reference/enums
        # https://michaelheap.com/github-actions-check-permission/
        # Check if
        # - the PR body contains `/integration`
        # - the PR author has permissions to trigger the workflow (must be part of the org or a collaborator)
        if: |
          github.event_name == 'pull_request' &&
          contains(github.event.pull_request.body, '/integration') && 
          (
            github.event.pull_request.author_association == 'OWNER' ||
            github.event.pull_request.author_association == 'MEMBER' ||
            github.event.pull_request.author_association == 'COLLABORATOR' ||
            github.event.pull_request.author_association == 'CONTRIBUTOR'
          )
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: release-ci.yml
          token: ${{ secrets.BOT_TOKEN }}
          inputs: '{ "forceIntegrationRelease": "true" }'
          ref: ${{ github.event.pull_request.head.ref }}

  run_tests:
    needs: detect_jobs_to_run
    uses: ./.github/workflows/test-template.yml
    with:
      jobsToRun: ${{ needs.detect_jobs_to_run.outputs.jobs }}
      queryEngine: ${{ needs.detect_jobs_to_run.outputs.queryEngine }}
    secrets: inherit
