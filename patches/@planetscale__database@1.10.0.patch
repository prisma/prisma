diff --git a/dist/cjs/index.js b/dist/cjs/index.js
index 86f2e18ba661431d0dc4da39788ab36c79929576..1a8542be07bca6710c9df698a7b21b8d2cbacfc8 100644
--- a/dist/cjs/index.js
+++ b/dist/cjs/index.js
@@ -57,6 +57,7 @@ class Connection {
             this.config.password = url.password;
             this.config.host = url.hostname;
         }
+        this.http_or_https = this.config.host.includes('.psdb.cloud') ? 'https' : 'http';
     }
     async transaction(fn) {
         const conn = new Connection(this.config);
@@ -76,7 +77,7 @@ class Connection {
         await this.createSession();
     }
     async execute(query, args = null, options = defaultExecuteOptions) {
-        const url = new URL('/psdb.v1alpha1.Database/Execute', `https://${this.config.host}`);
+        const url = new URL('/psdb.v1alpha1.Database/Execute', `${this.http_or_https}://${this.config.host}`);
         const formatter = this.config.format || sanitization_js_1.format;
         const sql = args ? formatter(query, args) : query;
         const saved = await postJSON(this.config, url, { query: sql, session: this.session });
@@ -112,7 +113,7 @@ class Connection {
         };
     }
     async createSession() {
-        const url = new URL('/psdb.v1alpha1.Database/CreateSession', `https://${this.config.host}`);
+        const url = new URL('/psdb.v1alpha1.Database/CreateSession', `${this.http_or_https}://${this.config.host}`);
         const { session } = await postJSON(this.config, url);
         this.session = session;
         return session;
diff --git a/dist/index.js b/dist/index.js
index 86c14a125b5a574a1ead6d38b53da980c05d3e0b..c985284afa5d84d7d37e4e65a57be3206e08a157 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -50,6 +50,7 @@ export class Connection {
             this.config.password = url.password;
             this.config.host = url.hostname;
         }
+        this.http_or_https = this.config.host.includes('.psdb.cloud') ? 'https' : 'http';
     }
     async transaction(fn) {
         const conn = new Connection(this.config);
@@ -69,7 +70,8 @@ export class Connection {
         await this.createSession();
     }
     async execute(query, args = null, options = defaultExecuteOptions) {
-        const url = new URL('/psdb.v1alpha1.Database/Execute', `https://${this.config.host}`);
+        const url = new URL('/psdb.v1alpha1.Database/Execute', `${this.http_or_https}://${this.config.host}`);
+
         const formatter = this.config.format || format;
         const sql = args ? formatter(query, args) : query;
         const saved = await postJSON(this.config, url, { query: sql, session: this.session });
@@ -105,7 +107,7 @@ export class Connection {
         };
     }
     async createSession() {
-        const url = new URL('/psdb.v1alpha1.Database/CreateSession', `https://${this.config.host}`);
+        const url = new URL('/psdb.v1alpha1.Database/CreateSession', `${this.http_or_https}://${this.config.host}`);
         const { session } = await postJSON(this.config, url);
         this.session = session;
         return session;